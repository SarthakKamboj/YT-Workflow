{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\dashboard\\\\workflows.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../../styles/scss/workflows.module.scss';\nimport classnames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setProfileImage } from '../../components/actions/profileImageActions';\nimport { setProfileName } from '../../components/actions/profileNameActions';\nimport { setJwt } from '../../components/actions/jwtAction';\nimport DashboardMenu from '../../components/DashboardMenu';\nimport WorkflowItem from '../../components/WorkflowItem';\nimport CreateWorkflowModal from '../../components/CreateWorkflowModal';\n\nvar Dashboard = function Dashboard() {\n  _s();\n\n  // const currentProfileImage = useSelector((state) => state.profileImage);\n  console.log('dashboard');\n\n  var _useState = useState(null),\n      workflows = _useState[0],\n      setWorkflows = _useState[1];\n\n  var _useState2 = useState(false),\n      displayModal = _useState2[0],\n      setDisplayModal = _useState2[1];\n\n  var jwtToken = useSelector(function (state) {\n    return state.jwtToken;\n  }); // console.log('jwtToken: ' + (jwtToken === ''));\n\n  var dispatch = useDispatch();\n  var state = useSelector(function (state) {\n    return state;\n  });\n  console.log(state); // if (jwtToken === '') {\n  // \treturn <p>Loading</p>;\n  // }\n\n  var getNewJwtToken = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var refreshToken, data, dataStringified, newAccessTokenRes, newAccessTokenJson, newJwtToken;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              refreshToken = localStorage.getItem('refresh-token');\n              data = {\n                refresh: refreshToken\n              };\n              dataStringified = JSON.stringify(data);\n              _context.next = 5;\n              return fetch('http://127.0.0.1:8000/api/refresh', {\n                method: 'POST',\n                body: dataStringified,\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              newAccessTokenRes = _context.sent;\n              _context.next = 8;\n              return newAccessTokenRes.json();\n\n            case 8:\n              newAccessTokenJson = _context.sent;\n              newJwtToken = newAccessTokenJson.access; // dispatch(setJwt(newJwtToken));\n              // const workflowsResponse = await fetch('http://localhost:8000/get-workflows', {\n              // \theaders: {\n              // \t\tAuthorization: 'Bearer ' + newJwtToken\n              // \t}\n              // });\n              // console.log(workflowsResponse);\n              // const workflowsJson = await workflowsResponse.json();\n              // if (workflowsJson.code) {\n              // \tconsole.log('jwt was not correct');\n              // \tawait getNewJwtToken();\n              // \treturn;\n              // }\n              // setWorkflows(workflowsJson['workflows']);\n              // console.log(workflowsJson);\n              // await getWorkflows();\n              // window.location = window.location.href;\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getNewJwtToken() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getWorkflows = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var jwtBearerString, workflowsResponse, workflowsJson;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // console.log('in workflows.js');]\n              // console.log(jwtToken);\n              jwtBearerString = 'Bearer ' + jwtToken; // console.log(jwtBearerString);\n\n              _context2.next = 3;\n              return fetch('http://localhost:8000/get-workflows', {\n                headers: {\n                  Authorization: jwtBearerString\n                }\n              });\n\n            case 3:\n              workflowsResponse = _context2.sent;\n              _context2.next = 6;\n              return workflowsResponse.json();\n\n            case 6:\n              workflowsJson = _context2.sent;\n\n              if (!workflowsJson.code) {\n                _context2.next = 9;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 9:\n              setWorkflows(workflowsJson['workflows']); // console.log(workflowsJson);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getWorkflows() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    console.log('use effect');\n    getWorkflows();\n  }, []);\n\n  var toggleModalVisibility = function toggleModalVisibility() {\n    setDisplayModal(!displayModal);\n  };\n\n  return __jsx(\"main\", {\n    className: styles.workflowsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.workflowsMenuContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.workflowsBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, !workflows ? __jsx(\"p\", {\n    className: styles.noWorkflows,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, \"You don't have any workflows. Let's get one started!\") : __jsx(\"div\", {\n    className: styles.workflowList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }, workflows.map(function (workflow) {\n    return __jsx(WorkflowItem, {\n      workflow: workflow,\n      key: workflow.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 36\n      }\n    });\n  })), __jsx(\"div\", {\n    className: styles.addWorkflowBtn,\n    onClick: function onClick() {\n      return toggleModalVisibility();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, \"Add Workflow\")));\n}; // export async function getStaticProps() {\n// \t// const profileImage = 'https://i.imgur.com/0byOhwQ.jpg';\n// \t// const profileName = 'Sarthak Kamboj';\n// \t// return {\n// \t// \tprops: {\n// \t// \t\tprofileImage,\n// \t// \t\tprofileName\n// \t// \t}\n// \t// };\n// }\n\n\n_s(Dashboard, \"KtECZcbYXV6Wp50Jsy5QbuwjK8I=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/dashboard/workflows.js"],"names":["styles","classnames","useEffect","useState","useSelector","useDispatch","setProfileImage","setProfileName","setJwt","DashboardMenu","WorkflowItem","CreateWorkflowModal","Dashboard","console","log","workflows","setWorkflows","displayModal","setDisplayModal","jwtToken","state","dispatch","getNewJwtToken","refreshToken","localStorage","getItem","data","refresh","dataStringified","JSON","stringify","fetch","method","body","headers","newAccessTokenRes","json","newAccessTokenJson","newJwtToken","access","getWorkflows","jwtBearerString","Authorization","workflowsResponse","workflowsJson","code","toggleModalVisibility","workflowsContainer","workflowsMenuContainer","workflowsBody","noWorkflows","workflowList","map","workflow","id","addWorkflowBtn"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yCAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,8CAAhC;AACA,SAASC,cAAT,QAA+B,6CAA/B;AACA,SAASC,MAAT,QAAuB,oCAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAFuB,kBAGaX,QAAQ,CAAC,IAAD,CAHrB;AAAA,MAGfY,SAHe;AAAA,MAGJC,YAHI;;AAAA,mBAImBb,QAAQ,CAAC,KAAD,CAJ3B;AAAA,MAIfc,YAJe;AAAA,MAIDC,eAJC;;AAKvB,MAAMC,QAAQ,GAAGf,WAAW,CAAC,UAACgB,KAAD;AAAA,WAAWA,KAAK,CAACD,QAAjB;AAAA,GAAD,CAA5B,CALuB,CAMvB;;AACA,MAAME,QAAQ,GAAGhB,WAAW,EAA5B;AACA,MAAMe,KAAK,GAAGhB,WAAW,CAAC,UAACgB,KAAD;AAAA,WAAWA,KAAX;AAAA,GAAD,CAAzB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ,EATuB,CAWvB;AACA;AACA;;AAEA,MAAME,cAAc;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,cAAAA,YADgB,GACDC,YAAY,CAACC,OAAb,CAAqB,eAArB,CADC;AAEhBC,cAAAA,IAFgB,GAET;AACZC,gBAAAA,OAAO,EAAEJ;AADG,eAFS;AAKhBK,cAAAA,eALgB,GAKEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CALF;AAAA;AAAA,qBAMUK,KAAK,CAAC,mCAAD,EAAsC;AAC1EC,gBAAAA,MAAM,EAAE,MADkE;AAE1EC,gBAAAA,IAAI,EAAEL,eAFoE;AAG1EM,gBAAAA,OAAO,EAAE;AACR,kCAAgB;AADR;AAHiE,eAAtC,CANf;;AAAA;AAMhBC,cAAAA,iBANgB;AAAA;AAAA,qBAaWA,iBAAiB,CAACC,IAAlB,EAbX;;AAAA;AAahBC,cAAAA,kBAbgB;AAchBC,cAAAA,WAdgB,GAcFD,kBAAkB,CAACE,MAdjB,EAetB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA/BsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdjB,cAAc;AAAA;AAAA;AAAA,KAApB;;AAkCA,MAAMkB,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB;AACA;AACMC,cAAAA,eAHc,GAGI,YAAYtB,QAHhB,EAIpB;;AAJoB;AAAA,qBAKYY,KAAK,CAAC,qCAAD,EAAwC;AAC5EG,gBAAAA,OAAO,EAAE;AACRQ,kBAAAA,aAAa,EAAED;AADP;AADmE,eAAxC,CALjB;;AAAA;AAKdE,cAAAA,iBALc;AAAA;AAAA,qBAUQA,iBAAiB,CAACP,IAAlB,EAVR;;AAAA;AAUdQ,cAAAA,aAVc;;AAAA,mBAYhBA,aAAa,CAACC,IAZE;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAiBpB7B,cAAAA,YAAY,CAAC4B,aAAa,CAAC,WAAD,CAAd,CAAZ,CAjBoB,CAkBpB;;AAlBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZJ,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAqBAtC,EAAAA,SAAS,CAAC,YAAM;AACfW,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA0B,IAAAA,YAAY;AACZ,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AACnC5B,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACA,GAFD;;AAIA,SACC;AAAM,IAAA,SAAS,EAAEjB,MAAM,CAAC+C,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAE/C,MAAM,CAACgD,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,EAIC;AAAK,IAAA,SAAS,EAAEhD,MAAM,CAACiD,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAAClC,SAAD,GACA;AAAG,IAAA,SAAS,EAAEf,MAAM,CAACkD,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADA,GAGA;AAAK,IAAA,SAAS,EAAElD,MAAM,CAACmD,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEpC,SAAS,CAACqC,GAAV,CAAc,UAACC,QAAD;AAAA,WAAc,MAAC,YAAD;AAAc,MAAA,QAAQ,EAAEA,QAAxB;AAAkC,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAAA,GAAd,CADF,CAJF,EAqBC;AAAK,IAAA,SAAS,EAAEtD,MAAM,CAACuD,cAAvB;AAAuC,IAAA,OAAO,EAAE;AAAA,aAAMT,qBAAqB,EAA3B;AAAA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBD,CAJD,CADD;AAkCA,CAjHD,C,CAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA5HMlC,S;UAKYR,W,EAEAC,W,EACHD,W;;;KARTQ,S;AA8HN,eAAeA,SAAf","sourcesContent":["import styles from '../../styles/scss/workflows.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setProfileImage } from '../../components/actions/profileImageActions';\r\nimport { setProfileName } from '../../components/actions/profileNameActions';\r\nimport { setJwt } from '../../components/actions/jwtAction';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\nimport WorkflowItem from '../../components/WorkflowItem';\r\nimport CreateWorkflowModal from '../../components/CreateWorkflowModal';\r\n\r\nconst Dashboard = () => {\r\n\t// const currentProfileImage = useSelector((state) => state.profileImage);\r\n\tconsole.log('dashboard');\r\n\tconst [ workflows, setWorkflows ] = useState(null);\r\n\tconst [ displayModal, setDisplayModal ] = useState(false);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\t// console.log('jwtToken: ' + (jwtToken === ''));\r\n\tconst dispatch = useDispatch();\r\n\tconst state = useSelector((state) => state);\r\n\tconsole.log(state);\r\n\r\n\t// if (jwtToken === '') {\r\n\t// \treturn <p>Loading</p>;\r\n\t// }\r\n\r\n\tconst getNewJwtToken = async () => {\r\n\t\tconst refreshToken = localStorage.getItem('refresh-token');\r\n\t\tconst data = {\r\n\t\t\trefresh: refreshToken\r\n\t\t};\r\n\t\tconst dataStringified = JSON.stringify(data);\r\n\t\tconst newAccessTokenRes = await fetch('http://127.0.0.1:8000/api/refresh', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: dataStringified,\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst newAccessTokenJson = await newAccessTokenRes.json();\r\n\t\tconst newJwtToken = newAccessTokenJson.access;\r\n\t\t// dispatch(setJwt(newJwtToken));\r\n\t\t// const workflowsResponse = await fetch('http://localhost:8000/get-workflows', {\r\n\t\t// \theaders: {\r\n\t\t// \t\tAuthorization: 'Bearer ' + newJwtToken\r\n\t\t// \t}\r\n\t\t// });\r\n\t\t// console.log(workflowsResponse);\r\n\t\t// const workflowsJson = await workflowsResponse.json();\r\n\t\t// if (workflowsJson.code) {\r\n\t\t// \tconsole.log('jwt was not correct');\r\n\t\t// \tawait getNewJwtToken();\r\n\t\t// \treturn;\r\n\t\t// }\r\n\t\t// setWorkflows(workflowsJson['workflows']);\r\n\t\t// console.log(workflowsJson);\r\n\t\t// await getWorkflows();\r\n\t\t// window.location = window.location.href;\r\n\t};\r\n\r\n\tconst getWorkflows = async () => {\r\n\t\t// console.log('in workflows.js');]\r\n\t\t// console.log(jwtToken);\r\n\t\tconst jwtBearerString = 'Bearer ' + jwtToken;\r\n\t\t// console.log(jwtBearerString);\r\n\t\tconst workflowsResponse = await fetch('http://localhost:8000/get-workflows', {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: jwtBearerString\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst workflowsJson = await workflowsResponse.json();\r\n\t\t// console.log(workflowsJson);\r\n\t\tif (workflowsJson.code) {\r\n\t\t\t// console.log('jwt was not correct');\r\n\t\t\t// await getNewJwtToken();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetWorkflows(workflowsJson['workflows']);\r\n\t\t// console.log(workflowsJson);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('use effect');\r\n\t\tgetWorkflows();\r\n\t}, []);\r\n\r\n\tconst toggleModalVisibility = () => {\r\n\t\tsetDisplayModal(!displayModal);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className={styles.workflowsContainer}>\r\n\t\t\t<div className={styles.workflowsMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.workflowsBody}>\r\n\t\t\t\t{!workflows ? (\r\n\t\t\t\t\t<p className={styles.noWorkflows}>You don't have any workflows. Let's get one started!</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={styles.workflowList}>\r\n\t\t\t\t\t\t{workflows.map((workflow) => <WorkflowItem workflow={workflow} key={workflow.id} />)}\r\n\t\t\t\t\t\t{/* {workflows.map((workflow) => (\r\n\t\t\t\t\t\t\t<WorkflowItem workflow={workflow} key={workflow.title} />\r\n\t\t\t\t\t\t\t// <div className={styles.workflow} key={index}>\r\n\t\t\t\t\t\t\t// <div className={styles.workflowTitle}>{workflow.title}</div>\r\n\t\t\t\t\t\t\t// \t<ul className={styles.workflowKeywords}>\r\n\t\t\t\t\t\t\t// \t\t{workflow.keywords.map(keyword=>(\r\n\t\t\t\t\t\t\t// \t\t\t<li key={keyword}>\r\n\t\t\t\t\t\t\t// \t\t\t\t{capitalize(keyword)}\r\n\t\t\t\t\t\t\t// \t\t\t</li>\r\n\t\t\t\t\t\t\t// \t\t))}\r\n\t\t\t\t\t\t\t// \t</ul>\r\n\t\t\t\t\t\t\t// </div>\r\n\t\t\t\t\t\t))} */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className={styles.addWorkflowBtn} onClick={() => toggleModalVisibility()}>\r\n\t\t\t\t\tAdd Workflow\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <CreateWorkflowModal displayModal={displayModal} toggleModalVisibility={toggleModalVisibility} /> */}\r\n\t\t\t\t{/* <Link href=\"\" */}\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\n// export async function getStaticProps() {\r\n// \t// const profileImage = 'https://i.imgur.com/0byOhwQ.jpg';\r\n// \t// const profileName = 'Sarthak Kamboj';\r\n// \t// return {\r\n// \t// \tprops: {\r\n// \t// \t\tprofileImage,\r\n// \t// \t\tprofileName\r\n// \t// \t}\r\n// \t// };\r\n// }\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}