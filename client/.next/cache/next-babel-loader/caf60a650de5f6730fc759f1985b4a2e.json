{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowTitle.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useState, useEffect } from 'react';\nimport styles from '../styles/scss/workflow-title.module.scss';\nimport { useSelector } from 'react-redux';\n\nconst WorkflowTitle = ({\n  oldTitle,\n  id\n}) => {\n  const titleInput = useRef(null);\n  const jwtToken = useSelector(state => state.jwtToken);\n  const inputLengthMultiplier = 18;\n\n  const pushTitleChangeToBackend = () => {\n    fetch(`http://localhost:8000/set-workflow-title/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwtToken\n      },\n      body: JSON.stringify({\n        title: titleInput.current.value\n      })\n    });\n  };\n\n  useEffect(() => {// titleInput.current.style.width =\n    // \t((titleInput.current.value.length + 1) * inputLengthMultiplier).toString() + 'px';\n  }, []);\n\n  const handleChange = () => {\n    if (titleInput.current.value !== oldTitle) {\n      pushTitleChangeToBackend();\n    }\n  };\n\n  const changeWidth = () => {\n    titleInput.current.style.width = (titleInput.current.value.length * inputLengthMultiplier).toString() + 'px';\n    console.log(((titleInput.current.value.length + 1) * 8).toString() + 'px');\n  };\n\n  return (// <input\n    // \tref={titleInput}\n    // \tclassName={styles.titleInput}\n    // \tonBlur={handleChange}\n    // \ttabIndex={0}\n    // defaultValue={oldTitle ? oldTitle : 'Create title'}\n    // defaultValue={oldTitle}\n    // onChange={changeWidth}\n    // onLoad={changeWidth}\n    // />\n    __jsx(\"h2\", {\n      contentEditable: 'plaintext-only',\n      className: styles.titleInput,\n      onBlur: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }\n    })\n  );\n};\n\nexport default WorkflowTitle;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowTitle.js"],"names":["useRef","useState","useEffect","styles","useSelector","WorkflowTitle","oldTitle","id","titleInput","jwtToken","state","inputLengthMultiplier","pushTitleChangeToBackend","fetch","method","headers","Authorization","body","JSON","stringify","title","current","value","handleChange","changeWidth","style","width","length","toString","console","log"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAsB;AAC3C,QAAMC,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMS,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAME,qBAAqB,GAAG,EAA9B;;AAEA,QAAMC,wBAAwB,GAAG,MAAM;AACtCC,IAAAA,KAAK,CAAE,4CAA2CN,EAAG,EAAhD,EAAmD;AACvDO,MAAAA,MAAM,EAAE,KAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,EAAE,YAAYP;AAFnB,OAF8C;AAMvDQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,QAAAA,KAAK,EAAEZ,UAAU,CAACa,OAAX,CAAmBC;AADN,OAAf;AANiD,KAAnD,CAAL;AAUA,GAXD;;AAaApB,EAAAA,SAAS,CAAC,MAAM,CACf;AACA;AACA,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMqB,YAAY,GAAG,MAAM;AAC1B,QAAIf,UAAU,CAACa,OAAX,CAAmBC,KAAnB,KAA6BhB,QAAjC,EAA2C;AAC1CM,MAAAA,wBAAwB;AACxB;AACD,GAJD;;AAMA,QAAMY,WAAW,GAAG,MAAM;AACzBhB,IAAAA,UAAU,CAACa,OAAX,CAAmBI,KAAnB,CAAyBC,KAAzB,GAAiC,CAAClB,UAAU,CAACa,OAAX,CAAmBC,KAAnB,CAAyBK,MAAzB,GAAkChB,qBAAnC,EAA0DiB,QAA1D,KAAuE,IAAxG;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,CAACtB,UAAU,CAACa,OAAX,CAAmBC,KAAnB,CAAyBK,MAAzB,GAAkC,CAAnC,IAAwC,CAAzC,EAA4CC,QAA5C,KAAyD,IAArE;AACA,GAHD;;AAKA,SACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,MAAA,eAAe,EAAE,gBAArB;AAAuC,MAAA,SAAS,EAAEzB,MAAM,CAACK,UAAzD;AAAqE,MAAA,MAAM,EAAEe,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXD;AAaA,CA/CD;;AAiDA,eAAelB,aAAf","sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\nimport styles from '../styles/scss/workflow-title.module.scss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WorkflowTitle = ({ oldTitle, id }) => {\r\n\tconst titleInput = useRef(null);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\tconst inputLengthMultiplier = 18;\r\n\r\n\tconst pushTitleChangeToBackend = () => {\r\n\t\tfetch(`http://localhost:8000/set-workflow-title/${id}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttitle: titleInput.current.value\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// titleInput.current.style.width =\r\n\t\t// \t((titleInput.current.value.length + 1) * inputLengthMultiplier).toString() + 'px';\r\n\t}, []);\r\n\r\n\tconst handleChange = () => {\r\n\t\tif (titleInput.current.value !== oldTitle) {\r\n\t\t\tpushTitleChangeToBackend();\r\n\t\t}\r\n\t};\r\n\r\n\tconst changeWidth = () => {\r\n\t\ttitleInput.current.style.width = (titleInput.current.value.length * inputLengthMultiplier).toString() + 'px';\r\n\t\tconsole.log(((titleInput.current.value.length + 1) * 8).toString() + 'px');\r\n\t};\r\n\r\n\treturn (\r\n\t\t// <input\r\n\t\t// \tref={titleInput}\r\n\t\t// \tclassName={styles.titleInput}\r\n\t\t// \tonBlur={handleChange}\r\n\t\t// \ttabIndex={0}\r\n\t\t// defaultValue={oldTitle ? oldTitle : 'Create title'}\r\n\t\t// defaultValue={oldTitle}\r\n\t\t// onChange={changeWidth}\r\n\t\t// onLoad={changeWidth}\r\n\t\t// />\r\n\t\t<h2 contentEditable={'plaintext-only'} className={styles.titleInput} onBlur={handleChange} />\r\n\t);\r\n};\r\n\r\nexport default WorkflowTitle;\r\n"]},"metadata":{},"sourceType":"module"}