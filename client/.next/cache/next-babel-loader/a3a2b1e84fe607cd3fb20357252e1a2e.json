{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/profile.module.scss';\nimport { useEffect, useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nvar Profile = function Profile() {\n  _s();\n\n  var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  var _useState = useState(''),\n      currentDate = _useState[0],\n      setCurrentDate = _useState[1];\n\n  var profileImageFormRef = useRef();\n  var jwtToken = useSelector(function (state) {\n    return state.jwtToken;\n  });\n\n  var _useState2 = useState(''),\n      profileImage = _useState2[0],\n      setProfileImage = _useState2[1];\n\n  var _useState3 = useState(''),\n      profileUsername = _useState3[0],\n      setProfileUsername = _useState3[1];\n\n  var _useState4 = useState(''),\n      displayName = _useState4[0],\n      setDisplayName = _useState4[1];\n\n  var capitalize = function capitalize(str) {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n  };\n\n  var getProfileImage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var profileImageUrlRes, profileImageUrlJson;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:8000/get-profile-image', {\n                headers: {\n                  'Content-type': 'application/json',\n                  Authorization: 'Bearer ' + jwtToken\n                }\n              });\n\n            case 2:\n              profileImageUrlRes = _context.sent;\n\n              if (!(profileImageUrlRes.status === 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return profileImageUrlRes.json();\n\n            case 6:\n              profileImageUrlJson = _context.sent;\n              setProfileImage(profileImageUrlJson['msg']);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getProfileImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getProfileUsername = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var profileUsernameRes, profileUsernameJson;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('http://localhost:8000/get-profile-username', {\n                headers: {\n                  'Content-type': 'application/json',\n                  Authorization: 'Bearer ' + jwtToken\n                }\n              });\n\n            case 2:\n              profileUsernameRes = _context2.sent;\n\n              if (!(profileUsernameRes.status === 200)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 6;\n              return profileUsernameRes.json();\n\n            case 6:\n              profileUsernameJson = _context2.sent;\n              setProfileUsername(profileUsernameJson['msg']);\n              setDisplayName(capitalize(profileUsernameJson['msg'].split(' ')[0]));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getProfileUsername() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var updateProfileImage = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var profileForm, res, resJson;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              profileForm = new FormData(profileImageFormRef.current);\n              _context3.next = 3;\n              return fetch('http://localhost:8000/upload-profile-image', {\n                method: 'POST',\n                headers: {\n                  Authorization: 'Bearer ' + jwtToken\n                },\n                body: profileForm\n              });\n\n            case 3:\n              res = _context3.sent;\n\n              if (!(res.status !== 200)) {\n                _context3.next = 8;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 8:\n              _context3.next = 10;\n              return res.json();\n\n            case 10:\n              resJson = _context3.sent;\n              console.log(resJson);\n\n            case 12:\n              getProfileImage();\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function updateProfileImage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var currentDateInfo = new Date();\n    var month = months[currentDateInfo.getMonth()];\n    var day = currentDateInfo.getDate();\n    var year = currentDateInfo.getFullYear();\n    setCurrentDate(month + ' ' + day + ', ' + year);\n    getProfileImage();\n    getProfileUsername();\n  }, []);\n  return __jsx(\"div\", {\n    className: styles.profileContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.imageSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    className: styles.profileImage,\n    src: profileImage,\n    alt: profileUsername.split(' ')[0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    className: styles.inputSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    className: styles.editIcon,\n    icon: 'user-edit',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  })), __jsx(\"form\", {\n    encType: \"multipart/form-data\",\n    ref: profileImageFormRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: updateProfileImage,\n    accept: 'image/*',\n    className: styles.profileImageInput,\n    name: \"image\",\n    title: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }))), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }\n  }, \"Hey \", displayName, \"!\"), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }\n  }, currentDate));\n};\n\n_s(Profile, \"Mk++FpkwKJ4MaZ5bprvV/t3RHN4=\", false, function () {\n  return [useSelector];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/Profile.js"],"names":["styles","useEffect","useState","useRef","useSelector","useDispatch","FontAwesomeIcon","Profile","months","currentDate","setCurrentDate","profileImageFormRef","jwtToken","state","profileImage","setProfileImage","profileUsername","setProfileUsername","displayName","setDisplayName","capitalize","str","slice","toUpperCase","getProfileImage","fetch","headers","Authorization","profileImageUrlRes","status","json","profileImageUrlJson","getProfileUsername","profileUsernameRes","profileUsernameJson","split","updateProfileImage","profileForm","FormData","current","method","body","res","resJson","console","log","currentDateInfo","Date","month","getMonth","day","getDate","year","getFullYear","profileContainer","imageSection","inputSection","editIcon","profileImageInput"],"mappings":"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","sourcesContent":["import styles from '../styles/scss/profile.module.scss';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Profile = () => {\r\n\tconst months = [\r\n\t\t'January',\r\n\t\t'February',\r\n\t\t'March',\r\n\t\t'April',\r\n\t\t'May',\r\n\t\t'June',\r\n\t\t'July',\r\n\t\t'August',\r\n\t\t'September',\r\n\t\t'October',\r\n\t\t'November',\r\n\t\t'December'\r\n\t];\r\n\tconst [ currentDate, setCurrentDate ] = useState('');\r\n\r\n\tconst profileImageFormRef = useRef();\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\r\n\tconst [ profileImage, setProfileImage ] = useState('');\r\n\tconst [ profileUsername, setProfileUsername ] = useState('');\r\n\tconst [ displayName, setDisplayName ] = useState('');\r\n\r\n\tconst capitalize = (str) => {\r\n\t\treturn str.slice(0, 1).toUpperCase() + str.slice(1);\r\n\t};\r\n\r\n\tconst getProfileImage = async () => {\r\n\t\tconst profileImageUrlRes = await fetch('http://localhost:8000/get-profile-image', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (profileImageUrlRes.status === 200) {\r\n\t\t\tconst profileImageUrlJson = await profileImageUrlRes.json();\r\n\t\t\tsetProfileImage(profileImageUrlJson['msg']);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getProfileUsername = async () => {\r\n\t\tconst profileUsernameRes = await fetch('http://localhost:8000/get-profile-username', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (profileUsernameRes.status === 200) {\r\n\t\t\tconst profileUsernameJson = await profileUsernameRes.json();\r\n\t\t\tsetProfileUsername(profileUsernameJson['msg']);\r\n\t\t\tsetDisplayName(capitalize(profileUsernameJson['msg'].split(' ')[0]));\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateProfileImage = async () => {\r\n\t\tconst profileForm = new FormData(profileImageFormRef.current);\r\n\t\tconst res = await fetch('http://localhost:8000/upload-profile-image', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: profileForm\r\n\t\t});\r\n\t\tif (res.status !== 200) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconsole.log(resJson);\r\n\t\t}\r\n\t\tgetProfileImage();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst currentDateInfo = new Date();\r\n\t\tconst month = months[currentDateInfo.getMonth()];\r\n\t\tconst day = currentDateInfo.getDate();\r\n\t\tconst year = currentDateInfo.getFullYear();\r\n\t\tsetCurrentDate(month + ' ' + day + ', ' + year);\r\n\t\tgetProfileImage();\r\n\t\tgetProfileUsername();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={styles.profileContainer}>\r\n\t\t\t<div className={styles.imageSection}>\r\n\t\t\t\t<img className={styles.profileImage} src={profileImage} alt={profileUsername.split(' ')[0]} />\r\n\t\t\t\t<span className={styles.inputSection}>\r\n\t\t\t\t\t<FontAwesomeIcon className={styles.editIcon} icon={'user-edit'} />\r\n\t\t\t\t</span>\r\n\t\t\t\t<form encType=\"multipart/form-data\" ref={profileImageFormRef}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tonChange={updateProfileImage}\r\n\t\t\t\t\t\taccept={'image/*'}\r\n\t\t\t\t\t\tclassName={styles.profileImageInput}\r\n\t\t\t\t\t\tname=\"image\"\r\n\t\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<h2>Hey {displayName}!</h2>\r\n\t\t\t<h5>{currentDate}</h5>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}