{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowTitle.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useState, useEffect } from 'react';\nimport styles from '../styles/scss/workflow-title.module.scss';\nimport { useSelector } from 'react-redux';\n\nconst WorkflowTitle = ({\n  oldTitle,\n  id\n}) => {\n  const titleInput = useRef(null);\n  const jwtToken = useSelector(state => state.jwtToken); // const [ title, setTitle ] = useState(oldTitle);\n\n  const pushTitleChangeToBackend = () => {\n    fetch(`http://localhost:8000/set-workflow-title/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwtToken\n      },\n      body: JSON.stringify({\n        title: titleInput.current.value\n      })\n    });\n  };\n\n  const handleChange = () => {\n    alert(titleInput.current.value);\n\n    if (titleInput.current.value !== oldTitle) {\n      pushTitleChangeToBackend();\n    }\n  };\n\n  return (// <h2\n    // \tcontentEditable=\"plaintext-only\"\n    // \tref={titleInput}\n    // \tclassName={styles.titleInput}\n    // \tonBlur={handleChange}\n    // \ttabIndex={0}\n    // >\n    // \t{oldTitle ? oldTitle : 'Create title'}\n    // </h2>\n    __jsx(\"input\", {\n      ref: titleInput,\n      className: styles.titleInput,\n      onBlur: handleChange,\n      tabIndex: 0,\n      defaultValue: oldTitle ? oldTitle : 'Create title',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }\n    })\n  );\n};\n\nexport default WorkflowTitle;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowTitle.js"],"names":["useRef","useState","useEffect","styles","useSelector","WorkflowTitle","oldTitle","id","titleInput","jwtToken","state","pushTitleChangeToBackend","fetch","method","headers","Authorization","body","JSON","stringify","title","current","value","handleChange","alert"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAsB;AAC3C,QAAMC,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMS,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B,CAF2C,CAG3C;;AAEA,QAAME,wBAAwB,GAAG,MAAM;AACtCC,IAAAA,KAAK,CAAE,4CAA2CL,EAAG,EAAhD,EAAmD;AACvDM,MAAAA,MAAM,EAAE,KAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,EAAE,YAAYN;AAFnB,OAF8C;AAMvDO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,QAAAA,KAAK,EAAEX,UAAU,CAACY,OAAX,CAAmBC;AADN,OAAf;AANiD,KAAnD,CAAL;AAUA,GAXD;;AAaA,QAAMC,YAAY,GAAG,MAAM;AAC1BC,IAAAA,KAAK,CAACf,UAAU,CAACY,OAAX,CAAmBC,KAApB,CAAL;;AACA,QAAIb,UAAU,CAACY,OAAX,CAAmBC,KAAnB,KAA6Bf,QAAjC,EAA2C;AAC1CK,MAAAA,wBAAwB;AACxB;AACD,GALD;;AAOA,SACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,MAAA,GAAG,EAAEH,UADN;AAEC,MAAA,SAAS,EAAEL,MAAM,CAACK,UAFnB;AAGC,MAAA,MAAM,EAAEc,YAHT;AAIC,MAAA,QAAQ,EAAE,CAJX;AAKC,MAAA,YAAY,EAAEhB,QAAQ,GAAGA,QAAH,GAAc,cALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVD;AAkBA,CA3CD;;AA6CA,eAAeD,aAAf","sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\nimport styles from '../styles/scss/workflow-title.module.scss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WorkflowTitle = ({ oldTitle, id }) => {\r\n\tconst titleInput = useRef(null);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\t// const [ title, setTitle ] = useState(oldTitle);\r\n\r\n\tconst pushTitleChangeToBackend = () => {\r\n\t\tfetch(`http://localhost:8000/set-workflow-title/${id}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttitle: titleInput.current.value\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = () => {\r\n\t\talert(titleInput.current.value);\r\n\t\tif (titleInput.current.value !== oldTitle) {\r\n\t\t\tpushTitleChangeToBackend();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t// <h2\r\n\t\t// \tcontentEditable=\"plaintext-only\"\r\n\t\t// \tref={titleInput}\r\n\t\t// \tclassName={styles.titleInput}\r\n\t\t// \tonBlur={handleChange}\r\n\t\t// \ttabIndex={0}\r\n\t\t// >\r\n\t\t// \t{oldTitle ? oldTitle : 'Create title'}\r\n\t\t// </h2>\r\n\t\t<input\r\n\t\t\tref={titleInput}\r\n\t\t\tclassName={styles.titleInput}\r\n\t\t\tonBlur={handleChange}\r\n\t\t\ttabIndex={0}\r\n\t\t\tdefaultValue={oldTitle ? oldTitle : 'Create title'}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default WorkflowTitle;\r\n"]},"metadata":{},"sourceType":"module"}