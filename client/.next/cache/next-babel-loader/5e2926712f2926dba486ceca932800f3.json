{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowStarredAndFinished.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../styles/scss/workflow-starred-finished.module.scss';\nimport classnames from 'classnames';\nimport { useState } from 'react';\n\nvar WorkflowStarredAndFinished = function WorkflowStarredAndFinished(_ref) {\n  _s();\n\n  var _classnames, _classnames2;\n\n  var oldStarred = _ref.oldStarred,\n      oldFinished = _ref.oldFinished,\n      id = _ref.id;\n\n  var _useState = useState(oldStarred),\n      starred = _useState[0],\n      setStarred = _useState[1];\n\n  var _useState2 = useState(oldFinished),\n      finished = _useState2[0],\n      setFinished = _useState2[1];\n\n  var toggleStarred = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setStarred(!starred);\n              _context.next = 3;\n              return fetch(\"http://localhost:8000/toggle-workflow-finished/\".concat(id));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function toggleStarred() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var toggleFinished = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setFinished(!finished);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function toggleFinished() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"star\",\n    className: classnames((_classnames = {}, _defineProperty(_classnames, styles.regular, true), _defineProperty(_classnames, styles.starred, starred), _classnames)),\n    onClick: toggleStarred,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }), __jsx(FontAwesomeIcon, {\n    icon: \"check\",\n    className: classnames((_classnames2 = {}, _defineProperty(_classnames2, styles.regular, true), _defineProperty(_classnames2, styles.finished, finished), _classnames2)),\n    onClick: toggleFinished,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }));\n};\n\n_s(WorkflowStarredAndFinished, \"tqN+LZnGEO33Or56YhCBpx7N8Ok=\");\n\n_c = WorkflowStarredAndFinished;\nexport default WorkflowStarredAndFinished;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkflowStarredAndFinished\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowStarredAndFinished.js"],"names":["FontAwesomeIcon","styles","classnames","useState","WorkflowStarredAndFinished","oldStarred","oldFinished","id","starred","setStarred","finished","setFinished","toggleStarred","fetch","toggleFinished","regular"],"mappings":";;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,gCAAhC;AACA,OAAOC,MAAP,MAAmB,sDAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,OAAqC;AAAA;;AAAA;;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBC,WAAsB,QAAtBA,WAAsB;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACvCJ,QAAQ,CAACE,UAAD,CAD+B;AAAA,MAC/DG,OAD+D;AAAA,MACtDC,UADsD;;AAAA,mBAErCN,QAAQ,CAACG,WAAD,CAF6B;AAAA,MAE/DI,QAF+D;AAAA,MAErDC,WAFqD;;AAIvE,MAAMC,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AACrBH,cAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AADqB;AAAA,qBAEfK,KAAK,0DAAmDN,EAAnD,EAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbK,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAIA,MAAME,cAAc;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AACtBH,cAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;;AADsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdI,cAAc;AAAA;AAAA;AAAA,KAApB;;AAIA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,eAAD;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,SAAS,EAAEZ,UAAU,iDAAID,MAAM,CAACc,OAAX,EAAqB,IAArB,gCAA4Bd,MAAM,CAACO,OAAnC,EAA6CA,OAA7C,gBAFtB;AAGC,IAAA,OAAO,EAAEI,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAMC,MAAC,eAAD;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,SAAS,EAAEV,UAAU,mDAAID,MAAM,CAACc,OAAX,EAAqB,IAArB,iCAA4Bd,MAAM,CAACS,QAAnC,EAA8CA,QAA9C,iBAFtB;AAGC,IAAA,OAAO,EAAEI,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADD;AAcA,CA1BD;;GAAMV,0B;;KAAAA,0B;AA4BN,eAAeA,0BAAf","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from '../styles/scss/workflow-starred-finished.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useState } from 'react';\r\n\r\nconst WorkflowStarredAndFinished = ({ oldStarred, oldFinished, id }) => {\r\n\tconst [ starred, setStarred ] = useState(oldStarred);\r\n\tconst [ finished, setFinished ] = useState(oldFinished);\r\n\r\n\tconst toggleStarred = async () => {\r\n\t\tsetStarred(!starred);\r\n\t\tawait fetch(`http://localhost:8000/toggle-workflow-finished/${id}`);\r\n\t};\r\n\tconst toggleFinished = async () => {\r\n\t\tsetFinished(!finished);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<FontAwesomeIcon\r\n\t\t\t\ticon=\"star\"\r\n\t\t\t\tclassName={classnames({ [styles.regular]: true, [styles.starred]: starred })}\r\n\t\t\t\tonClick={toggleStarred}\r\n\t\t\t/>\r\n\t\t\t<FontAwesomeIcon\r\n\t\t\t\ticon=\"check\"\r\n\t\t\t\tclassName={classnames({ [styles.regular]: true, [styles.finished]: finished })}\r\n\t\t\t\tonClick={toggleFinished}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default WorkflowStarredAndFinished;\r\n"]},"metadata":{},"sourceType":"module"}