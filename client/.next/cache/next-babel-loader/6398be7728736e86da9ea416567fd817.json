{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowStarredAndFinished.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../styles/scss/workflow-starred-finished.module.scss';\nimport classnames from 'classnames';\nimport { useState } from 'react';\n\nconst WorkflowStarredAndFinished = ({\n  oldStarred,\n  oldFinished,\n  id\n}) => {\n  const {\n    0: starred,\n    1: setStarred\n  } = useState(oldStarred);\n  const {\n    0: finished,\n    1: setFinished\n  } = useState(oldFinished);\n\n  const toggleStarred = async () => {\n    setStarred(!starred);\n    await fetch(`http://localhost:8000/toggle-workflow-finished/${id}`);\n  };\n\n  const toggleFinished = async () => {\n    setFinished(!finished);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"star\",\n    className: classnames({\n      [styles.regular]: true,\n      [styles.starred]: starred\n    }),\n    onClick: toggleStarred,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }), __jsx(FontAwesomeIcon, {\n    icon: \"check\",\n    className: classnames({\n      [styles.regular]: true,\n      [styles.finished]: finished\n    }),\n    onClick: toggleFinished,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default WorkflowStarredAndFinished;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowStarredAndFinished.js"],"names":["FontAwesomeIcon","styles","classnames","useState","WorkflowStarredAndFinished","oldStarred","oldFinished","id","starred","setStarred","finished","setFinished","toggleStarred","fetch","toggleFinished","regular"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,gCAAhC;AACA,OAAOC,MAAP,MAAmB,sDAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,0BAA0B,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA;AAA3B,CAAD,KAAqC;AACvE,QAAM;AAAA,OAAEC,OAAF;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAACE,UAAD,CAAxC;AACA,QAAM;AAAA,OAAEK,QAAF;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAACG,WAAD,CAA1C;;AAEA,QAAMM,aAAa,GAAG,YAAY;AACjCH,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACA,UAAMK,KAAK,CAAE,kDAAiDN,EAAG,EAAtD,CAAX;AACA,GAHD;;AAIA,QAAMO,cAAc,GAAG,YAAY;AAClCH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACA,GAFD;;AAIA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,eAAD;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,SAAS,EAAER,UAAU,CAAC;AAAE,OAACD,MAAM,CAACc,OAAR,GAAkB,IAApB;AAA0B,OAACd,MAAM,CAACO,OAAR,GAAkBA;AAA5C,KAAD,CAFtB;AAGC,IAAA,OAAO,EAAEI,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAMC,MAAC,eAAD;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,SAAS,EAAEV,UAAU,CAAC;AAAE,OAACD,MAAM,CAACc,OAAR,GAAkB,IAApB;AAA0B,OAACd,MAAM,CAACS,QAAR,GAAmBA;AAA7C,KAAD,CAFtB;AAGC,IAAA,OAAO,EAAEI,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADD;AAcA,CA1BD;;AA4BA,eAAeV,0BAAf","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from '../styles/scss/workflow-starred-finished.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useState } from 'react';\r\n\r\nconst WorkflowStarredAndFinished = ({ oldStarred, oldFinished, id }) => {\r\n\tconst [ starred, setStarred ] = useState(oldStarred);\r\n\tconst [ finished, setFinished ] = useState(oldFinished);\r\n\r\n\tconst toggleStarred = async () => {\r\n\t\tsetStarred(!starred);\r\n\t\tawait fetch(`http://localhost:8000/toggle-workflow-finished/${id}`);\r\n\t};\r\n\tconst toggleFinished = async () => {\r\n\t\tsetFinished(!finished);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<FontAwesomeIcon\r\n\t\t\t\ticon=\"star\"\r\n\t\t\t\tclassName={classnames({ [styles.regular]: true, [styles.starred]: starred })}\r\n\t\t\t\tonClick={toggleStarred}\r\n\t\t\t/>\r\n\t\t\t<FontAwesomeIcon\r\n\t\t\t\ticon=\"check\"\r\n\t\t\t\tclassName={classnames({ [styles.regular]: true, [styles.finished]: finished })}\r\n\t\t\t\tonClick={toggleFinished}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default WorkflowStarredAndFinished;\r\n"]},"metadata":{},"sourceType":"module"}