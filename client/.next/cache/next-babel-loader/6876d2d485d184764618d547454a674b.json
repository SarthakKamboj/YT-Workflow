{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\Share.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../styles/scss/share.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport classnames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport Joi from '@hapi/joi';\n\nvar Share = function Share(_ref) {\n  _s();\n\n  var _classnames, _classnames2, _classnames4;\n\n  var id = _ref.id;\n  var jwtToken = useSelector(function (state) {\n    return state.jwtToken;\n  });\n\n  var _useState = useState(),\n      modalVisible = _useState[0],\n      setModalVisible = _useState[1];\n\n  var _useState2 = useState(),\n      hideContent = _useState2[0],\n      setHideContent = _useState2[1];\n\n  var _useState3 = useState(),\n      inputActive = _useState3[0],\n      setInputActive = _useState3[1];\n\n  var _useState4 = useState(''),\n      inputText = _useState4[0],\n      setInputText = _useState4[1];\n\n  var _useState5 = useState([]),\n      profileImagesInfo = _useState5[0],\n      setProfileImagesInfo = _useState5[1];\n\n  var _useState6 = useState(''),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var schema = Joi.object({\n    email: Joi.string().email({\n      minDomainSegments: 2,\n      tlds: {\n        allow: ['com', 'net']\n      }\n    })\n  }); // const inputText = useRef();\n\n  var getProfileImages = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var imageUrlsRes, imageUrlsJson;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:8000/get-workflow-profile-images/\".concat(id), {\n                headers: {\n                  'Content-type': 'application/json',\n                  Authorization: 'Bearer ' + jwtToken\n                }\n              });\n\n            case 2:\n              imageUrlsRes = _context.sent;\n              _context.next = 5;\n              return imageUrlsRes.json();\n\n            case 5:\n              imageUrlsJson = _context.sent;\n              setProfileImagesInfo(Object.entries(imageUrlsJson['urls']));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getProfileImages() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setModalVisible(false);\n    setHideContent(true);\n    setInputActive(false);\n    getProfileImages();\n  }, []);\n\n  var capitalize = function capitalize(str) {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n  };\n\n  var shareWorkflow = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var validation, shareRes, shareJson;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              validation = schema.validate({\n                email: inputText\n              });\n\n              if (!validation.error) {\n                _context2.next = 4;\n                break;\n              }\n\n              setError('**' + capitalize(validation.error.toString().replace('ValidationError: ', '').replace(\"\\\"\", \"\").replace(\"\\\"\", '')));\n              return _context2.abrupt(\"return\");\n\n            case 4:\n              _context2.next = 6;\n              return fetch(\"http://localhost:8000/share-workflow/\".concat(id), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: 'Bearer ' + jwtToken\n                },\n                body: JSON.stringify({\n                  email: inputText\n                })\n              });\n\n            case 6:\n              shareRes = _context2.sent;\n              _context2.next = 9;\n              return shareRes.json();\n\n            case 9:\n              shareJson = _context2.sent;\n\n              if (!(shareJson.msg == 'Account matching query does not exist.')) {\n                _context2.next = 13;\n                break;\n              }\n\n              setError('**User does not exist.');\n              return _context2.abrupt(\"return\");\n\n            case 13:\n              setInputText('');\n              setError('');\n              _context2.next = 17;\n              return getProfileImages();\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function shareWorkflow() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var toggleModal = function toggleModal() {\n    if (!modalVisible) {\n      setTimeout(function () {\n        setHideContent(false);\n      }, 250);\n    } else {\n      setHideContent(true);\n    }\n\n    setModalVisible(!modalVisible);\n  };\n\n  var toggleInputActive = function toggleInputActive() {\n    setInputActive(!inputActive);\n  };\n\n  var updateInputText = function updateInputText(e) {\n    setInputText(e.target.value);\n  };\n\n  var unshareWorkflow = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n      var unshareRes, unshareJson;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"http://localhost:8000/unshare-workflow/\".concat(id), {\n                method: 'POST',\n                headers: {\n                  'Content-type': 'application/json',\n                  Authorization: 'Bearer ' + jwtToken\n                },\n                body: JSON.stringify({\n                  email: email\n                })\n              });\n\n            case 2:\n              unshareRes = _context3.sent;\n              _context3.next = 5;\n              return unshareRes.json();\n\n            case 5:\n              unshareJson = _context3.sent;\n\n              if (!(unshareJson['msg'] === 'The user and the user being unshared are the same. They must be different.')) {\n                _context3.next = 9;\n                break;\n              }\n\n              setError('**You cannot unshare yourself.');\n              return _context3.abrupt(\"return\");\n\n            case 9:\n              setError('');\n              _context3.next = 12;\n              return getProfileImages();\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function unshareWorkflow(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: classnames((_classnames = {}, _defineProperty(_classnames, styles.shareModalNotVisible, true), _defineProperty(_classnames, styles.shareModalVisible, modalVisible), _defineProperty(_classnames, styles.contentsHidden, hideContent), _classnames)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }\n  }, __jsx(\"p\", {\n    className: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"user-plus\",\n    className: styles.addUserIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 6\n    }\n  }), __jsx(\"span\", {\n    className: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 6\n    }\n  }, \"Share with Other People\")), __jsx(\"div\", {\n    className: styles.inputSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    onClick: toggleInputActive,\n    onBlur: toggleInputActive,\n    type: \"email\",\n    className: styles.emailInput,\n    onChange: updateInputText,\n    value: inputText // ref={inputText}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 6\n    }\n  }), __jsx(\"div\", {\n    className: classnames((_classnames2 = {}, _defineProperty(_classnames2, styles.inputBorderBottom, true), _defineProperty(_classnames2, styles.inputBorderBottomActive, inputActive), _classnames2)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 6\n    }\n  }), __jsx(\"p\", {\n    className: classnames(_defineProperty({}, styles.hoverLabel, inputText !== '')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 6\n    }\n  }, \"Add People\")), __jsx(\"p\", {\n    className: styles.usersHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, \"Current Users\"), __jsx(\"ul\", {\n    className: styles.workflowUsersList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, profileImagesInfo.map(function (profileImageInfo, index) {\n    return __jsx(\"li\", {\n      key: profileImageInfo[0],\n      className: styles.workflowUsers,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      src: profileImageInfo[1],\n      className: styles.workflowUserProfileImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 8\n      }\n    }), __jsx(\"p\", {\n      className: styles.workflowUserEmail,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 8\n      }\n    }, profileImageInfo[0]), index !== 0 ? __jsx(FontAwesomeIcon, {\n      className: styles.unshareBtn,\n      icon: 'times',\n      onClick: function onClick() {\n        return unshareWorkflow(profileImageInfo[0]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }) : __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }));\n  })), __jsx(\"div\", {\n    className: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 6\n    }\n  }, error), __jsx(\"div\", {\n    className: styles.shareBtn,\n    onClick: shareWorkflow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 6\n    }\n  }, \"Done\"))), __jsx(\"div\", {\n    onClick: toggleModal,\n    className: classnames((_classnames4 = {}, _defineProperty(_classnames4, styles.backdropNotVisible, true), _defineProperty(_classnames4, styles.backdropVisible, modalVisible), _classnames4)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }\n  }), __jsx(\"div\", {\n    className: styles.shareBtn,\n    onClick: function onClick() {\n      return toggleModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 4\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"users\",\n    className: styles.shareIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, \"Share\")));\n};\n\n_s(Share, \"pd5arwldihPgRt9M0CErfI+ya0Y=\", false, function () {\n  return [useSelector];\n});\n\n_c = Share;\nexport default Share;\n\nvar _c;\n\n$RefreshReg$(_c, \"Share\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/Share.js"],"names":["FontAwesomeIcon","styles","useState","useEffect","useRef","classnames","useSelector","Joi","Share","id","jwtToken","state","modalVisible","setModalVisible","hideContent","setHideContent","inputActive","setInputActive","inputText","setInputText","profileImagesInfo","setProfileImagesInfo","error","setError","schema","object","email","string","minDomainSegments","tlds","allow","getProfileImages","fetch","headers","Authorization","imageUrlsRes","json","imageUrlsJson","Object","entries","capitalize","str","slice","toUpperCase","shareWorkflow","validation","validate","toString","replace","method","body","JSON","stringify","shareRes","shareJson","msg","toggleModal","setTimeout","toggleInputActive","updateInputText","e","target","value","unshareWorkflow","unshareRes","unshareJson","shareModalNotVisible","shareModalVisible","contentsHidden","title","addUserIcon","heading","inputSection","emailInput","inputBorderBottom","inputBorderBottomActive","hoverLabel","usersHeading","workflowUsersList","map","profileImageInfo","index","workflowUsers","workflowUserProfileImage","workflowUserEmail","unshareBtn","footer","shareBtn","backdropNotVisible","backdropVisible","shareIcon"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from '../styles/scss/share.module.scss';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport classnames from 'classnames';\r\nimport { useSelector } from 'react-redux';\r\nimport Joi from '@hapi/joi';\r\n\r\nconst Share = ({ id }) => {\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\tconst [ modalVisible, setModalVisible ] = useState();\r\n\tconst [ hideContent, setHideContent ] = useState();\r\n\tconst [ inputActive, setInputActive ] = useState();\r\n\tconst [ inputText, setInputText ] = useState('');\r\n\r\n\tconst [ profileImagesInfo, setProfileImagesInfo ] = useState([]);\r\n\tconst [ error, setError ] = useState('');\r\n\r\n\tconst schema = Joi.object({\r\n\t\temail: Joi.string().email({ minDomainSegments: 2, tlds: { allow: [ 'com', 'net' ] } })\r\n\t});\r\n\r\n\t// const inputText = useRef();\r\n\r\n\tconst getProfileImages = async () => {\r\n\t\tconst imageUrlsRes = await fetch(`http://localhost:8000/get-workflow-profile-images/${id}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst imageUrlsJson = await imageUrlsRes.json();\r\n\t\tsetProfileImagesInfo(Object.entries(imageUrlsJson['urls']));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetModalVisible(false);\r\n\t\tsetHideContent(true);\r\n\t\tsetInputActive(false);\r\n\t\tgetProfileImages();\r\n\t}, []);\r\n\r\n\tconst capitalize = (str) => {\r\n\t\treturn str.slice(0, 1).toUpperCase() + str.slice(1);\r\n\t};\r\n\r\n\tconst shareWorkflow = async () => {\r\n\t\tconst validation = schema.validate({ email: inputText });\r\n\t\tif (validation.error) {\r\n\t\t\tsetError(\r\n\t\t\t\t'**' +\r\n\t\t\t\t\tcapitalize(\r\n\t\t\t\t\t\tvalidation.error.toString().replace('ValidationError: ', '').replace(`\"`, ``).replace(`\"`, '')\r\n\t\t\t\t\t)\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst shareRes = await fetch(`http://localhost:8000/share-workflow/${id}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: inputText\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\tconst shareJson = await shareRes.json();\r\n\r\n\t\tif (shareJson.msg == 'Account matching query does not exist.') {\r\n\t\t\tsetError('**User does not exist.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetInputText('');\r\n\t\tsetError('');\r\n\t\tawait getProfileImages();\r\n\t};\r\n\r\n\tconst toggleModal = () => {\r\n\t\tif (!modalVisible) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetHideContent(false);\r\n\t\t\t}, 250);\r\n\t\t} else {\r\n\t\t\tsetHideContent(true);\r\n\t\t}\r\n\t\tsetModalVisible(!modalVisible);\r\n\t};\r\n\r\n\tconst toggleInputActive = () => {\r\n\t\tsetInputActive(!inputActive);\r\n\t};\r\n\r\n\tconst updateInputText = (e) => {\r\n\t\tsetInputText(e.target.value);\r\n\t};\r\n\r\n\tconst unshareWorkflow = async (email) => {\r\n\t\tconst unshareRes = await fetch(`http://localhost:8000/unshare-workflow/${id}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\tconst unshareJson = await unshareRes.json();\r\n\r\n\t\tif (unshareJson['msg'] === 'The user and the user being unshared are the same. They must be different.') {\r\n\t\t\tsetError('**You cannot unshare yourself.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetError('');\r\n\t\tawait getProfileImages();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div\r\n\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t[styles.shareModalNotVisible]: true,\r\n\t\t\t\t\t[styles.shareModalVisible]: modalVisible,\r\n\t\t\t\t\t[styles.contentsHidden]: hideContent\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<p className={styles.title}>\r\n\t\t\t\t\t<FontAwesomeIcon icon=\"user-plus\" className={styles.addUserIcon} />\r\n\t\t\t\t\t<span className={styles.heading}>Share with Other People</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className={styles.inputSection}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonClick={toggleInputActive}\r\n\t\t\t\t\t\tonBlur={toggleInputActive}\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName={styles.emailInput}\r\n\t\t\t\t\t\tonChange={updateInputText}\r\n\t\t\t\t\t\tvalue={inputText}\r\n\t\t\t\t\t\t// ref={inputText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t[styles.inputBorderBottom]: true,\r\n\t\t\t\t\t\t\t[styles.inputBorderBottomActive]: inputActive\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className={classnames({ [styles.hoverLabel]: inputText !== '' })}>Add People</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className={styles.usersHeading}>Current Users</p>\r\n\t\t\t\t<ul className={styles.workflowUsersList}>\r\n\t\t\t\t\t{profileImagesInfo.map((profileImageInfo, index) => (\r\n\t\t\t\t\t\t<li key={profileImageInfo[0]} className={styles.workflowUsers}>\r\n\t\t\t\t\t\t\t<img src={profileImageInfo[1]} className={styles.workflowUserProfileImage} />\r\n\t\t\t\t\t\t\t<p className={styles.workflowUserEmail}>{profileImageInfo[0]}</p>\r\n\t\t\t\t\t\t\t{index !== 0 ? (\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\t\t\tclassName={styles.unshareBtn}\r\n\t\t\t\t\t\t\t\t\ticon={'times'}\r\n\t\t\t\t\t\t\t\t\tonClick={() => unshareWorkflow(profileImageInfo[0])}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<React.Fragment />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<div className={styles.footer}>\r\n\t\t\t\t\t<p>{error}</p>\r\n\t\t\t\t\t<div className={styles.shareBtn} onClick={shareWorkflow}>\r\n\t\t\t\t\t\tDone\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tonClick={toggleModal}\r\n\t\t\t\tclassName={classnames({ [styles.backdropNotVisible]: true, [styles.backdropVisible]: modalVisible })}\r\n\t\t\t/>\r\n\t\t\t<div className={styles.shareBtn} onClick={() => toggleModal()}>\r\n\t\t\t\t<FontAwesomeIcon icon=\"users\" className={styles.shareIcon} />\r\n\t\t\t\t<p>Share</p>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Share;\r\n"]},"metadata":{},"sourceType":"module"}