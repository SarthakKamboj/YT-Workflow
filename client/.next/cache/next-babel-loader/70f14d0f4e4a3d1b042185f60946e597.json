{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\Share.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../styles/scss/share.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport classnames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport Joi from '@hapi/joi';\n\nvar Share = function Share(_ref) {\n  _s();\n\n  var _classnames, _classnames2, _classnames4;\n\n  var id = _ref.id;\n  var jwtToken = useSelector(function (state) {\n    return state.jwtToken;\n  });\n\n  var _useState = useState(),\n      modalVisible = _useState[0],\n      setModalVisible = _useState[1];\n\n  var _useState2 = useState(),\n      hideContent = _useState2[0],\n      setHideContent = _useState2[1];\n\n  var _useState3 = useState(),\n      inputActive = _useState3[0],\n      setInputActive = _useState3[1];\n\n  var _useState4 = useState(''),\n      inputText = _useState4[0],\n      setInputText = _useState4[1];\n\n  var _useState5 = useState([]),\n      profileImagesInfo = _useState5[0],\n      setProfileImagesInfo = _useState5[1];\n\n  var _useState6 = useState(''),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var schema = Joi.object({\n    email: Joi.string().email({\n      minDomainSegments: 2,\n      tlds: {\n        allow: ['com', 'net']\n      }\n    })\n  }); // const inputText = useRef();\n\n  var getProfileImages = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var imageUrlsRes, imageUrlsJson;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:8000/get-workflow-profile-images/\".concat(id), {\n                headers: {\n                  'Content-type': 'application/json',\n                  Authorization: 'Bearer ' + jwtToken\n                }\n              });\n\n            case 2:\n              imageUrlsRes = _context.sent;\n              _context.next = 5;\n              return imageUrlsRes.json();\n\n            case 5:\n              imageUrlsJson = _context.sent;\n              setProfileImagesInfo(Object.entries(imageUrlsJson['urls']));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getProfileImages() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setModalVisible(false);\n    setHideContent(true);\n    setInputActive(false);\n    getProfileImages();\n  }, []);\n\n  var shareWorkflow = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var validation;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              validation = schema.validate({\n                email: inputText\n              });\n\n              if (validation.error) {\n                setError(validation.error.toString().replace(\"\\\"\", \"\"));\n              }\n              /*\r\n              fetch(`http://localhost:8000/share-workflow/${id}`, {\r\n              \tmethod: 'POST',\r\n              \theaders: {\r\n              \t\t'Content-Type': 'application/json',\r\n              \t\tAuthorization: 'Bearer ' + jwtToken\r\n              \t},\r\n              \tbody: JSON.stringify({\r\n              \t\temail: inputText\r\n              \t})\r\n              });*/\n\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function shareWorkflow() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var toggleModal = function toggleModal() {\n    if (!modalVisible) {\n      setTimeout(function () {\n        setHideContent(false);\n      }, 250);\n    } else {\n      setHideContent(true);\n    }\n\n    setModalVisible(!modalVisible);\n  };\n\n  var toggleInputActive = function toggleInputActive() {\n    setInputActive(!inputActive);\n  };\n\n  var updateInputText = function updateInputText(e) {\n    setInputText(e.target.value);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: classnames((_classnames = {}, _defineProperty(_classnames, styles.shareModalNotVisible, true), _defineProperty(_classnames, styles.shareModalVisible, modalVisible), _defineProperty(_classnames, styles.contentsHidden, hideContent), _classnames)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }, __jsx(\"p\", {\n    className: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"user-plus\",\n    className: styles.addUserIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }), __jsx(\"span\", {\n    className: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }, \"Share with Other People\")), __jsx(\"div\", {\n    className: styles.inputSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    onClick: toggleInputActive,\n    onBlur: toggleInputActive,\n    type: \"email\",\n    className: styles.emailInput,\n    onChange: updateInputText,\n    value: inputText // ref={inputText}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }\n  }), __jsx(\"div\", {\n    className: classnames((_classnames2 = {}, _defineProperty(_classnames2, styles.inputBorderBottom, true), _defineProperty(_classnames2, styles.inputBorderBottomActive, inputActive), _classnames2)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }), __jsx(\"p\", {\n    className: classnames(_defineProperty({}, styles.hoverLabel, inputText !== '')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 6\n    }\n  }, \"Add People\")), __jsx(\"p\", {\n    className: styles.usersHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, \"Current Users\"), __jsx(\"ul\", {\n    className: styles.workflowUsersList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, profileImagesInfo.map(function (profileImageInfo) {\n    return __jsx(\"li\", {\n      key: profileImageInfo[0],\n      className: styles.workflowUsers,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      src: profileImageInfo[1],\n      className: styles.workflowUserProfileImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 8\n      }\n    }), __jsx(\"p\", {\n      className: styles.workflowUserEmail,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 8\n      }\n    }, profileImageInfo[0]));\n  })), error, __jsx(\"div\", {\n    className: styles.shareBtn,\n    onClick: shareWorkflow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, \"Done\")), __jsx(\"div\", {\n    onClick: toggleModal,\n    className: classnames((_classnames4 = {}, _defineProperty(_classnames4, styles.backdropNotVisible, true), _defineProperty(_classnames4, styles.backdropVisible, modalVisible), _classnames4)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }\n  }), __jsx(\"div\", {\n    className: styles.shareBtn,\n    onClick: function onClick() {\n      return toggleModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"users\",\n    className: styles.shareIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, \"Share\")));\n};\n\n_s(Share, \"pd5arwldihPgRt9M0CErfI+ya0Y=\", false, function () {\n  return [useSelector];\n});\n\n_c = Share;\nexport default Share;\n\nvar _c;\n\n$RefreshReg$(_c, \"Share\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/Share.js"],"names":["FontAwesomeIcon","styles","useState","useEffect","useRef","classnames","useSelector","Joi","Share","id","jwtToken","state","modalVisible","setModalVisible","hideContent","setHideContent","inputActive","setInputActive","inputText","setInputText","profileImagesInfo","setProfileImagesInfo","error","setError","schema","object","email","string","minDomainSegments","tlds","allow","getProfileImages","fetch","headers","Authorization","imageUrlsRes","json","imageUrlsJson","Object","entries","shareWorkflow","validation","validate","toString","replace","toggleModal","setTimeout","toggleInputActive","updateInputText","e","target","value","shareModalNotVisible","shareModalVisible","contentsHidden","title","addUserIcon","heading","inputSection","emailInput","inputBorderBottom","inputBorderBottomActive","hoverLabel","usersHeading","workflowUsersList","map","profileImageInfo","workflowUsers","workflowUserProfileImage","workflowUserEmail","shareBtn","backdropNotVisible","backdropVisible","shareIcon"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from '../styles/scss/share.module.scss';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport classnames from 'classnames';\r\nimport { useSelector } from 'react-redux';\r\nimport Joi from '@hapi/joi';\r\n\r\nconst Share = ({ id }) => {\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\tconst [ modalVisible, setModalVisible ] = useState();\r\n\tconst [ hideContent, setHideContent ] = useState();\r\n\tconst [ inputActive, setInputActive ] = useState();\r\n\tconst [ inputText, setInputText ] = useState('');\r\n\r\n\tconst [ profileImagesInfo, setProfileImagesInfo ] = useState([]);\r\n\tconst [ error, setError ] = useState('');\r\n\r\n\tconst schema = Joi.object({\r\n\t\temail: Joi.string().email({ minDomainSegments: 2, tlds: { allow: [ 'com', 'net' ] } })\r\n\t});\r\n\r\n\t// const inputText = useRef();\r\n\r\n\tconst getProfileImages = async () => {\r\n\t\tconst imageUrlsRes = await fetch(`http://localhost:8000/get-workflow-profile-images/${id}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst imageUrlsJson = await imageUrlsRes.json();\r\n\t\tsetProfileImagesInfo(Object.entries(imageUrlsJson['urls']));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetModalVisible(false);\r\n\t\tsetHideContent(true);\r\n\t\tsetInputActive(false);\r\n\t\tgetProfileImages();\r\n\t}, []);\r\n\r\n\tconst shareWorkflow = async () => {\r\n\t\tconst validation = schema.validate({ email: inputText });\r\n\t\tif (validation.error) {\r\n\t\t\tsetError(validation.error.toString().replace(`\"`, ``));\r\n\t\t}\r\n\t\t/*\r\n\t\tfetch(`http://localhost:8000/share-workflow/${id}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: inputText\r\n\t\t\t})\r\n\t\t});*/\r\n\t};\r\n\r\n\tconst toggleModal = () => {\r\n\t\tif (!modalVisible) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetHideContent(false);\r\n\t\t\t}, 250);\r\n\t\t} else {\r\n\t\t\tsetHideContent(true);\r\n\t\t}\r\n\t\tsetModalVisible(!modalVisible);\r\n\t};\r\n\r\n\tconst toggleInputActive = () => {\r\n\t\tsetInputActive(!inputActive);\r\n\t};\r\n\r\n\tconst updateInputText = (e) => {\r\n\t\tsetInputText(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div\r\n\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t[styles.shareModalNotVisible]: true,\r\n\t\t\t\t\t[styles.shareModalVisible]: modalVisible,\r\n\t\t\t\t\t[styles.contentsHidden]: hideContent\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<p className={styles.title}>\r\n\t\t\t\t\t<FontAwesomeIcon icon=\"user-plus\" className={styles.addUserIcon} />\r\n\t\t\t\t\t<span className={styles.heading}>Share with Other People</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className={styles.inputSection}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonClick={toggleInputActive}\r\n\t\t\t\t\t\tonBlur={toggleInputActive}\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName={styles.emailInput}\r\n\t\t\t\t\t\tonChange={updateInputText}\r\n\t\t\t\t\t\tvalue={inputText}\r\n\t\t\t\t\t\t// ref={inputText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t[styles.inputBorderBottom]: true,\r\n\t\t\t\t\t\t\t[styles.inputBorderBottomActive]: inputActive\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className={classnames({ [styles.hoverLabel]: inputText !== '' })}>Add People</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className={styles.usersHeading}>Current Users</p>\r\n\t\t\t\t<ul className={styles.workflowUsersList}>\r\n\t\t\t\t\t{profileImagesInfo.map((profileImageInfo) => (\r\n\t\t\t\t\t\t<li key={profileImageInfo[0]} className={styles.workflowUsers}>\r\n\t\t\t\t\t\t\t<img src={profileImageInfo[1]} className={styles.workflowUserProfileImage} />\r\n\t\t\t\t\t\t\t<p className={styles.workflowUserEmail}>{profileImageInfo[0]}</p>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t\t{error}\r\n\t\t\t\t<div className={styles.shareBtn} onClick={shareWorkflow}>\r\n\t\t\t\t\tDone\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tonClick={toggleModal}\r\n\t\t\t\tclassName={classnames({ [styles.backdropNotVisible]: true, [styles.backdropVisible]: modalVisible })}\r\n\t\t\t/>\r\n\t\t\t<div className={styles.shareBtn} onClick={() => toggleModal()}>\r\n\t\t\t\t<FontAwesomeIcon icon=\"users\" className={styles.shareIcon} />\r\n\t\t\t\t<p>Share</p>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Share;\r\n"]},"metadata":{},"sourceType":"module"}