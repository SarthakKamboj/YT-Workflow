{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/profile.module.scss';\nimport { useEffect, useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nvar Profile = function Profile() {\n  _s();\n\n  var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  var _useState = useState(''),\n      currentDate = _useState[0],\n      setCurrentDate = _useState[1];\n\n  var profileImageFormRef = useRef();\n  var jwtToken = useSelector(function (state) {\n    return state.jwtToken;\n  });\n  var profileImage = useSelector(function (state) {\n    return state.profileImage;\n  });\n  var profileName = useSelector(function (state) {\n    return state.profileName;\n  });\n  var profileFirstName = profileName.split(' ')[0];\n  var dispatch = useDispatch();\n\n  var updateProfileImage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var profileForm;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              profileForm = profileImageFormRef.current;\n              _context.next = 3;\n              return fetch('http://localhost:8000/upload-profile-image', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: 'Bearer ' + jwtToken\n                },\n                body: profileForm\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateProfileImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var currentDateInfo = new Date();\n    var month = months[currentDateInfo.getMonth()];\n    var day = currentDateInfo.getDate();\n    var year = currentDateInfo.getFullYear();\n    setCurrentDate(month + ' ' + day + ', ' + year);\n  }, []);\n  return __jsx(\"div\", {\n    className: styles.profileContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.imageInputSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    className: styles.profileImage,\n    src: profileImage,\n    alt: profileName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), __jsx(FontAwesomeIcon, {\n    className: styles.editIcon,\n    icon: 'user-edit',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), __jsx(\"form\", {\n    enctype: \"multipart/form-data\",\n    ref: profileImageFormRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: updateProfileImage,\n    accept: 'image/*',\n    className: styles.profileImageInput,\n    name: \"image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }))), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, \"Hey \", profileFirstName, \"!\"), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }, currentDate));\n};\n\n_s(Profile, \"VLemP14pqg1m0A/lQJIcYzgm95I=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/Profile.js"],"names":["styles","useEffect","useState","useRef","useSelector","useDispatch","FontAwesomeIcon","Profile","months","currentDate","setCurrentDate","profileImageFormRef","jwtToken","state","profileImage","profileName","profileFirstName","split","dispatch","updateProfileImage","profileForm","current","fetch","method","headers","Authorization","body","currentDateInfo","Date","month","getMonth","day","getDate","year","getFullYear","profileContainer","imageInputSection","editIcon","profileImageInput"],"mappings":"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","sourcesContent":["import styles from '../styles/scss/profile.module.scss';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Profile = () => {\r\n\tconst months = [\r\n\t\t'January',\r\n\t\t'February',\r\n\t\t'March',\r\n\t\t'April',\r\n\t\t'May',\r\n\t\t'June',\r\n\t\t'July',\r\n\t\t'August',\r\n\t\t'September',\r\n\t\t'October',\r\n\t\t'November',\r\n\t\t'December'\r\n\t];\r\n\tconst [ currentDate, setCurrentDate ] = useState('');\r\n\r\n\tconst profileImageFormRef = useRef();\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\r\n\tconst profileImage = useSelector((state) => state.profileImage);\r\n\tconst profileName = useSelector((state) => state.profileName);\r\n\tconst profileFirstName = profileName.split(' ')[0];\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst updateProfileImage = async () => {\r\n\t\tconst profileForm = profileImageFormRef.current;\r\n\t\tawait fetch('http://localhost:8000/upload-profile-image', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: profileForm\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst currentDateInfo = new Date();\r\n\t\tconst month = months[currentDateInfo.getMonth()];\r\n\t\tconst day = currentDateInfo.getDate();\r\n\t\tconst year = currentDateInfo.getFullYear();\r\n\t\tsetCurrentDate(month + ' ' + day + ', ' + year);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={styles.profileContainer}>\r\n\t\t\t<div className={styles.imageInputSection}>\r\n\t\t\t\t<img className={styles.profileImage} src={profileImage} alt={profileName} />\r\n\t\t\t\t<FontAwesomeIcon className={styles.editIcon} icon={'user-edit'} />\r\n\t\t\t\t<form enctype=\"multipart/form-data\" ref={profileImageFormRef}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tonChange={updateProfileImage}\r\n\t\t\t\t\t\taccept={'image/*'}\r\n\t\t\t\t\t\tclassName={styles.profileImageInput}\r\n\t\t\t\t\t\tname=\"image\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<h2>Hey {profileFirstName}!</h2>\r\n\t\t\t<h5>{currentDate}</h5>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}