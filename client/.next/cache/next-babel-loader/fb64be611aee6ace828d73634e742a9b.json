{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowTitle.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useState, useEffect } from 'react';\nimport styles from '../styles/scss/workflow-title.module.scss';\nimport { useSelector } from 'react-redux';\n\nvar WorkflowTitle = function WorkflowTitle(_ref) {\n  _s();\n\n  var oldTitle = _ref.oldTitle,\n      id = _ref.id;\n  var titleInput = useRef(null);\n  var jwtToken = useSelector(function (state) {\n    return state.jwtToken;\n  });\n  var inputLengthMultiplier = 18;\n\n  var pushTitleChangeToBackend = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:8000/set-workflow-title/\".concat(id), {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: 'Bearer ' + jwtToken\n                },\n                body: JSON.stringify({\n                  title: titleInput.current.innerText\n                })\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function pushTitleChangeToBackend() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {// titleInput.current.style.width =\n    // \t((titleInput.current.value.length + 1) * inputLengthMultiplier).toString() + 'px';\n  }, []);\n\n  var handleChange = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(titleInput.current.innertText !== oldTitle)) {\n                _context2.next = 4;\n                break;\n              }\n\n              console.log('changing');\n              _context2.next = 4;\n              return pushTitleChangeToBackend();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChange() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var changeWidth = function changeWidth() {\n    titleInput.current.style.width = (titleInput.current.value.length * inputLengthMultiplier).toString() + 'px';\n    console.log(((titleInput.current.value.length + 1) * 8).toString() + 'px');\n  };\n\n  return (// <input\n    // \tref={titleInput}\n    // \tclassName={styles.titleInput}\n    // \tonBlur={handleChange}\n    // \ttabIndex={0}\n    // defaultValue={oldTitle ? oldTitle : 'Create title'}\n    // defaultValue={oldTitle}\n    // onChange={changeWidth}\n    // onLoad={changeWidth}\n    // />\n    __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }\n    }, console.log(oldTitle), __jsx(\"h2\", {\n      contentEditable: 'plaintext-only',\n      ref: titleInput,\n      className: styles.titleInput,\n      onBlur: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }\n    }, oldTitle, \"/>\"))\n  );\n};\n\n_s(WorkflowTitle, \"7LsNDlfHHxaE/GKhd7rQtv+3PlQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = WorkflowTitle;\nexport default WorkflowTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkflowTitle\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowTitle.js"],"names":["useRef","useState","useEffect","styles","useSelector","WorkflowTitle","oldTitle","id","titleInput","jwtToken","state","inputLengthMultiplier","pushTitleChangeToBackend","fetch","method","headers","Authorization","body","JSON","stringify","title","current","innerText","handleChange","innertText","console","log","changeWidth","style","width","value","length","toString"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAsB;AAAA;;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,MAATC,EAAS,QAATA,EAAS;AAC3C,MAAMC,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;AACA,MAAMS,QAAQ,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACD,QAAjB;AAAA,GAAD,CAA5B;AACA,MAAME,qBAAqB,GAAG,EAA9B;;AAEA,MAAMC,wBAAwB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC1BC,KAAK,oDAA6CN,EAA7C,GAAmD;AAC7DO,gBAAAA,MAAM,EAAE,KADqD;AAE7DC,gBAAAA,OAAO,EAAE;AACR,kCAAgB,kBADR;AAERC,kBAAAA,aAAa,EAAE,YAAYP;AAFnB,iBAFoD;AAM7DQ,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,kBAAAA,KAAK,EAAEZ,UAAU,CAACa,OAAX,CAAmBC;AADN,iBAAf;AANuD,eAAnD,CADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAxBV,wBAAwB;AAAA;AAAA;AAAA,KAA9B;;AAaAV,EAAAA,SAAS,CAAC,YAAM,CACf;AACA;AACA,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMqB,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,oBAChBf,UAAU,CAACa,OAAX,CAAmBG,UAAnB,KAAkClB,QADlB;AAAA;AAAA;AAAA;;AAEnBmB,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAFmB;AAAA,qBAGbd,wBAAwB,EAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZW,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAOA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzBnB,IAAAA,UAAU,CAACa,OAAX,CAAmBO,KAAnB,CAAyBC,KAAzB,GAAiC,CAACrB,UAAU,CAACa,OAAX,CAAmBS,KAAnB,CAAyBC,MAAzB,GAAkCpB,qBAAnC,EAA0DqB,QAA1D,KAAuE,IAAxG;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,CAAClB,UAAU,CAACa,OAAX,CAAmBS,KAAnB,CAAyBC,MAAzB,GAAkC,CAAnC,IAAwC,CAAzC,EAA4CC,QAA5C,KAAyD,IAArE;AACA,GAHD;;AAKA,SACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEP,OAAO,CAACC,GAAR,CAAYpB,QAAZ,CADF,EAEC;AAAI,MAAA,eAAe,EAAE,gBAArB;AAAuC,MAAA,GAAG,EAAEE,UAA5C;AAAwD,MAAA,SAAS,EAAEL,MAAM,CAACK,UAA1E;AAAsF,MAAA,MAAM,EAAEe,YAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEjB,QADF,OAFD;AAXD;AAkBA,CArDD;;GAAMD,a;UAEYD,W;;;KAFZC,a;AAuDN,eAAeA,aAAf","sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\nimport styles from '../styles/scss/workflow-title.module.scss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WorkflowTitle = ({ oldTitle, id }) => {\r\n\tconst titleInput = useRef(null);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\tconst inputLengthMultiplier = 18;\r\n\r\n\tconst pushTitleChangeToBackend = async () => {\r\n\t\tawait fetch(`http://localhost:8000/set-workflow-title/${id}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttitle: titleInput.current.innerText\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// titleInput.current.style.width =\r\n\t\t// \t((titleInput.current.value.length + 1) * inputLengthMultiplier).toString() + 'px';\r\n\t}, []);\r\n\r\n\tconst handleChange = async () => {\r\n\t\tif (titleInput.current.innertText !== oldTitle) {\r\n\t\t\tconsole.log('changing');\r\n\t\t\tawait pushTitleChangeToBackend();\r\n\t\t}\r\n\t};\r\n\r\n\tconst changeWidth = () => {\r\n\t\ttitleInput.current.style.width = (titleInput.current.value.length * inputLengthMultiplier).toString() + 'px';\r\n\t\tconsole.log(((titleInput.current.value.length + 1) * 8).toString() + 'px');\r\n\t};\r\n\r\n\treturn (\r\n\t\t// <input\r\n\t\t// \tref={titleInput}\r\n\t\t// \tclassName={styles.titleInput}\r\n\t\t// \tonBlur={handleChange}\r\n\t\t// \ttabIndex={0}\r\n\t\t// defaultValue={oldTitle ? oldTitle : 'Create title'}\r\n\t\t// defaultValue={oldTitle}\r\n\t\t// onChange={changeWidth}\r\n\t\t// onLoad={changeWidth}\r\n\t\t// />\r\n\t\t<React.Fragment>\r\n\t\t\t{console.log(oldTitle)}\r\n\t\t\t<h2 contentEditable={'plaintext-only'} ref={titleInput} className={styles.titleInput} onBlur={handleChange}>\r\n\t\t\t\t{oldTitle}/>\r\n\t\t\t</h2>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default WorkflowTitle;\r\n"]},"metadata":{},"sourceType":"module"}