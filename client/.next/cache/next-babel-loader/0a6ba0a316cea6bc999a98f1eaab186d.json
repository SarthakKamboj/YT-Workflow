{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\dashboard\\\\statistics.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../../styles/scss/statistics.module.scss';\nimport classnames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setProfileImage } from '../../components/actions/profileImageActions';\nimport { setProfileName } from '../../components/actions/profileNameActions';\nimport DashboardMenu from '../../components/DashboardMenu'; // import Chart from 'chart.js';\n// import { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\n\nimport { useRef, useState, useEffect } from 'react';\nimport DonutChart from '../../components/DonutChart';\nimport BarChart from '../../components/BarChart';\n\nconst Dashboard = () => {\n  const jwt = useSelector(state => state.jwtToken);\n  const {\n    0: userFilesBreakdown,\n    1: setUserFilesBreakdown\n  } = useState();\n  const {\n    0: userFilesLabels,\n    1: setUserFilesLabels\n  } = useState();\n  const {\n    0: userStarredWorkflows,\n    1: setUserStarredWorkflows\n  } = useState();\n  const {\n    0: userStarredLabels,\n    1: setUserStarredLabels\n  } = useState();\n  const {\n    0: userFinishedWorkflows,\n    1: setUserFinishedWorkflows\n  } = useState();\n  const {\n    0: userFinishedLabels,\n    1: setUserFinishedLabels\n  } = useState();\n  const {\n    0: userOriginalSharedWorkflows,\n    1: setUserOriginalSharedWorkflows\n  } = useState();\n  const {\n    0: userOriginalSharedLabels,\n    1: setUserOriginalSharedLabels\n  } = useState();\n\n  const capitalize = str => {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n  };\n\n  const fetchFileBreakdown = async () => {\n    const res = await fetch('http://localhost:8000/workflows-file-breakdown', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwt\n      }\n    });\n\n    if (res.status === 200) {\n      const resJson = await res.json();\n      const info = resJson['msg'];\n      setUserFilesLabels(Object.keys(info).map(label => capitalize(label)));\n      setUserFilesBreakdown(Object.values(info));\n    }\n  };\n\n  const fetchFinishedBreakdown = async () => {\n    const res = await fetch('http://localhost:8000/workflows-finished-data', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwt\n      }\n    });\n\n    if (res.status === 200) {\n      const resJson = await res.json();\n      const info = resJson['msg'];\n      setUserFinishedLabels(Object.keys(info).map(label => capitalize(label)));\n      setUserFinishedWorkflows(Object.values(info));\n    }\n  };\n\n  const fetchStarredBreakdown = async () => {\n    const res = await fetch('http://localhost:8000/workflows-starred-data', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwt\n      }\n    });\n\n    if (res.status === 200) {\n      const resJson = await res.json();\n      const info = resJson['msg'];\n      setUserStarredLabels(Object.keys(info).map(label => capitalize(label)));\n      setUserStarredWorkflows(Object.values(info));\n    }\n  };\n\n  const fetchSharedOriginal = async () => {\n    const res = await fetch('http://localhost:8000/workflows-original-shared-data', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwt\n      }\n    });\n\n    if (res.status === 200) {\n      const resJson = await res.json();\n      const info = resJson['msg'];\n      setUserOriginalSharedLabels(Object.keys(info).map(label => capitalize(label)));\n      setUserOriginalSharedWorkflows(Object.values(info));\n    }\n  };\n\n  useEffect(() => {\n    fetchFileBreakdown();\n    fetchFinishedBreakdown();\n    fetchStarredBreakdown();\n    fetchSharedOriginal();\n  }, []); // const fileBreakdownChart = (canvas) => {\n  // \t// const ctx = canvas.getContext('2d');\n  // \treturn {\n  // \t\tlabels: userFilesLabels,\n  // \t\tdatasets: [\n  // \t\t\t{\n  // \t\t\t\t// label: 'File Breakdown',\n  // \t\t\t\tdata: userFilesBreakdown,\n  // \t\t\t\tbackgroundColor: [ '#DC1C13', '#F1959B', '#EA4C46', '#F07470' ],\n  // \t\t\t\tborderWidth: 2,\n  // \t\t\t\thoverBorderColor: 'black',\n  // \t\t\t\tborderColor: 'white'\n  // \t\t\t}\n  // \t\t]\n  // \t};\n  // };\n  // const starredBreakdownChart = (canvas) => {\n  // \t// const ctx = canvas.getContext('2d');\n  // \tcanvas.style.width = '50%';\n  // \tcanvas.style.height = '45%';\n  // \treturn {\n  // \t\tlabels: userStarredLabels,\n  // \t\tdatasets: [\n  // \t\t\t{\n  // \t\t\t\t// label: 'File Breakdown',\n  // \t\t\t\tdata: userStarredWorkflows,\n  // \t\t\t\tbackgroundColor: [ '#DC1C13', '#F1959B' ],\n  // \t\t\t\tborderWidth: 2,\n  // \t\t\t\thoverBorderColor: 'black',\n  // \t\t\t\tborderColor: 'white',\n  // \t\t\t\tlabel: 'Hi'\n  // \t\t\t}\n  // \t\t]\n  // \t};\n  // };\n  // const finishedBreakdownChart = (canvas) => {\n  // \t// const ctx = canvas.getContext('2d');\n  // \tcanvas.style.width = '50%';\n  // \tcanvas.style.height = '45%';\n  // \treturn {\n  // \t\tlabels: userFinishedLabels,\n  // \t\tdatasets: [\n  // \t\t\t{\n  // \t\t\t\tdata: userFinishedWorkflows,\n  // \t\t\t\tbackgroundColor: [ '#DC1C13', '#F1959B' ],\n  // \t\t\t\tborderWidth: 2,\n  // \t\t\t\thoverBorderColor: 'black',\n  // \t\t\t\tborderColor: 'white',\n  // \t\t\t\tlabel: 'Hi'\n  // \t\t\t}\n  // \t\t]\n  // \t};\n  // };\n\n  return __jsx(\"main\", {\n    className: styles.statisticsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.dashboardMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.statisticsSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: styles.chart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, __jsx(DonutChart, {\n    labels: userFilesLabels,\n    breakdown: userFilesBreakdown,\n    chartTitle: 'File Breakdown',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    className: styles.chart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, __jsx(BarChart, {\n    labels: userFinishedLabels,\n    breakdown: userFinishedWorkflows,\n    chartTitle: 'Finished vs. Unfinished',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    className: styles.chart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, __jsx(DonutChart, {\n    labels: userStarredLabels,\n    breakdown: userStarredWorkflows,\n    chartTitle: 'Starred vs. Unstarred',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 6\n    }\n  }), __jsx(\"div\", {\n    className: styles.chart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 6\n    }\n  }), __jsx(DonutChart, {\n    labels: userOriginalSharedLabels,\n    breakdown: userOriginalSharedWorkflows,\n    chartTitle: 'Starred vs. Unstarred',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/dashboard/statistics.js"],"names":["styles","classnames","useSelector","useDispatch","setProfileImage","setProfileName","DashboardMenu","useRef","useState","useEffect","DonutChart","BarChart","Dashboard","jwt","state","jwtToken","userFilesBreakdown","setUserFilesBreakdown","userFilesLabels","setUserFilesLabels","userStarredWorkflows","setUserStarredWorkflows","userStarredLabels","setUserStarredLabels","userFinishedWorkflows","setUserFinishedWorkflows","userFinishedLabels","setUserFinishedLabels","userOriginalSharedWorkflows","setUserOriginalSharedWorkflows","userOriginalSharedLabels","setUserOriginalSharedLabels","capitalize","str","slice","toUpperCase","fetchFileBreakdown","res","fetch","headers","Authorization","status","resJson","json","info","Object","keys","map","label","values","fetchFinishedBreakdown","fetchStarredBreakdown","fetchSharedOriginal","statisticsContainer","dashboardMenuContainer","statisticsSection","chart"],"mappings":"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","sourcesContent":["import styles from '../../styles/scss/statistics.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setProfileImage } from '../../components/actions/profileImageActions';\r\nimport { setProfileName } from '../../components/actions/profileNameActions';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\n// import Chart from 'chart.js';\r\n// import { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport DonutChart from '../../components/DonutChart';\r\nimport BarChart from '../../components/BarChart';\r\n\r\nconst Dashboard = () => {\r\n\tconst jwt = useSelector((state) => state.jwtToken);\r\n\tconst [ userFilesBreakdown, setUserFilesBreakdown ] = useState();\r\n\tconst [ userFilesLabels, setUserFilesLabels ] = useState();\r\n\r\n\tconst [ userStarredWorkflows, setUserStarredWorkflows ] = useState();\r\n\tconst [ userStarredLabels, setUserStarredLabels ] = useState();\r\n\r\n\tconst [ userFinishedWorkflows, setUserFinishedWorkflows ] = useState();\r\n\tconst [ userFinishedLabels, setUserFinishedLabels ] = useState();\r\n\r\n\tconst [ userOriginalSharedWorkflows, setUserOriginalSharedWorkflows ] = useState();\r\n\tconst [ userOriginalSharedLabels, setUserOriginalSharedLabels ] = useState();\r\n\r\n\tconst capitalize = (str) => {\r\n\t\treturn str.slice(0, 1).toUpperCase() + str.slice(1);\r\n\t};\r\n\r\n\tconst fetchFileBreakdown = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-file-breakdown', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserFilesLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserFilesBreakdown(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchFinishedBreakdown = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-finished-data', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserFinishedLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserFinishedWorkflows(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchStarredBreakdown = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-starred-data', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserStarredLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserStarredWorkflows(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchSharedOriginal = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-original-shared-data', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserOriginalSharedLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserOriginalSharedWorkflows(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchFileBreakdown();\r\n\t\tfetchFinishedBreakdown();\r\n\t\tfetchStarredBreakdown();\r\n\t\tfetchSharedOriginal();\r\n\t}, []);\r\n\r\n\t// const fileBreakdownChart = (canvas) => {\r\n\t// \t// const ctx = canvas.getContext('2d');\r\n\t// \treturn {\r\n\t// \t\tlabels: userFilesLabels,\r\n\t// \t\tdatasets: [\r\n\t// \t\t\t{\r\n\t// \t\t\t\t// label: 'File Breakdown',\r\n\t// \t\t\t\tdata: userFilesBreakdown,\r\n\t// \t\t\t\tbackgroundColor: [ '#DC1C13', '#F1959B', '#EA4C46', '#F07470' ],\r\n\t// \t\t\t\tborderWidth: 2,\r\n\t// \t\t\t\thoverBorderColor: 'black',\r\n\t// \t\t\t\tborderColor: 'white'\r\n\t// \t\t\t}\r\n\t// \t\t]\r\n\t// \t};\r\n\t// };\r\n\r\n\t// const starredBreakdownChart = (canvas) => {\r\n\t// \t// const ctx = canvas.getContext('2d');\r\n\t// \tcanvas.style.width = '50%';\r\n\t// \tcanvas.style.height = '45%';\r\n\t// \treturn {\r\n\t// \t\tlabels: userStarredLabels,\r\n\t// \t\tdatasets: [\r\n\t// \t\t\t{\r\n\t// \t\t\t\t// label: 'File Breakdown',\r\n\t// \t\t\t\tdata: userStarredWorkflows,\r\n\t// \t\t\t\tbackgroundColor: [ '#DC1C13', '#F1959B' ],\r\n\t// \t\t\t\tborderWidth: 2,\r\n\t// \t\t\t\thoverBorderColor: 'black',\r\n\t// \t\t\t\tborderColor: 'white',\r\n\t// \t\t\t\tlabel: 'Hi'\r\n\t// \t\t\t}\r\n\t// \t\t]\r\n\t// \t};\r\n\t// };\r\n\r\n\t// const finishedBreakdownChart = (canvas) => {\r\n\t// \t// const ctx = canvas.getContext('2d');\r\n\t// \tcanvas.style.width = '50%';\r\n\t// \tcanvas.style.height = '45%';\r\n\t// \treturn {\r\n\t// \t\tlabels: userFinishedLabels,\r\n\t// \t\tdatasets: [\r\n\t// \t\t\t{\r\n\t// \t\t\t\tdata: userFinishedWorkflows,\r\n\t// \t\t\t\tbackgroundColor: [ '#DC1C13', '#F1959B' ],\r\n\t// \t\t\t\tborderWidth: 2,\r\n\t// \t\t\t\thoverBorderColor: 'black',\r\n\t// \t\t\t\tborderColor: 'white',\r\n\t// \t\t\t\tlabel: 'Hi'\r\n\t// \t\t\t}\r\n\t// \t\t]\r\n\t// \t};\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<main className={styles.statisticsContainer}>\r\n\t\t\t<div className={styles.dashboardMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.statisticsSection}>\r\n\t\t\t\t<div className={styles.chart}>\r\n\t\t\t\t\t<DonutChart labels={userFilesLabels} breakdown={userFilesBreakdown} chartTitle={'File Breakdown'} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.chart}>\r\n\t\t\t\t\t<BarChart\r\n\t\t\t\t\t\tlabels={userFinishedLabels}\r\n\t\t\t\t\t\tbreakdown={userFinishedWorkflows}\r\n\t\t\t\t\t\tchartTitle={'Finished vs. Unfinished'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.chart}>\r\n\t\t\t\t\t<DonutChart\r\n\t\t\t\t\t\tlabels={userStarredLabels}\r\n\t\t\t\t\t\tbreakdown={userStarredWorkflows}\r\n\t\t\t\t\t\tchartTitle={'Starred vs. Unstarred'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={styles.chart} />\r\n\t\t\t\t\t<DonutChart\r\n\t\t\t\t\t\tlabels={userOriginalSharedLabels}\r\n\t\t\t\t\t\tbreakdown={userOriginalSharedWorkflows}\r\n\t\t\t\t\t\tchartTitle={'Starred vs. Unstarred'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}