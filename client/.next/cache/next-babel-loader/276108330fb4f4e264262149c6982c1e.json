{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\signUp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/sign-up.module.scss';\nimport Link from 'next/link';\nimport classnames from 'classnames';\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { setJwt } from '../components/actions/jwtAction';\n\nconst Joi = require('@hapi/joi');\n\nconst SignUp = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: emailInputEmpty,\n    1: setEmailInputEmpty\n  } = useState(true);\n  const {\n    0: passwordInputEmpty,\n    1: setPasswordInputEmpty\n  } = useState(true);\n  const {\n    0: usernameEmpty,\n    1: setUsernameEmpty\n  } = useState(true);\n  const {\n    0: viewPassword,\n    1: setViewPassword\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const minPasswordLength = 2;\n  const signUpSchema = Joi.object({\n    username: Joi.string().required(),\n    email: Joi.string().required().email({\n      minDomainSegments: 2,\n      tlds: {\n        allow: ['com', 'net']\n      }\n    }),\n    password: Joi.string().required().min(minPasswordLength)\n  });\n\n  const updateEmail = input => {\n    setEmail(input);\n    if (input === '') setEmailInputEmpty(true);else setEmailInputEmpty(false);\n  };\n\n  const updatePassword = input => {\n    setPassword(input);\n    if (input === '') setPasswordInputEmpty(true);else setPasswordInputEmpty(false);\n  };\n\n  const updateUsername = input => {\n    setUsername(input);\n    if (input === '') setUsernameEmpty(true);else setUsernameEmpty(false);\n  };\n\n  const checkIfEncodeUriValid = input => {\n    return encodeURI(input) === input;\n  };\n\n  const toCapitalize = input => {\n    return input.slice(0, 1).toUpperCase() + input.slice(1);\n  };\n\n  const submitSignUpInfo = async () => {\n    const usernameUriEncoded = checkIfEncodeUriValid(username.replace(' ', ''));\n    const emailUriEncoded = checkIfEncodeUriValid(email);\n    const passwordUriEncoded = checkIfEncodeUriValid(password);\n    const signUpValidation = signUpSchema.validate({\n      username,\n      email,\n      password\n    });\n\n    if (signUpValidation.error) {\n      const empty = signUpValidation.error.toString().includes('empty');\n      const valid = signUpValidation.error.toString().includes('valid');\n      const tooShort = signUpValidation.error.toString().includes('at least');\n      const errorField = signUpValidation.error.toString().split('\"')[1];\n\n      if (empty) {\n        return setError(toCapitalize(errorField) + ' cannot be empty');\n      } else if (valid) {\n        return setError(toCapitalize(errorField) + ' must be valid');\n      } else if (errorField === 'password' && tooShort) {\n        return setError(toCapitalize(errorField) + ` must be at least ${minPasswordLength} characters long.`);\n      }\n    }\n\n    if (!usernameUriEncoded || !emailUriEncoded || !passwordUriEncoded) {\n      return setError('Login information can only have letters and numbers!');\n    }\n\n    console.log(username, email, password);\n    const data = {\n      username,\n      email,\n      password\n    };\n    const dataString = JSON.stringify(data); // console.log(dataString);\n\n    try {\n      const signInRequest = await fetch(process.env.SIGN_UP_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: dataString\n      });\n      const signInJson = await signInRequest.json();\n\n      if (signInJson.email) {\n        setError(signInJson.email[0]);\n        return;\n      }\n\n      console.log(signInJson);\n      setError('');\n      const accessJwtToken = signInJson.access;\n      const refreshJwtToken = signInJson.refresh;\n      localStorage.setItem('refresh-token', refreshJwtToken);\n      console.log(type(accessJwtToken));\n      dispatch(setJwt(accessJwtToken));\n      return router.push('/dashboard/home');\n    } catch (error) {\n      console.log(error);\n    }\n\n    return;\n  };\n\n  const toggleViewPassword = () => {\n    setViewPassword(!viewPassword);\n  };\n\n  return __jsx(\"main\", {\n    className: styles.signUpContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  }, __jsx(\"section\", {\n    className: styles.textSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: styles.logoImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: \"./images/logo.jpg\",\n    alt: \"Workflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    className: styles.signUpSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 6\n    }\n  }, \"Sign Up to \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 18\n    }\n  }), \" Workflow\"), __jsx(\"div\", {\n    className: styles.googleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 6\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/google_logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Sign Up with Google\")), __jsx(\"div\", {\n    className: styles.emailSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \"Or sign-up with email\"), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames({\n      [styles.label]: true,\n      [styles.usernameLabel]: true,\n      [styles.labelHover]: !usernameEmpty\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Username\"), __jsx(\"input\", {\n    value: username,\n    className: classnames({\n      [styles.errorInput]: error.includes('Username')\n    }),\n    onChange: e => updateUsername(e.target.value),\n    type: \"text\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames({\n      [styles.label]: true,\n      [styles.emailLabel]: true,\n      [styles.labelHover]: !emailInputEmpty\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: classnames({\n      [styles.errorInput]: error.includes('Email')\n    }),\n    value: email,\n    onChange: e => updateEmail(e.target.value),\n    type: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames({\n      [styles.label]: true,\n      [styles.passwordLabel]: true,\n      [styles.labelHover]: !passwordInputEmpty\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    value: password,\n    className: classnames({\n      [styles.errorInput]: error.includes('Password')\n    }),\n    onChange: e => updatePassword(e.target.value),\n    type: viewPassword ? 'text' : 'password',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    src: \"/images/eye.png\",\n    onClick: () => toggleViewPassword(),\n    alt: \"Toggle Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })), __jsx(\"span\", {\n    className: styles.signUpError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 8\n    }\n  }, error), __jsx(\"div\", {\n    onClick: () => submitSignUpInfo(),\n    className: styles.submitEmailForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 8\n    }\n  }, \"Create Your Account\")), __jsx(\"p\", {\n    className: styles.legal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, \"By signing up, I agree to the \", __jsx(\"span\", {\n    className: styles.underline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 38\n    }\n  }, \"Privacy Policy\"), \" and\", ' ', __jsx(\"span\", {\n    className: styles.underline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 8\n    }\n  }, \"Terms of Service\"))), __jsx(\"h3\", {\n    className: styles.switchToLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 6\n    }\n  }, \"Already have an account?\", '  ', __jsx(Link, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: styles.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 8\n    }\n  }, \"Log in\")))), __jsx(\"div\", {\n    className: styles.copyright,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, \"\\xA9 2020. All Rights Reserved. Workflow.\")), __jsx(\"section\", {\n    className: styles.slideshowSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/signUp.js"],"names":["styles","Link","classnames","useState","useRouter","useDispatch","setJwt","Joi","require","SignUp","router","dispatch","email","setEmail","username","setUsername","password","setPassword","emailInputEmpty","setEmailInputEmpty","passwordInputEmpty","setPasswordInputEmpty","usernameEmpty","setUsernameEmpty","viewPassword","setViewPassword","error","setError","minPasswordLength","signUpSchema","object","string","required","minDomainSegments","tlds","allow","min","updateEmail","input","updatePassword","updateUsername","checkIfEncodeUriValid","encodeURI","toCapitalize","slice","toUpperCase","submitSignUpInfo","usernameUriEncoded","replace","emailUriEncoded","passwordUriEncoded","signUpValidation","validate","empty","toString","includes","valid","tooShort","errorField","split","console","log","data","dataString","JSON","stringify","signInRequest","fetch","process","env","SIGN_UP_URL","method","headers","body","signInJson","json","accessJwtToken","access","refreshJwtToken","refresh","localStorage","setItem","type","push","toggleViewPassword","signUpContainer","textSection","logoImage","signUpSection","googleSignIn","emailSignIn","label","usernameLabel","labelHover","errorInput","e","target","value","emailLabel","passwordLabel","signUpError","submitEmailForm","legal","underline","switchToLogin","loginBtn","copyright","slideshowSection"],"mappings":"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","sourcesContent":["import styles from '../styles/scss/sign-up.module.scss';\r\nimport Link from 'next/link';\r\nimport classnames from 'classnames';\r\nimport { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setJwt } from '../components/actions/jwtAction';\r\nconst Joi = require('@hapi/joi');\r\n\r\nconst SignUp = () => {\r\n\tconst router = useRouter();\r\n\tconst dispatch = useDispatch();\r\n\tconst [ email, setEmail ] = useState('');\r\n\tconst [ username, setUsername ] = useState('');\r\n\tconst [ password, setPassword ] = useState('');\r\n\tconst [ emailInputEmpty, setEmailInputEmpty ] = useState(true);\r\n\tconst [ passwordInputEmpty, setPasswordInputEmpty ] = useState(true);\r\n\tconst [ usernameEmpty, setUsernameEmpty ] = useState(true);\r\n\tconst [ viewPassword, setViewPassword ] = useState(false);\r\n\tconst [ error, setError ] = useState('');\r\n\r\n\tconst minPasswordLength = 2;\r\n\r\n\tconst signUpSchema = Joi.object({\r\n\t\tusername: Joi.string().required(),\r\n\t\temail: Joi.string().required().email({ minDomainSegments: 2, tlds: { allow: [ 'com', 'net' ] } }),\r\n\t\tpassword: Joi.string().required().min(minPasswordLength)\r\n\t});\r\n\r\n\tconst updateEmail = (input) => {\r\n\t\tsetEmail(input);\r\n\t\tif (input === '') setEmailInputEmpty(true);\r\n\t\telse setEmailInputEmpty(false);\r\n\t};\r\n\r\n\tconst updatePassword = (input) => {\r\n\t\tsetPassword(input);\r\n\t\tif (input === '') setPasswordInputEmpty(true);\r\n\t\telse setPasswordInputEmpty(false);\r\n\t};\r\n\r\n\tconst updateUsername = (input) => {\r\n\t\tsetUsername(input);\r\n\t\tif (input === '') setUsernameEmpty(true);\r\n\t\telse setUsernameEmpty(false);\r\n\t};\r\n\r\n\tconst checkIfEncodeUriValid = (input) => {\r\n\t\treturn encodeURI(input) === input;\r\n\t};\r\n\r\n\tconst toCapitalize = (input) => {\r\n\t\treturn input.slice(0, 1).toUpperCase() + input.slice(1);\r\n\t};\r\n\r\n\tconst submitSignUpInfo = async () => {\r\n\t\tconst usernameUriEncoded = checkIfEncodeUriValid(username.replace(' ', ''));\r\n\t\tconst emailUriEncoded = checkIfEncodeUriValid(email);\r\n\t\tconst passwordUriEncoded = checkIfEncodeUriValid(password);\r\n\t\tconst signUpValidation = signUpSchema.validate({ username, email, password });\r\n\t\tif (signUpValidation.error) {\r\n\t\t\tconst empty = signUpValidation.error.toString().includes('empty');\r\n\t\t\tconst valid = signUpValidation.error.toString().includes('valid');\r\n\t\t\tconst tooShort = signUpValidation.error.toString().includes('at least');\r\n\t\t\tconst errorField = signUpValidation.error.toString().split('\"')[1];\r\n\r\n\t\t\tif (empty) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ' cannot be empty');\r\n\t\t\t} else if (valid) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ' must be valid');\r\n\t\t\t} else if (errorField === 'password' && tooShort) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ` must be at least ${minPasswordLength} characters long.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!usernameUriEncoded || !emailUriEncoded || !passwordUriEncoded) {\r\n\t\t\treturn setError('Login information can only have letters and numbers!');\r\n\t\t}\r\n\t\tconsole.log(username, email, password);\r\n\t\tconst data = { username, email, password };\r\n\t\tconst dataString = JSON.stringify(data);\r\n\t\t// console.log(dataString);\r\n\t\ttry {\r\n\t\t\tconst signInRequest = await fetch(process.env.SIGN_UP_URL, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: dataString\r\n\t\t\t});\r\n\t\t\tconst signInJson = await signInRequest.json();\r\n\r\n\t\t\tif (signInJson.email) {\r\n\t\t\t\tsetError(signInJson.email[0]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconsole.log(signInJson);\r\n\t\t\tsetError('');\r\n\t\t\tconst accessJwtToken = signInJson.access;\r\n\t\t\tconst refreshJwtToken = signInJson.refresh;\r\n\t\t\tlocalStorage.setItem('refresh-token', refreshJwtToken);\r\n\t\t\tconsole.log(type(accessJwtToken));\r\n\t\t\tdispatch(setJwt(accessJwtToken));\r\n\t\t\treturn router.push('/dashboard/home');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\tconst toggleViewPassword = () => {\r\n\t\tsetViewPassword(!viewPassword);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className={styles.signUpContainer}>\r\n\t\t\t<section className={styles.textSection}>\r\n\t\t\t\t<div className={styles.logoImage}>\r\n\t\t\t\t\t<img src=\"./images/logo.jpg\" alt=\"Workflow\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.signUpSection}>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\tSign Up to <br /> Workflow\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<div className={styles.googleSignIn}>\r\n\t\t\t\t\t\t<img src=\"/images/google_logo.png\" />\r\n\t\t\t\t\t\t<h4>Sign Up with Google</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.emailSignIn}>\r\n\t\t\t\t\t\t<p>Or sign-up with email</p>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.usernameLabel]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !usernameEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUsername\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Username') })}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updateUsername(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.emailLabel]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !emailInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Email') })}\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updateEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.passwordLabel]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !passwordInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Password') })}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updatePassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype={viewPassword ? 'text' : 'password'}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<img src=\"/images/eye.png\" onClick={() => toggleViewPassword()} alt=\"Toggle Password\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span className={styles.signUpError}>{error}</span>\r\n\t\t\t\t\t\t\t<div onClick={() => submitSignUpInfo()} className={styles.submitEmailForm}>\r\n\t\t\t\t\t\t\t\tCreate Your Account\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<p className={styles.legal}>\r\n\t\t\t\t\t\t\tBy signing up, I agree to the <span className={styles.underline}>Privacy Policy</span> and{' '}\r\n\t\t\t\t\t\t\t<span className={styles.underline}>Terms of Service</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3 className={styles.switchToLogin}>\r\n\t\t\t\t\t\tAlready have an account?{'  '}\r\n\t\t\t\t\t\t<Link href=\"/login\">\r\n\t\t\t\t\t\t\t<span className={styles.loginBtn}>Log in</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.copyright}>&copy; 2020. All Rights Reserved. Workflow.</div>\r\n\t\t\t</section>\r\n\t\t\t<section className={styles.slideshowSection} />\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}