{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\signUp.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/sign-up.module.scss';\nimport Link from 'next/link';\nimport classnames from 'classnames';\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\n\nvar Joi = require('@hapi/joi');\n\nvar SignUp = function SignUp() {\n  _s();\n\n  var _classnames, _classnames3, _classnames5;\n\n  var router = useRouter();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(true),\n      emailInputEmpty = _useState4[0],\n      setEmailInputEmpty = _useState4[1];\n\n  var _useState5 = useState(true),\n      passwordInputEmpty = _useState5[0],\n      setPasswordInputEmpty = _useState5[1];\n\n  var _useState6 = useState(true),\n      usernameEmpty = _useState6[0],\n      setUsernameEmpty = _useState6[1];\n\n  var _useState7 = useState(false),\n      viewPassword = _useState7[0],\n      setViewPassword = _useState7[1];\n\n  var _useState8 = useState(''),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var minPasswordLength = 2;\n  var signUpSchema = Joi.object({\n    username: Joi.string().required(),\n    email: Joi.string().required().email({\n      minDomainSegments: 2,\n      tlds: {\n        allow: ['com', 'net']\n      }\n    }),\n    password: Joi.string().required().min(minPasswordLength)\n  });\n\n  var updateEmail = function updateEmail(input) {\n    setEmail(input);\n    if (input === '') setEmailInputEmpty(true);else setEmailInputEmpty(false);\n  };\n\n  var updatePassword = function updatePassword(input) {\n    setPassword(input);\n    if (input === '') setPasswordInputEmpty(true);else setPasswordInputEmpty(false);\n  };\n\n  var updateUsername = function updateUsername(input) {\n    setUsername(input);\n    if (input === '') setUsernameEmpty(true);else setUsernameEmpty(false);\n  };\n\n  var checkIfEncodeUriValid = function checkIfEncodeUriValid(input) {\n    return encodeURI(input) === input;\n  };\n\n  var toCapitalize = function toCapitalize(input) {\n    return input.slice(0, 1).toUpperCase() + input.slice(1);\n  }; // const submitSignUpInfo = async () => {\n  // \tconst usernameUriEncoded = checkIfEncodeUriValid(username.replace(' ', ''));\n  // \tconst emailUriEncoded = checkIfEncodeUriValid(email);\n  // \tconst passwordUriEncoded = checkIfEncodeUriValid(password);\n  // \tconst signUpValidation = signUpSchema.validate({ username, email, password });\n  // \tif (signUpValidation.error) {\n  // \t\tconst empty = signUpValidation.error.toString().includes('empty');\n  // \t\tconst valid = signUpValidation.error.toString().includes('valid');\n  // \t\tconst tooShort = signUpValidation.error.toString().includes('at least');\n  // \t\tconst errorField = signUpValidation.error.toString().split('\"')[1];\n  // \t\tif (empty) {\n  // \t\t\treturn setError(toCapitalize(errorField) + ' cannot be empty');\n  // \t\t} else if (valid) {\n  // \t\t\treturn setError(toCapitalize(errorField) + ' must be valid');\n  // \t\t} else if (errorField === 'password' && tooShort) {\n  // \t\t\treturn setError(toCapitalize(errorField) + ` must be at least ${minPasswordLength} characters long.`);\n  // \t\t}\n  // \t}\n  // \tif (!usernameUriEncoded || !emailUriEncoded || !passwordUriEncoded) {\n  // \t\treturn setError('Login information can only have letters and numbers!');\n  // \t}\n  // \tconst data = { \"name\": username, \"email\": email, \"password\": password };\n  // \tconst dataString = JSON.stringify(data);\n  // \tconst signInRequest = await fetch(process.env.SIGN_UP_URL, {\n  // \t\tmethod: 'POST',\n  // \t\theaders: {\n  // \t\t\t'Content-Type': 'application/json',\n  // \t\t\tAccept: 'application/json'\n  // \t\t},\n  // \t\tbody: dataString\n  // \t});\n  // \tconst signInJson = await signInRequest.json();\n  // \tif (signInJson.msg === 'User with this email already exists.') {\n  // \t\treturn setError(signInJson.msg);\n  // \t}\n  // \tsetError('');\n  // \tlocalStorage.setItem('jwt', signInJson.token);\n  // \treturn router.push(\"/\");\n  // };\n\n\n  var toggleViewPassword = function toggleViewPassword() {\n    setViewPassword(!viewPassword);\n  };\n\n  return __jsx(\"main\", {\n    className: styles.signUpContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }\n  }, __jsx(\"section\", {\n    className: styles.textSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: styles.logoImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: \"./images/logo.jpg\",\n    alt: \"Workflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    className: styles.signUpSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }\n  }, \"Sign Up to \", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 18\n    }\n  }), \" Workflow\"), __jsx(\"div\", {\n    className: styles.googleSignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/google_logo.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Sign Up with Google\")), __jsx(\"div\", {\n    className: styles.emailSignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Or sign-up with email\"), __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames((_classnames = {}, _defineProperty(_classnames, styles.label, true), _defineProperty(_classnames, styles.usernameLabel, true), _defineProperty(_classnames, styles.labelHover, !usernameEmpty), _classnames)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Username\"), __jsx(\"input\", {\n    value: username,\n    className: classnames(_defineProperty({}, styles.errorInput, error.includes('Username'))),\n    onChange: function onChange(e) {\n      return updateUsername(e.target.value);\n    },\n    type: \"text\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames((_classnames3 = {}, _defineProperty(_classnames3, styles.label, true), _defineProperty(_classnames3, styles.emailLabel, true), _defineProperty(_classnames3, styles.labelHover, !emailInputEmpty), _classnames3)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: classnames(_defineProperty({}, styles.errorInput, error.includes('Email'))),\n    value: email,\n    onChange: function onChange(e) {\n      return updateEmail(e.target.value);\n    },\n    type: \"email\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames((_classnames5 = {}, _defineProperty(_classnames5, styles.label, true), _defineProperty(_classnames5, styles.passwordLabel, true), _defineProperty(_classnames5, styles.labelHover, !passwordInputEmpty), _classnames5)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    value: password,\n    className: classnames(_defineProperty({}, styles.errorInput, error.includes('Password'))),\n    onChange: function onChange(e) {\n      return updatePassword(e.target.value);\n    },\n    type: viewPassword ? 'text' : 'password',\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    src: \"/images/eye.png\",\n    onClick: function onClick() {\n      return toggleViewPassword();\n    },\n    alt: \"Toggle Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  })), __jsx(\"span\", {\n    className: styles.signUpError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 8\n    }\n  }, error), __jsx(\"div\", {\n    onClick: function onClick() {\n      return submitSignUpInfo();\n    },\n    className: styles.submitEmailForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 8\n    }\n  }, \"Create Your Account\")), __jsx(\"p\", {\n    className: styles.legal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, \"By signing up, I agree to the \", __jsx(\"span\", {\n    className: styles.underline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 38\n    }\n  }, \"Privacy Policy\"), \" and\", ' ', __jsx(\"span\", {\n    className: styles.underline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 8\n    }\n  }, \"Terms of Service\"))), __jsx(\"h3\", {\n    className: styles.switchToLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 6\n    }\n  }, \"Already have an account?\", '  ', __jsx(Link, {\n    href: \"/login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: styles.loginBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 8\n    }\n  }, \"Log in\")))), __jsx(\"div\", {\n    className: styles.copyright,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }, \"\\xA9 2020. All Rights Reserved. Workflow.\")), __jsx(\"section\", {\n    className: styles.slideshowSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 4\n    }\n  }));\n};\n\n_s(SignUp, \"hpk2SrHSr/hkpfR52WKX/DyyF/s=\", false, function () {\n  return [useRouter];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/signUp.js"],"names":["styles","Link","classnames","useState","useRouter","Joi","require","SignUp","router","email","setEmail","username","setUsername","password","setPassword","emailInputEmpty","setEmailInputEmpty","passwordInputEmpty","setPasswordInputEmpty","usernameEmpty","setUsernameEmpty","viewPassword","setViewPassword","error","setError","minPasswordLength","signUpSchema","object","string","required","minDomainSegments","tlds","allow","min","updateEmail","input","updatePassword","updateUsername","checkIfEncodeUriValid","encodeURI","toCapitalize","slice","toUpperCase","toggleViewPassword","signUpContainer","textSection","logoImage","signUpSection","googleSignIn","emailSignIn","label","usernameLabel","labelHover","errorInput","includes","e","target","value","emailLabel","passwordLabel","signUpError","submitSignUpInfo","submitEmailForm","legal","underline","switchToLogin","loginBtn","copyright","slideshowSection"],"mappings":"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","sourcesContent":["import styles from '../styles/scss/sign-up.module.scss';\r\nimport Link from 'next/link';\r\nimport classnames from 'classnames';\r\nimport { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nconst Joi = require('@hapi/joi');\r\n\r\nconst SignUp = () => {\r\n\tconst router = useRouter();\r\n\r\n\tconst [ email, setEmail ] = useState('');\r\n\tconst [ username, setUsername ] = useState('');\r\n\tconst [ password, setPassword ] = useState('');\r\n\tconst [ emailInputEmpty, setEmailInputEmpty ] = useState(true);\r\n\tconst [ passwordInputEmpty, setPasswordInputEmpty ] = useState(true);\r\n\tconst [ usernameEmpty, setUsernameEmpty ] = useState(true);\r\n\tconst [ viewPassword, setViewPassword ] = useState(false);\r\n\tconst [ error, setError ] = useState('');\r\n\r\n\tconst minPasswordLength = 2;\r\n\r\n\tconst signUpSchema = Joi.object({\r\n\t\tusername: Joi.string().required(),\r\n\t\temail: Joi.string().required().email({ minDomainSegments: 2, tlds: { allow: [ 'com', 'net' ] } }),\r\n\t\tpassword: Joi.string().required().min(minPasswordLength)\r\n\t});\r\n\r\n\tconst updateEmail = (input) => {\r\n\t\tsetEmail(input);\r\n\t\tif (input === '') setEmailInputEmpty(true);\r\n\t\telse setEmailInputEmpty(false);\r\n\t};\r\n\r\n\tconst updatePassword = (input) => {\r\n\t\tsetPassword(input);\r\n\t\tif (input === '') setPasswordInputEmpty(true);\r\n\t\telse setPasswordInputEmpty(false);\r\n\t};\r\n\r\n\tconst updateUsername = (input) => {\r\n\t\tsetUsername(input);\r\n\t\tif (input === '') setUsernameEmpty(true);\r\n\t\telse setUsernameEmpty(false);\r\n\t};\r\n\r\n\tconst checkIfEncodeUriValid = (input) => {\r\n\t\treturn encodeURI(input) === input;\r\n\t};\r\n\r\n\tconst toCapitalize = (input) => {\r\n\t\treturn input.slice(0, 1).toUpperCase() + input.slice(1);\r\n\t};\r\n\r\n\t// const submitSignUpInfo = async () => {\r\n\t// \tconst usernameUriEncoded = checkIfEncodeUriValid(username.replace(' ', ''));\r\n\t// \tconst emailUriEncoded = checkIfEncodeUriValid(email);\r\n\t// \tconst passwordUriEncoded = checkIfEncodeUriValid(password);\r\n\t// \tconst signUpValidation = signUpSchema.validate({ username, email, password });\r\n\t// \tif (signUpValidation.error) {\r\n\t// \t\tconst empty = signUpValidation.error.toString().includes('empty');\r\n\t// \t\tconst valid = signUpValidation.error.toString().includes('valid');\r\n\t// \t\tconst tooShort = signUpValidation.error.toString().includes('at least');\r\n\t// \t\tconst errorField = signUpValidation.error.toString().split('\"')[1];\r\n\r\n\t// \t\tif (empty) {\r\n\t// \t\t\treturn setError(toCapitalize(errorField) + ' cannot be empty');\r\n\t// \t\t} else if (valid) {\r\n\t// \t\t\treturn setError(toCapitalize(errorField) + ' must be valid');\r\n\t// \t\t} else if (errorField === 'password' && tooShort) {\r\n\t// \t\t\treturn setError(toCapitalize(errorField) + ` must be at least ${minPasswordLength} characters long.`);\r\n\t// \t\t}\r\n\t// \t}\r\n\t// \tif (!usernameUriEncoded || !emailUriEncoded || !passwordUriEncoded) {\r\n\t// \t\treturn setError('Login information can only have letters and numbers!');\r\n\t// \t}\r\n\t// \tconst data = { \"name\": username, \"email\": email, \"password\": password };\r\n\t// \tconst dataString = JSON.stringify(data);\r\n\t// \tconst signInRequest = await fetch(process.env.SIGN_UP_URL, {\r\n\t// \t\tmethod: 'POST',\r\n\t// \t\theaders: {\r\n\t// \t\t\t'Content-Type': 'application/json',\r\n\t// \t\t\tAccept: 'application/json'\r\n\t// \t\t},\r\n\t// \t\tbody: dataString\r\n\t// \t});\r\n\t// \tconst signInJson = await signInRequest.json();\r\n\r\n\t// \tif (signInJson.msg === 'User with this email already exists.') {\r\n\t// \t\treturn setError(signInJson.msg);\r\n\t// \t}\r\n\t// \tsetError('');\r\n\t// \tlocalStorage.setItem('jwt', signInJson.token);\r\n\t// \treturn router.push(\"/\");\r\n\t// };\r\n\r\n\tconst toggleViewPassword = () => {\r\n\t\tsetViewPassword(!viewPassword);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className={styles.signUpContainer}>\r\n\t\t\t<section className={styles.textSection}>\r\n\t\t\t\t<div className={styles.logoImage}>\r\n\t\t\t\t\t<img src=\"./images/logo.jpg\" alt=\"Workflow\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.signUpSection}>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\tSign Up to <br /> Workflow\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<div className={styles.googleSignIn}>\r\n\t\t\t\t\t\t<img src=\"/images/google_logo.png\" />\r\n\t\t\t\t\t\t<h4>Sign Up with Google</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.emailSignIn}>\r\n\t\t\t\t\t\t<p>Or sign-up with email</p>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.usernameLabel]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !usernameEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUsername\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Username') })}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updateUsername(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.emailLabel]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !emailInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Email') })}\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updateEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.passwordLabel]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !passwordInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Password') })}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updatePassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype={viewPassword ? 'text' : 'password'}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<img src=\"/images/eye.png\" onClick={() => toggleViewPassword()} alt=\"Toggle Password\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span className={styles.signUpError}>{error}</span>\r\n\t\t\t\t\t\t\t<div onClick={() => submitSignUpInfo()} className={styles.submitEmailForm}>\r\n\t\t\t\t\t\t\t\tCreate Your Account\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<p className={styles.legal}>\r\n\t\t\t\t\t\t\tBy signing up, I agree to the <span className={styles.underline}>Privacy Policy</span> and{' '}\r\n\t\t\t\t\t\t\t<span className={styles.underline}>Terms of Service</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3 className={styles.switchToLogin}>\r\n\t\t\t\t\t\tAlready have an account?{'  '}\r\n\t\t\t\t\t\t<Link href=\"/login\">\r\n\t\t\t\t\t\t\t<span className={styles.loginBtn}>Log in</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.copyright}>&copy; 2020. All Rights Reserved. Workflow.</div>\r\n\t\t\t</section>\r\n\t\t\t<section className={styles.slideshowSection} />\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}