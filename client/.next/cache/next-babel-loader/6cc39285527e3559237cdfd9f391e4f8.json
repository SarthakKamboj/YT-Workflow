{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\workflow\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux'; // import { jwt } from '../../components/JWT';\n\nimport Router from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport DashboardMenu from '../../components/DashboardMenu';\nimport styles from '../../styles/scss/worklow_editor.module.scss';\nimport Cookie from 'js-cookie';\nimport parseCookie from '../../components/parseCookie'; // const dispatch = useDispatch();\n\nconst Workflow = () => {\n  // console.log(Router.pathname);\n  const jwtToken = useSelector(state => state.jwtToken);\n  const {\n    0: audioUrls,\n    1: setAudioUrls\n  } = useState([]);\n  const {\n    0: imageUrls,\n    1: setImageUrls\n  } = useState([]);\n  const {\n    0: videoUrls,\n    1: setVideoUrls\n  } = useState([]);\n  const {\n    0: videoEditingUrls,\n    1: setVideoEditingUrls\n  } = useState([]);\n  const id = Router.query.id;\n  useEffect(() => {\n    fetch(`http://127.0.0.1:8000/get-workflow-files/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }).then(res => res.json()).then(filesJson => {\n      const fileUrlsJson = filesJson['workflow-file-urls']; // console.log(filesJson['workflow-file-urls']);\n\n      setAudioUrls(fileUrlsJson['audio']);\n      setImageUrls(fileUrlsJson['images']);\n      setVideoUrls(fileUrlsJson['videos']);\n      setVideoEditingUrls(fileUrlsJson['video_editing']);\n    }).catch(err => console.log(err));\n  }, []); // console.log('hi');\n\n  return __jsx(\"main\", {\n    className: styles.workflowEditorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.dashboardMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: styles.images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, imageUrls.map(imageUrl => {\n    const dotParts = imageUrl.split('.');\n    const mimeType = dotParts[dotParts.length - 1];\n    return __jsx(\"a\", {\n      href: imageUrl,\n      key: imageUrl,\n      download: `hi.${mimeType}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 8\n      }\n    }, __jsx(\"img\", {\n      src: imageUrl,\n      className: styles.workflowImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  })), __jsx(\"div\", {\n    className: styles.audios,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, audioUrls.map(audioUrl => {\n    const dotParts = audioUrl.split('.');\n    const mimeType = dotParts[dotParts.length - 1];\n    return __jsx(\"audio\", {\n      key: audioUrl,\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }\n    }, __jsx(\"source\", {\n      src: audioUrl,\n      type: `audio/${mimeType}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), \";\");\n  })), __jsx(\"div\", {\n    className: styles.videos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, videoUrls.map(videoUrl => {\n    const dotParts = videoUrl.split('.');\n    const mimeType = dotParts[dotParts.length - 1]; // console.log(`video/${mimeType}`);\n\n    if (mimeType !== 'mov') {\n      return __jsx(\"video\", {\n        key: videoUrl,\n        className: styles.workflowVideo,\n        width: \"320\",\n        height: \"240\",\n        controls: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, __jsx(\"source\", {\n        src: videoUrl,\n        type: `video/${mimeType}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 10\n        }\n      }), \";\");\n    } else {\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      });\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, videoEditingUrls)));\n};\n\nexport async function getServerSideProps({\n  params\n}) {\n  console.log('props');\n  console.log(params.jwt);\n  return {\n    props: {\n      id: params.id\n    }\n  };\n}\nexport async function getServerSidePaths({\n  req\n}) {\n  // const workflowIds = localStorage.getItem('workflowIds');\n  // const jwt = localStorage.getItem('jwt');\n  // const jwt =\n  // \t'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTkyMzMyOTI1LCJqdGkiOiIyNzhiMjAyMTQyNTY0MWIxYTc5NjJmNGE4NzI2ZjcwNSIsInVzZXJfaWQiOjQ1fQ.rGAuQaDnBaueRKcE6ZE4t7Ym4Y-HbHqFYn-k-iWr1-0'; // console.log(jwtToken);\n  // console.log(jwt);\n  // const workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\n  // \theaders: {\n  // \t\t'Content-Type': 'application/json',\n  // \t\tAuthorization: `Bearer ${jwt}`\n  // \t}\n  // });\n  // const workflowIdsJson = await workflowIdsResponse.json();\n  // console.log(workflowIdsJson);\n  // const workflowIdsArray = await workflowIdsJson['workflow-ids'];\n  // console.log(workflowIdsArray);\n  // const paths = workflowIdsArray.map((workflowId) => {\n  // \treturn {\n  // \t\tparams: {\n  // \t\t\tid: workflowId.toString()\n  // \t\t}\n  // \t};\n  // });\n  const cookies = parseCookie(req);\n  console.log(cookies.jwt);\n  const res = await fetch('http://127.0.0.1:8000/get-workflow-ids', {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: cookies.jwt\n    }\n  });\n  const resJson = res.json();\n  console.log('res json');\n  console.log(resJson);\n  const paths = [{\n    params: {\n      id: '8',\n      jwt: cookies\n    }\n  }];\n  console.log(paths);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default Workflow;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/workflow/[id].js"],"names":["useSelector","Router","React","useState","useEffect","DashboardMenu","styles","Cookie","parseCookie","Workflow","jwtToken","state","audioUrls","setAudioUrls","imageUrls","setImageUrls","videoUrls","setVideoUrls","videoEditingUrls","setVideoEditingUrls","id","query","fetch","headers","Authorization","then","res","json","filesJson","fileUrlsJson","catch","err","console","log","workflowEditorContainer","dashboardMenuContainer","editor","images","map","imageUrl","dotParts","split","mimeType","length","workflowImage","audios","audioUrl","videos","videoUrl","workflowVideo","getServerSideProps","params","jwt","props","getServerSidePaths","req","cookies","resJson","paths","fallback"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux';\r\n// import { jwt } from '../../components/JWT';\r\nimport Router from 'next/router';\r\nimport React, { useState, useEffect } from 'react';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\nimport styles from '../../styles/scss/worklow_editor.module.scss';\r\nimport Cookie from 'js-cookie';\r\nimport parseCookie from '../../components/parseCookie';\r\n\r\n// const dispatch = useDispatch();\r\n\r\nconst Workflow = () => {\r\n\t// console.log(Router.pathname);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\r\n\tconst [ audioUrls, setAudioUrls ] = useState([]);\r\n\tconst [ imageUrls, setImageUrls ] = useState([]);\r\n\tconst [ videoUrls, setVideoUrls ] = useState([]);\r\n\tconst [ videoEditingUrls, setVideoEditingUrls ] = useState([]);\r\n\tconst id = Router.query.id;\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`http://127.0.0.1:8000/get-workflow-files/${id}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((filesJson) => {\r\n\t\t\t\tconst fileUrlsJson = filesJson['workflow-file-urls'];\r\n\t\t\t\t// console.log(filesJson['workflow-file-urls']);\r\n\t\t\t\tsetAudioUrls(fileUrlsJson['audio']);\r\n\t\t\t\tsetImageUrls(fileUrlsJson['images']);\r\n\t\t\t\tsetVideoUrls(fileUrlsJson['videos']);\r\n\t\t\t\tsetVideoEditingUrls(fileUrlsJson['video_editing']);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}, []);\r\n\r\n\t// console.log('hi');\r\n\treturn (\r\n\t\t<main className={styles.workflowEditorContainer}>\r\n\t\t\t<div className={styles.dashboardMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.editor}>\r\n\t\t\t\t{/* Images */}\r\n\t\t\t\t<div className={styles.images}>\r\n\t\t\t\t\t{imageUrls.map((imageUrl) => {\r\n\t\t\t\t\t\tconst dotParts = imageUrl.split('.');\r\n\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<a href={imageUrl} key={imageUrl} download={`hi.${mimeType}`}>\r\n\t\t\t\t\t\t\t\t<img src={imageUrl} className={styles.workflowImage} />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* audio */}\r\n\t\t\t\t<div className={styles.audios}>\r\n\t\t\t\t\t{audioUrls.map((audioUrl) => {\r\n\t\t\t\t\t\tconst dotParts = audioUrl.split('.');\r\n\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<audio key={audioUrl} controls>\r\n\t\t\t\t\t\t\t\t<source src={audioUrl} type={`audio/${mimeType}`} />;\r\n\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.videos}>\r\n\t\t\t\t\t{videoUrls.map((videoUrl) => {\r\n\t\t\t\t\t\tconst dotParts = videoUrl.split('.');\r\n\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\r\n\t\t\t\t\t\t// console.log(`video/${mimeType}`);\r\n\t\t\t\t\t\tif (mimeType !== 'mov') {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<video\r\n\t\t\t\t\t\t\t\t\tkey={videoUrl}\r\n\t\t\t\t\t\t\t\t\tclassName={styles.workflowVideo}\r\n\t\t\t\t\t\t\t\t\twidth=\"320\"\r\n\t\t\t\t\t\t\t\t\theight=\"240\"\r\n\t\t\t\t\t\t\t\t\tcontrols\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<source src={videoUrl} type={`video/${mimeType}`} />;\r\n\t\t\t\t\t\t\t\t</video>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn <React.Fragment />;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>{videoEditingUrls}</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport async function getServerSideProps({ params }) {\r\n\tconsole.log('props');\r\n\tconsole.log(params.jwt);\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tid: params.id\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport async function getServerSidePaths({ req }) {\r\n\t// const workflowIds = localStorage.getItem('workflowIds');\r\n\t// const jwt = localStorage.getItem('jwt');\r\n\t// const jwt =\r\n\t// \t'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTkyMzMyOTI1LCJqdGkiOiIyNzhiMjAyMTQyNTY0MWIxYTc5NjJmNGE4NzI2ZjcwNSIsInVzZXJfaWQiOjQ1fQ.rGAuQaDnBaueRKcE6ZE4t7Ym4Y-HbHqFYn-k-iWr1-0'; // console.log(jwtToken);\r\n\t// console.log(jwt);\r\n\t// const workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\r\n\t// \theaders: {\r\n\t// \t\t'Content-Type': 'application/json',\r\n\t// \t\tAuthorization: `Bearer ${jwt}`\r\n\t// \t}\r\n\t// });\r\n\t// const workflowIdsJson = await workflowIdsResponse.json();\r\n\t// console.log(workflowIdsJson);\r\n\t// const workflowIdsArray = await workflowIdsJson['workflow-ids'];\r\n\t// console.log(workflowIdsArray);\r\n\t// const paths = workflowIdsArray.map((workflowId) => {\r\n\t// \treturn {\r\n\t// \t\tparams: {\r\n\t// \t\t\tid: workflowId.toString()\r\n\t// \t\t}\r\n\t// \t};\r\n\t// });\r\n\tconst cookies = parseCookie(req);\r\n\tconsole.log(cookies.jwt);\r\n\tconst res = await fetch('http://127.0.0.1:8000/get-workflow-ids', {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: cookies.jwt\r\n\t\t}\r\n\t});\r\n\tconst resJson = res.json();\r\n\tconsole.log('res json');\r\n\tconsole.log(resJson);\r\n\tconst paths = [\r\n\t\t{\r\n\t\t\tparams: {\r\n\t\t\t\tid: '8',\r\n\t\t\t\tjwt: cookies\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n\tconsole.log(paths);\r\n\treturn {\r\n\t\tpaths,\r\n\t\tfallback: false\r\n\t};\r\n}\r\n\r\nexport default Workflow;\r\n"]},"metadata":{},"sourceType":"module"}