{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowDescription.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/workflow-description.module.scss';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nvar WorkflowDescription = function WorkflowDescription(_ref) {\n  _s();\n\n  var initalDescription = _ref.initalDescription;\n\n  var _useState = useState(null),\n      description = _useState[0],\n      setDescription = _useState[1]; // const jwtToken = useSelector((state) => state.jwtToken);\n  // const [ fetched, setFetched ] = useState(false);\n  // const updateDescription = (e) => {\n  // \tsetDescription(e.target.value);\n  // };\n\n\n  useEffect(function () {\n    setDescription(initialDescription);\n  }); // useEffect(\n  // \t// () => {\n  // \t\t// if (!fetched) {\n  // \t\t// async function fetchData() {\n  // \t\t// \tconst descRes = await fetch(`http://127.0.0.1:8000/get-workflow-description/${id}`, {\n  // \t\t// \t\theaders: {\n  // \t\t// \t\t\t'Content-Type': 'application/json',\n  // \t\t// \t\t\tAuthorization: `Bearer ${jwtToken}`\n  // \t\t// \t\t}\n  // \t\t// \t});\n  // \t\t// \tconst descJson = await descRes.json();\n  // \t\t// \tconsole.log(descJson['description']);\n  // \t\t// \tsetDescription(descJson['description']);\n  // \t\t// }\n  // \t\t// fetchData();\n  // \t\t// setFetched(true);\n  // \t\t// }\n  // \t\t// .then((res) => res.json())\n  // \t\t// .then((res) => {\n  // \t\t// \tconsole.log(res.description);\n  // \t\t// \tsetDescription(res.description);\n  // \t\t// })\n  // \t\t// .catch((err) => console.log(err));\n  // \t},\n  // \t// [ ]\n  // );\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.descriptionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, \"Description\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }), __jsx(\"textarea\", {\n    name: \"description\",\n    className: styles.description,\n    defaultValue: description ? description : 'none',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }));\n};\n\n_s(WorkflowDescription, \"Dgx9+OmcjP5d1f4s3E88pkzc11E=\");\n\n_c = WorkflowDescription;\nexport default WorkflowDescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkflowDescription\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowDescription.js"],"names":["styles","useState","useEffect","useSelector","WorkflowDescription","initalDescription","description","setDescription","initialDescription","descriptionTitle"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,iDAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA2B;AAAA;;AAAA,MAAxBC,iBAAwB,QAAxBA,iBAAwB;;AAAA,kBACdJ,QAAQ,CAAC,IAAD,CADM;AAAA,MAC9CK,WAD8C;AAAA,MACjCC,cADiC,iBAEtD;AACA;AACA;AACA;AACA;;;AACAL,EAAAA,SAAS,CAAC,YAAM;AACfK,IAAAA,cAAc,CAACC,kBAAD,CAAd;AACA,GAFQ,CAAT,CAPsD,CAUtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAER,MAAM,CAACS,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AACC,IAAA,IAAI,EAAC,aADN;AAEC,IAAA,SAAS,EAAET,MAAM,CAACM,WAFnB;AAGC,IAAA,YAAY,EAAEA,WAAW,GAAGA,WAAH,GAAiB,MAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADD;AAWA,CA/CD;;GAAMF,mB;;KAAAA,mB;AAiDN,eAAeA,mBAAf","sourcesContent":["import styles from '../styles/scss/workflow-description.module.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WorkflowDescription = ({ initalDescription }) => {\r\n\tconst [ description, setDescription ] = useState(null);\r\n\t// const jwtToken = useSelector((state) => state.jwtToken);\r\n\t// const [ fetched, setFetched ] = useState(false);\r\n\t// const updateDescription = (e) => {\r\n\t// \tsetDescription(e.target.value);\r\n\t// };\r\n\tuseEffect(() => {\r\n\t\tsetDescription(initialDescription);\r\n\t});\r\n\t// useEffect(\r\n\t// \t// () => {\r\n\t// \t\t// if (!fetched) {\r\n\t// \t\t// async function fetchData() {\r\n\t// \t\t// \tconst descRes = await fetch(`http://127.0.0.1:8000/get-workflow-description/${id}`, {\r\n\t// \t\t// \t\theaders: {\r\n\t// \t\t// \t\t\t'Content-Type': 'application/json',\r\n\t// \t\t// \t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t// \t\t// \t\t}\r\n\t// \t\t// \t});\r\n\t// \t\t// \tconst descJson = await descRes.json();\r\n\t// \t\t// \tconsole.log(descJson['description']);\r\n\t// \t\t// \tsetDescription(descJson['description']);\r\n\t// \t\t// }\r\n\t// \t\t// fetchData();\r\n\t// \t\t// setFetched(true);\r\n\t// \t\t// }\r\n\t// \t\t// .then((res) => res.json())\r\n\t// \t\t// .then((res) => {\r\n\t// \t\t// \tconsole.log(res.description);\r\n\t// \t\t// \tsetDescription(res.description);\r\n\t// \t\t// })\r\n\t// \t\t// .catch((err) => console.log(err));\r\n\t// \t},\r\n\t// \t// [ ]\r\n\t// );\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className={styles.descriptionTitle}>Description</h2>\r\n\t\t\t<br />\r\n\t\t\t<textarea\r\n\t\t\t\tname=\"description\"\r\n\t\t\t\tclassName={styles.description}\r\n\t\t\t\tdefaultValue={description ? description : 'none'}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default WorkflowDescription;\r\n"]},"metadata":{},"sourceType":"module"}