{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowDescription.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/workflow-description.module.scss';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst WorkflowDescription = ({\n  initialDescription\n}) => {\n  const {\n    0: description,\n    1: setDescription\n  } = useState(null);\n  console.log(initialDescription); // const jwtToken = useSelector((state) => state.jwtToken);\n  // const [ fetched, setFetched ] = useState(false);\n  // const updateDescription = (e) => {\n  // \tsetDescription(e.target.value);\n  // };\n  // useEffect(() => {\n  // \tsetDescription(initialDescription);\n  // });\n\n  const updateDesc = e => {\n    setDescription(e.target.value);\n  }; // useEffect(\n  // \t// () => {\n  // \t\t// if (!fetched) {\n  // \t\t// async function fetchData() {\n  // \t\t// \tconst descRes = await fetch(`http://127.0.0.1:8000/get-workflow-description/${id}`, {\n  // \t\t// \t\theaders: {\n  // \t\t// \t\t\t'Content-Type': 'application/json',\n  // \t\t// \t\t\tAuthorization: `Bearer ${jwtToken}`\n  // \t\t// \t\t}\n  // \t\t// \t});\n  // \t\t// \tconst descJson = await descRes.json();\n  // \t\t// \tconsole.log(descJson['description']);\n  // \t\t// \tsetDescription(descJson['description']);\n  // \t\t// }\n  // \t\t// fetchData();\n  // \t\t// setFetched(true);\n  // \t\t// }\n  // \t\t// .then((res) => res.json())\n  // \t\t// .then((res) => {\n  // \t\t// \tconsole.log(res.description);\n  // \t\t// \tsetDescription(res.description);\n  // \t\t// })\n  // \t\t// .catch((err) => console.log(err));\n  // \t},\n  // \t// [ ]\n  // );\n\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.descriptionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, \"Description\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }), console.log(description), __jsx(\"textarea\", {\n    name: \"description\",\n    className: styles.description,\n    defaultValue: initialDescription,\n    onChange: e => updateDesc(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default WorkflowDescription;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowDescription.js"],"names":["styles","useState","useEffect","useSelector","WorkflowDescription","initialDescription","description","setDescription","console","log","updateDesc","e","target","value","descriptionTitle"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iDAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AACvD,QAAM;AAAA,OAAEC,WAAF;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,IAAD,CAAhD;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,kBAAZ,EAFuD,CAGvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMK,UAAU,GAAIC,CAAD,IAAO;AACzBJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACA,GAFD,CAXuD,CAcvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAEb,MAAM,CAACc,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGEN,OAAO,CAACC,GAAR,CAAYH,WAAZ,CAHF,EAIC;AACC,IAAA,IAAI,EAAC,aADN;AAEC,IAAA,SAAS,EAAEN,MAAM,CAACM,WAFnB;AAGC,IAAA,YAAY,EAAED,kBAHf;AAIC,IAAA,QAAQ,EAAGM,CAAD,IAAOD,UAAU,CAACC,CAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CADD;AAaA,CArDD;;AAuDA,eAAeP,mBAAf","sourcesContent":["import styles from '../styles/scss/workflow-description.module.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WorkflowDescription = ({ initialDescription }) => {\r\n\tconst [ description, setDescription ] = useState(null);\r\n\tconsole.log(initialDescription);\r\n\t// const jwtToken = useSelector((state) => state.jwtToken);\r\n\t// const [ fetched, setFetched ] = useState(false);\r\n\t// const updateDescription = (e) => {\r\n\t// \tsetDescription(e.target.value);\r\n\t// };\r\n\t// useEffect(() => {\r\n\t// \tsetDescription(initialDescription);\r\n\t// });\r\n\tconst updateDesc = (e) => {\r\n\t\tsetDescription(e.target.value);\r\n\t};\r\n\t// useEffect(\r\n\t// \t// () => {\r\n\t// \t\t// if (!fetched) {\r\n\t// \t\t// async function fetchData() {\r\n\t// \t\t// \tconst descRes = await fetch(`http://127.0.0.1:8000/get-workflow-description/${id}`, {\r\n\t// \t\t// \t\theaders: {\r\n\t// \t\t// \t\t\t'Content-Type': 'application/json',\r\n\t// \t\t// \t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t// \t\t// \t\t}\r\n\t// \t\t// \t});\r\n\t// \t\t// \tconst descJson = await descRes.json();\r\n\t// \t\t// \tconsole.log(descJson['description']);\r\n\t// \t\t// \tsetDescription(descJson['description']);\r\n\t// \t\t// }\r\n\t// \t\t// fetchData();\r\n\t// \t\t// setFetched(true);\r\n\t// \t\t// }\r\n\t// \t\t// .then((res) => res.json())\r\n\t// \t\t// .then((res) => {\r\n\t// \t\t// \tconsole.log(res.description);\r\n\t// \t\t// \tsetDescription(res.description);\r\n\t// \t\t// })\r\n\t// \t\t// .catch((err) => console.log(err));\r\n\t// \t},\r\n\t// \t// [ ]\r\n\t// );\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className={styles.descriptionTitle}>Description</h2>\r\n\t\t\t<br />\r\n\t\t\t{console.log(description)}\r\n\t\t\t<textarea\r\n\t\t\t\tname=\"description\"\r\n\t\t\t\tclassName={styles.description}\r\n\t\t\t\tdefaultValue={initialDescription}\r\n\t\t\t\tonChange={(e) => updateDesc(e)}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default WorkflowDescription;\r\n"]},"metadata":{},"sourceType":"module"}