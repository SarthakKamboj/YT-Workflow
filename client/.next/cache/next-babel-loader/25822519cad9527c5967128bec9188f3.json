{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\workflow\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDispatch } from 'react-redux'; // const dispatch = useDispatch();\n\nconst Workflow = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, \"Workflow \", props.id);\n};\n\nexport async function getStaticProps({\n  params\n}) {\n  return {\n    id: params.id\n  };\n}\nexport async function getStaticPaths() {\n  // const workflowIds = localStorage.getItem('workflowIds');\n  const workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\n    headers: {\n      'Content-Type': 'application/json' // \"Authorization\":\n\n    }\n  });\n  const workflowIdsJson = await workflowIdsResponse.json();\n  const workflowIdsArray = await workflowIdsJson['workflow-ids'];\n  const paths = workflowIdsArray.map(workflowId => {\n    return {\n      params: {\n        id: workflowId\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/workflow/[id].js"],"names":["useDispatch","Workflow","props","id","getStaticProps","params","getStaticPaths","workflowIdsResponse","fetch","headers","workflowIdsJson","json","workflowIdsArray","paths","map","workflowId","fallback"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B,C,CAEA;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC3B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeA,KAAK,CAACC,EAArB,CAAP;AACA,CAFD;;AAIA,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAChD,SAAO;AACNF,IAAAA,EAAE,EAAEE,MAAM,CAACF;AADL,GAAP;AAGA;AAED,OAAO,eAAeG,cAAf,GAAgC;AACtC;AACA,QAAMC,mBAAmB,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AACjFC,IAAAA,OAAO,EAAE;AACR,sBAAgB,kBADR,CAER;;AAFQ;AADwE,GAA3C,CAAvC;AAMA,QAAMC,eAAe,GAAG,MAAMH,mBAAmB,CAACI,IAApB,EAA9B;AACA,QAAMC,gBAAgB,GAAG,MAAMF,eAAe,CAAC,cAAD,CAA9C;AACA,QAAMG,KAAK,GAAGD,gBAAgB,CAACE,GAAjB,CAAsBC,UAAD,IAAgB;AAClD,WAAO;AACNV,MAAAA,MAAM,EAAE;AACPF,QAAAA,EAAE,EAAEY;AADG;AADF,KAAP;AAKA,GANa,CAAd;AAOA,SAAO;AACNF,IAAAA,KADM;AAENG,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA","sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\n// const dispatch = useDispatch();\r\n\r\nconst Workflow = (props) => {\r\n\treturn <div>Workflow {props.id}</div>;\r\n};\r\n\r\nexport async function getStaticProps({ params }) {\r\n\treturn {\r\n\t\tid: params.id\r\n\t};\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\t// const workflowIds = localStorage.getItem('workflowIds');\r\n\tconst workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t\t// \"Authorization\":\r\n\t\t}\r\n\t});\r\n\tconst workflowIdsJson = await workflowIdsResponse.json();\r\n\tconst workflowIdsArray = await workflowIdsJson['workflow-ids'];\r\n\tconst paths = workflowIdsArray.map((workflowId) => {\r\n\t\treturn {\r\n\t\t\tparams: {\r\n\t\t\t\tid: workflowId\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\treturn {\r\n\t\tpaths,\r\n\t\tfallback: false\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}