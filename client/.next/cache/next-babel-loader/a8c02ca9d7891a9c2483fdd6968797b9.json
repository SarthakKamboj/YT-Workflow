{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\workflow\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux'; // import { jwt } from '../../components/JWT';\n\nimport Router from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport DashboardMenu from '../../components/DashboardMenu';\nimport styles from '../../styles/scss/worklow_editor.module.scss';\nimport Cookie from 'js-cookie';\nimport { parseCookie } from '../../components/parseCookie';\nimport WorkflowDescription from '../../components/WorkflowDescription'; // const dispatch = useDispatch();\n\nconst Workflow = props => {\n  // console.log(Router.pathname);\n  const jwtToken = useSelector(state => state.jwtToken);\n  const {\n    0: audioUrls,\n    1: setAudioUrls\n  } = useState([]);\n  const {\n    0: imageUrls,\n    1: setImageUrls\n  } = useState([]);\n  const {\n    0: videoUrls,\n    1: setVideoUrls\n  } = useState([]);\n  const {\n    0: videoEditingUrls,\n    1: setVideoEditingUrls\n  } = useState([]);\n  const {\n    0: description,\n    1: setDescription\n  } = useState(null);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(null);\n  const {\n    0: starred,\n    1: setStarred\n  } = useState(null);\n  const {\n    0: finished,\n    1: setFinished\n  } = useState(null);\n  const {\n    0: fetched,\n    1: setFetched\n  } = useState(false); // const id = Router.query.id;\n\n  const id = props.id;\n  useEffect(() => {\n    async function fetchData() {\n      fetch(`http://127.0.0.1:8000/get-workflow/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${jwtToken}`\n        }\n      }).then(res => res.json()).then(workflowInfoJson => {\n        workflowInfoJson = workflowInfoJson['workflow'];\n        setDescription(workflowInfoJson.description);\n        setTitle(workflowInfoJson.title);\n        setStarred(workflowInfoJson.starred);\n        setFinished(workflowInfoJson.finished);\n      }).catch(err => console.log(err));\n      fetch(`http://127.0.0.1:8000/get-workflow-files/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${jwtToken}`\n        }\n      }).then(res => res.json()).then(filesJson => {\n        const fileUrlsJson = filesJson['workflow-file-urls']; // console.log(filesJson['workflow-file-urls']);\n\n        setAudioUrls(fileUrlsJson['audio']);\n        setImageUrls(fileUrlsJson['images']);\n        setVideoUrls(fileUrlsJson['videos']);\n        setVideoEditingUrls(fileUrlsJson['video_editing']);\n      }).catch(err => console.log(err));\n      setFetched(true);\n    }\n  }, []);\n\n  const pageInfo = () => {\n    if (!fetched) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \"Fetching\");\n    } else {\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }\n      }, __jsx(WorkflowDescription, {\n        initialDescription: description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }\n      }), __jsx(\"div\", {\n        className: styles.images,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, \"Images\"), imageUrls.map(imageUrl => {\n        const dotParts = imageUrl.split('.');\n        const mimeType = dotParts[dotParts.length - 1];\n        return __jsx(\"a\", {\n          href: imageUrl,\n          key: imageUrl,\n          download: `hi.${mimeType}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }\n        }, __jsx(\"img\", {\n          src: imageUrl,\n          className: styles.workflowImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 10\n          }\n        }));\n      })), __jsx(\"div\", {\n        className: styles.audios,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, \"Audio\"), audioUrls.map(audioUrl => {\n        const dotParts = audioUrl.split('.');\n        const mimeType = dotParts[dotParts.length - 1];\n        return __jsx(\"audio\", {\n          key: audioUrl,\n          controls: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }\n        }, __jsx(\"source\", {\n          src: audioUrl,\n          type: `audio/${mimeType}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 10\n          }\n        }), \";\");\n      })), __jsx(\"div\", {\n        className: styles.videos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, \"Videos\"), videoUrls.map(videoUrl => {\n        const dotParts = videoUrl.split('.');\n        const mimeType = dotParts[dotParts.length - 1];\n\n        if (mimeType !== 'mov') {\n          return __jsx(\"video\", {\n            key: videoUrl,\n            className: styles.workflowVideo,\n            width: \"320\",\n            height: \"240\",\n            controls: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 10\n            }\n          }, __jsx(\"source\", {\n            src: videoUrl,\n            type: `video/${mimeType}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 11\n            }\n          }), \";\");\n        } else {\n          return __jsx(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 16\n            }\n          });\n        }\n      })), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }\n      }, videoEditingUrls));\n    }\n  }; // console.log('hi');\n\n\n  return __jsx(\"main\", {\n    className: styles.workflowEditorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.dashboardMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }\n  }, pageInfo()));\n};\n\nexport async function getServerSideProps({\n  params\n}) {\n  // console.log(params.id);\n  return {\n    props: {\n      id: params.id\n    }\n  };\n}\nexport async function getServerSidePaths({\n  req\n}) {\n  const cookies = parseCookie(req);\n  const res = await fetch('http://127.0.0.1:8000/get-workflow-ids', {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: cookies.jwt\n    }\n  });\n  const resJson = res.json();\n  const workflowIds = resJson['workflow-ids'];\n  const paths = workflowIds.map(workflowId => {\n    return {\n      params: {\n        id: workflowId.toString()\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default Workflow;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/workflow/[id].js"],"names":["useSelector","Router","React","useState","useEffect","DashboardMenu","styles","Cookie","parseCookie","WorkflowDescription","Workflow","props","jwtToken","state","audioUrls","setAudioUrls","imageUrls","setImageUrls","videoUrls","setVideoUrls","videoEditingUrls","setVideoEditingUrls","description","setDescription","title","setTitle","starred","setStarred","finished","setFinished","fetched","setFetched","id","fetchData","fetch","headers","Authorization","then","res","json","workflowInfoJson","catch","err","console","log","filesJson","fileUrlsJson","pageInfo","images","map","imageUrl","dotParts","split","mimeType","length","workflowImage","audios","audioUrl","videos","videoUrl","workflowVideo","workflowEditorContainer","dashboardMenuContainer","editor","getServerSideProps","params","getServerSidePaths","req","cookies","jwt","resJson","workflowIds","paths","workflowId","toString","fallback"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux';\r\n// import { jwt } from '../../components/JWT';\r\nimport Router from 'next/router';\r\nimport React, { useState, useEffect } from 'react';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\nimport styles from '../../styles/scss/worklow_editor.module.scss';\r\nimport Cookie from 'js-cookie';\r\nimport { parseCookie } from '../../components/parseCookie';\r\nimport WorkflowDescription from '../../components/WorkflowDescription';\r\n\r\n// const dispatch = useDispatch();\r\n\r\nconst Workflow = (props) => {\r\n\t// console.log(Router.pathname);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\r\n\tconst [ audioUrls, setAudioUrls ] = useState([]);\r\n\tconst [ imageUrls, setImageUrls ] = useState([]);\r\n\tconst [ videoUrls, setVideoUrls ] = useState([]);\r\n\tconst [ videoEditingUrls, setVideoEditingUrls ] = useState([]);\r\n\tconst [ description, setDescription ] = useState(null);\r\n\tconst [ title, setTitle ] = useState(null);\r\n\tconst [ starred, setStarred ] = useState(null);\r\n\tconst [ finished, setFinished ] = useState(null);\r\n\tconst [ fetched, setFetched ] = useState(false);\r\n\t// const id = Router.query.id;\r\n\tconst id = props.id;\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tfetch(`http://127.0.0.1:8000/get-workflow/${id}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then((workflowInfoJson) => {\r\n\t\t\t\t\tworkflowInfoJson = workflowInfoJson['workflow'];\r\n\t\t\t\t\tsetDescription(workflowInfoJson.description);\r\n\t\t\t\t\tsetTitle(workflowInfoJson.title);\r\n\t\t\t\t\tsetStarred(workflowInfoJson.starred);\r\n\t\t\t\t\tsetFinished(workflowInfoJson.finished);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => console.log(err));\r\n\r\n\t\t\tfetch(`http://127.0.0.1:8000/get-workflow-files/${id}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then((filesJson) => {\r\n\t\t\t\t\tconst fileUrlsJson = filesJson['workflow-file-urls'];\r\n\t\t\t\t\t// console.log(filesJson['workflow-file-urls']);\r\n\t\t\t\t\tsetAudioUrls(fileUrlsJson['audio']);\r\n\t\t\t\t\tsetImageUrls(fileUrlsJson['images']);\r\n\t\t\t\t\tsetVideoUrls(fileUrlsJson['videos']);\r\n\t\t\t\t\tsetVideoEditingUrls(fileUrlsJson['video_editing']);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => console.log(err));\r\n\t\t\tsetFetched(true);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst pageInfo = () => {\r\n\t\tif (!fetched) {\r\n\t\t\treturn <div>Fetching</div>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<WorkflowDescription initialDescription={description} />\r\n\t\t\t\t\t<div className={styles.images}>\r\n\t\t\t\t\t\t<h2>Images</h2>\r\n\t\t\t\t\t\t{imageUrls.map((imageUrl) => {\r\n\t\t\t\t\t\t\tconst dotParts = imageUrl.split('.');\r\n\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<a href={imageUrl} key={imageUrl} download={`hi.${mimeType}`}>\r\n\t\t\t\t\t\t\t\t\t<img src={imageUrl} className={styles.workflowImage} />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.audios}>\r\n\t\t\t\t\t\t<h2>Audio</h2>\r\n\t\t\t\t\t\t{audioUrls.map((audioUrl) => {\r\n\t\t\t\t\t\t\tconst dotParts = audioUrl.split('.');\r\n\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<audio key={audioUrl} controls>\r\n\t\t\t\t\t\t\t\t\t<source src={audioUrl} type={`audio/${mimeType}`} />;\r\n\t\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.videos}>\r\n\t\t\t\t\t\t<h2>Videos</h2>\r\n\t\t\t\t\t\t{videoUrls.map((videoUrl) => {\r\n\t\t\t\t\t\t\tconst dotParts = videoUrl.split('.');\r\n\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\tif (mimeType !== 'mov') {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<video\r\n\t\t\t\t\t\t\t\t\t\tkey={videoUrl}\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles.workflowVideo}\r\n\t\t\t\t\t\t\t\t\t\twidth=\"320\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"240\"\r\n\t\t\t\t\t\t\t\t\t\tcontrols\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<source src={videoUrl} type={`video/${mimeType}`} />;\r\n\t\t\t\t\t\t\t\t\t</video>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn <React.Fragment />;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>{videoEditingUrls}</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\t// console.log('hi');\r\n\treturn (\r\n\t\t<main className={styles.workflowEditorContainer}>\r\n\t\t\t<div className={styles.dashboardMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.editor}>{pageInfo()}</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport async function getServerSideProps({ params }) {\r\n\t// console.log(params.id);\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tid: params.id\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport async function getServerSidePaths({ req }) {\r\n\tconst cookies = parseCookie(req);\r\n\tconst res = await fetch('http://127.0.0.1:8000/get-workflow-ids', {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: cookies.jwt\r\n\t\t}\r\n\t});\r\n\tconst resJson = res.json();\r\n\tconst workflowIds = resJson['workflow-ids'];\r\n\tconst paths = workflowIds.map((workflowId) => {\r\n\t\treturn {\r\n\t\t\tparams: {\r\n\t\t\t\tid: workflowId.toString()\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\treturn {\r\n\t\tpaths,\r\n\t\tfallback: false\r\n\t};\r\n}\r\n\r\nexport default Workflow;\r\n"]},"metadata":{},"sourceType":"module"}