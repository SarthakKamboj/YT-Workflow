{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowTitle.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useState, useEffect } from 'react';\nimport styles from '../styles/scss/workflow-title.module.scss';\nimport { useSelector } from 'react-redux';\n\nvar WorkflowTitle = function WorkflowTitle(_ref) {\n  _s();\n\n  var oldTitle = _ref.oldTitle,\n      id = _ref.id;\n  var titleInput = useRef(null);\n  var jwtToken = useSelector(function (state) {\n    return state.jwtToken;\n  }); // const [ title, setTitle ] = useState(oldTitle);\n\n  var pushTitleChangeToBackend = function pushTitleChangeToBackend() {\n    fetch(\"http://localhost:8000/set-workflow-title/\".concat(id), {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwtToken\n      },\n      body: JSON.stringify({\n        title: titleInput.current.innerText\n      })\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    console.log(titleInput.current.innerText);\n    pushTitleChangeToBackend();\n  }; // useEffect(\n  // \t() => {\n  // \t\treturn () => {\n  // \t\t};\n  // \t},\n  // \t[ titleInput.current ]\n  // );\n\n\n  return __jsx(\"h2\", {\n    contentEditable: \"plaintext-only\",\n    ref: titleInput,\n    className: styles.titleInput,\n    onInput: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, oldTitle ? oldTitle : 'Create title');\n};\n\n_s(WorkflowTitle, \"dHkEWscHzhKo9GqhzI6IaZB4HLI=\", false, function () {\n  return [useSelector];\n});\n\n_c = WorkflowTitle;\nexport default WorkflowTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkflowTitle\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowTitle.js"],"names":["useRef","useState","useEffect","styles","useSelector","WorkflowTitle","oldTitle","id","titleInput","jwtToken","state","pushTitleChangeToBackend","fetch","method","headers","Authorization","body","JSON","stringify","title","current","innerText","handleChange","e","console","log"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAsB;AAAA;;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,MAATC,EAAS,QAATA,EAAS;AAC3C,MAAMC,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;AACA,MAAMS,QAAQ,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACD,QAAjB;AAAA,GAAD,CAA5B,CAF2C,CAG3C;;AAEA,MAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACtCC,IAAAA,KAAK,oDAA6CL,EAA7C,GAAmD;AACvDM,MAAAA,MAAM,EAAE,KAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,EAAE,YAAYN;AAFnB,OAF8C;AAMvDO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,QAAAA,KAAK,EAAEX,UAAU,CAACY,OAAX,CAAmBC;AADN,OAAf;AANiD,KAAnD,CAAL;AAUA,GAXD;;AAaA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAU,CAACY,OAAX,CAAmBC,SAA/B;AACAV,IAAAA,wBAAwB;AACxB,GAHD,CAlB2C,CAuB3C;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,SACC;AAAI,IAAA,eAAe,EAAC,gBAApB;AAAqC,IAAA,GAAG,EAAEH,UAA1C;AAAsD,IAAA,SAAS,EAAEL,MAAM,CAACK,UAAxE;AAAoF,IAAA,OAAO,EAAEc,YAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEhB,QAAQ,GAAGA,QAAH,GAAc,cADxB,CADD;AAKA,CArCD;;GAAMD,a;UAEYD,W;;;KAFZC,a;AAuCN,eAAeA,aAAf","sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\nimport styles from '../styles/scss/workflow-title.module.scss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WorkflowTitle = ({ oldTitle, id }) => {\r\n\tconst titleInput = useRef(null);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\t// const [ title, setTitle ] = useState(oldTitle);\r\n\r\n\tconst pushTitleChangeToBackend = () => {\r\n\t\tfetch(`http://localhost:8000/set-workflow-title/${id}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttitle: titleInput.current.innerText\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tconsole.log(titleInput.current.innerText);\r\n\t\tpushTitleChangeToBackend();\r\n\t};\r\n\r\n\t// useEffect(\r\n\t// \t() => {\r\n\t// \t\treturn () => {\r\n\r\n\t// \t\t};\r\n\t// \t},\r\n\t// \t[ titleInput.current ]\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<h2 contentEditable=\"plaintext-only\" ref={titleInput} className={styles.titleInput} onInput={handleChange}>\r\n\t\t\t{oldTitle ? oldTitle : 'Create title'}\r\n\t\t</h2>\r\n\t);\r\n};\r\n\r\nexport default WorkflowTitle;\r\n"]},"metadata":{},"sourceType":"module"}