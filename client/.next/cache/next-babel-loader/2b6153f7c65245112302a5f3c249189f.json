{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\Profile.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/profile.module.scss';\nimport { useEffect, useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { setProfileImage } from '../components/actions/profileImageActions';\nimport Router from 'next/router';\n\nconst Profile = () => {\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const {\n    0: currentDate,\n    1: setCurrentDate\n  } = useState('');\n  const profileImageFormRef = useRef();\n  const jwtToken = useSelector(state => state.jwtToken); // const profileImage = useSelector((state) => state.profileImage);\n  // console.log(profileImage);\n  // const profileName = useSelector((state) => state.profileName);\n  // const profileFirstName = profileName.split(' ')[0];\n\n  const {\n    0: profileImage,\n    1: setProfileImage\n  } = useState('');\n  const {\n    0: profileUsername,\n    1: setProfileUsername\n  } = useState('');\n  const {\n    0: displayName,\n    1: setDisplayName\n  } = useState('');\n\n  const capitalize = str => {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n  }; // let displayName = '';\n  // const dispatch = useDispatch();\n\n\n  const getProfileImage = async () => {\n    const profileImageUrlRes = await fetch('http://localhost:8000/get-profile-image', {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + jwtToken\n      }\n    });\n\n    if (profileImageUrlRes.status === 200) {\n      const profileImageUrlJson = await profileImageUrlRes.json();\n      setProfileImage(profileImageUrlJson['msg']);\n    }\n  };\n\n  const getProfileUsername = async () => {\n    const profileUsernameRes = await fetch('http://localhost:8000/get-profile-username', {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + jwtToken\n      }\n    });\n\n    if (profileUsernameRes.status === 200) {\n      const profileUsernameJson = await profileUsernameRes.json();\n      setProfileUsername(profileUsernameJson['msg']);\n      setDisplayName(capitalize(profileImageUrlJson['msg'].split(' ')[0]));\n    }\n  };\n\n  const updateProfileImage = async () => {\n    const profileForm = new FormData(profileImageFormRef.current);\n    const res = await fetch('http://localhost:8000/upload-profile-image', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + jwtToken\n      },\n      body: profileForm\n    });\n\n    if (res.status !== 200) {\n      return;\n    }\n\n    const resJson = await res.json(); // dispatch(setProfileImage(resJson['msg']));\n\n    console.log(resJson['msg']);\n    getProfileImage(); // Router.push(Router.pathname);\n  };\n\n  useEffect(() => {\n    const currentDateInfo = new Date();\n    const month = months[currentDateInfo.getMonth()];\n    const day = currentDateInfo.getDate();\n    const year = currentDateInfo.getFullYear();\n    setCurrentDate(month + ' ' + day + ', ' + year);\n    getProfileImage();\n    getProfileUsername();\n  }, []);\n  return __jsx(\"div\", {\n    className: styles.profileContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.imageInputSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    className: styles.profileImage,\n    src: profileImage,\n    alt: profileUsername.split(' ')[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }), __jsx(FontAwesomeIcon, {\n    className: styles.editIcon,\n    icon: 'user-edit',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }), __jsx(\"form\", {\n    encType: \"multipart/form-data\",\n    ref: profileImageFormRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: updateProfileImage,\n    accept: 'image/*',\n    className: styles.profileImageInput,\n    name: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }))), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }\n  }, \"Hey \", profileUsername.split(' ')[0], \"!\"), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }\n  }, currentDate));\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/Profile.js"],"names":["styles","useEffect","useState","useRef","useSelector","useDispatch","FontAwesomeIcon","setProfileImage","Router","Profile","months","currentDate","setCurrentDate","profileImageFormRef","jwtToken","state","profileImage","profileUsername","setProfileUsername","displayName","setDisplayName","capitalize","str","slice","toUpperCase","getProfileImage","profileImageUrlRes","fetch","headers","Authorization","status","profileImageUrlJson","json","getProfileUsername","profileUsernameRes","profileUsernameJson","split","updateProfileImage","profileForm","FormData","current","res","method","body","resJson","console","log","currentDateInfo","Date","month","getMonth","day","getDate","year","getFullYear","profileContainer","imageInputSection","editIcon","profileImageInput"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,oCAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,eAAT,QAAgC,2CAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAG,CACd,SADc,EAEd,UAFc,EAGd,OAHc,EAId,OAJc,EAKd,KALc,EAMd,MANc,EAOd,MAPc,EAQd,QARc,EASd,WATc,EAUd,SAVc,EAWd,UAXc,EAYd,UAZc,CAAf;AAcA,QAAM;AAAA,OAAEC,WAAF;AAAA,OAAeC;AAAf,MAAkCV,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMW,mBAAmB,GAAGV,MAAM,EAAlC;AACA,QAAMW,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B,CAlBqB,CAoBrB;AACA;AACA;AACA;;AACA,QAAM;AAAA,OAAEE,YAAF;AAAA,OAAgBT;AAAhB,MAAoCL,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAAEe,eAAF;AAAA,OAAmBC;AAAnB,MAA0ChB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM;AAAA,OAAEiB,WAAF;AAAA,OAAeC;AAAf,MAAkClB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMmB,UAAU,GAAIC,GAAD,IAAS;AAC3B,WAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgBC,WAAhB,KAAgCF,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAvC;AACA,GAFD,CA5BqB,CAgCrB;AAEA;;;AAEA,QAAME,eAAe,GAAG,YAAY;AACnC,UAAMC,kBAAkB,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AACjFC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,EAAE,YAAYf;AAFnB;AADwE,KAA5C,CAAtC;;AAMA,QAAIY,kBAAkB,CAACI,MAAnB,KAA8B,GAAlC,EAAuC;AACtC,YAAMC,mBAAmB,GAAG,MAAML,kBAAkB,CAACM,IAAnB,EAAlC;AACAzB,MAAAA,eAAe,CAACwB,mBAAmB,CAAC,KAAD,CAApB,CAAf;AACA;AACD,GAXD;;AAaA,QAAME,kBAAkB,GAAG,YAAY;AACtC,UAAMC,kBAAkB,GAAG,MAAMP,KAAK,CAAC,4CAAD,EAA+C;AACpFC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,EAAE,YAAYf;AAFnB;AAD2E,KAA/C,CAAtC;;AAMA,QAAIoB,kBAAkB,CAACJ,MAAnB,KAA8B,GAAlC,EAAuC;AACtC,YAAMK,mBAAmB,GAAG,MAAMD,kBAAkB,CAACF,IAAnB,EAAlC;AACAd,MAAAA,kBAAkB,CAACiB,mBAAmB,CAAC,KAAD,CAApB,CAAlB;AACAf,MAAAA,cAAc,CAACC,UAAU,CAACU,mBAAmB,CAAC,KAAD,CAAnB,CAA2BK,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAD,CAAX,CAAd;AACA;AACD,GAZD;;AAcA,QAAMC,kBAAkB,GAAG,YAAY;AACtC,UAAMC,WAAW,GAAG,IAAIC,QAAJ,CAAa1B,mBAAmB,CAAC2B,OAAjC,CAApB;AACA,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAAC,4CAAD,EAA+C;AACrEe,MAAAA,MAAM,EAAE,MAD6D;AAErEd,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAE,YAAYf;AADnB,OAF4D;AAKrE6B,MAAAA,IAAI,EAAEL;AAL+D,KAA/C,CAAvB;;AAOA,QAAIG,GAAG,CAACX,MAAJ,KAAe,GAAnB,EAAwB;AACvB;AACA;;AACD,UAAMc,OAAO,GAAG,MAAMH,GAAG,CAACT,IAAJ,EAAtB,CAZsC,CAatC;;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAAC,KAAD,CAAnB;AACAnB,IAAAA,eAAe,GAfuB,CAgBtC;AACA,GAjBD;;AAmBAxB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM8C,eAAe,GAAG,IAAIC,IAAJ,EAAxB;AACA,UAAMC,KAAK,GAAGvC,MAAM,CAACqC,eAAe,CAACG,QAAhB,EAAD,CAApB;AACA,UAAMC,GAAG,GAAGJ,eAAe,CAACK,OAAhB,EAAZ;AACA,UAAMC,IAAI,GAAGN,eAAe,CAACO,WAAhB,EAAb;AACA1C,IAAAA,cAAc,CAACqC,KAAK,GAAG,GAAR,GAAcE,GAAd,GAAoB,IAApB,GAA2BE,IAA5B,CAAd;AACA5B,IAAAA,eAAe;AACfQ,IAAAA,kBAAkB;AAClB,GARQ,EAQN,EARM,CAAT;AAUA,SACC;AAAK,IAAA,SAAS,EAAEjC,MAAM,CAACuD,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAEvD,MAAM,CAACwD,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAExD,MAAM,CAACgB,YAAvB;AAAqC,IAAA,GAAG,EAAEA,YAA1C;AAAwD,IAAA,GAAG,EAAEC,eAAe,CAACmB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAEpC,MAAM,CAACyD,QAAnC;AAA6C,IAAA,IAAI,EAAE,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAM,IAAA,OAAO,EAAC,qBAAd;AAAoC,IAAA,GAAG,EAAE5C,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,QAAQ,EAAEwB,kBAFX;AAGC,IAAA,MAAM,EAAE,SAHT;AAIC,IAAA,SAAS,EAAErC,MAAM,CAAC0D,iBAJnB;AAKC,IAAA,IAAI,EAAC,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHD,CADD,EAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASzC,eAAe,CAACmB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAT,MAdD,EAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKzB,WAAL,CAfD,CADD;AAmBA,CA/GD;;AAiHA,eAAeF,OAAf","sourcesContent":["import styles from '../styles/scss/profile.module.scss';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { setProfileImage } from '../components/actions/profileImageActions';\r\nimport Router from 'next/router';\r\n\r\nconst Profile = () => {\r\n\tconst months = [\r\n\t\t'January',\r\n\t\t'February',\r\n\t\t'March',\r\n\t\t'April',\r\n\t\t'May',\r\n\t\t'June',\r\n\t\t'July',\r\n\t\t'August',\r\n\t\t'September',\r\n\t\t'October',\r\n\t\t'November',\r\n\t\t'December'\r\n\t];\r\n\tconst [ currentDate, setCurrentDate ] = useState('');\r\n\r\n\tconst profileImageFormRef = useRef();\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\r\n\t// const profileImage = useSelector((state) => state.profileImage);\r\n\t// console.log(profileImage);\r\n\t// const profileName = useSelector((state) => state.profileName);\r\n\t// const profileFirstName = profileName.split(' ')[0];\r\n\tconst [ profileImage, setProfileImage ] = useState('');\r\n\tconst [ profileUsername, setProfileUsername ] = useState('');\r\n\tconst [ displayName, setDisplayName ] = useState('');\r\n\r\n\tconst capitalize = (str) => {\r\n\t\treturn str.slice(0, 1).toUpperCase() + str.slice(1);\r\n\t};\r\n\r\n\t// let displayName = '';\r\n\r\n\t// const dispatch = useDispatch();\r\n\r\n\tconst getProfileImage = async () => {\r\n\t\tconst profileImageUrlRes = await fetch('http://localhost:8000/get-profile-image', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (profileImageUrlRes.status === 200) {\r\n\t\t\tconst profileImageUrlJson = await profileImageUrlRes.json();\r\n\t\t\tsetProfileImage(profileImageUrlJson['msg']);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getProfileUsername = async () => {\r\n\t\tconst profileUsernameRes = await fetch('http://localhost:8000/get-profile-username', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (profileUsernameRes.status === 200) {\r\n\t\t\tconst profileUsernameJson = await profileUsernameRes.json();\r\n\t\t\tsetProfileUsername(profileUsernameJson['msg']);\r\n\t\t\tsetDisplayName(capitalize(profileImageUrlJson['msg'].split(' ')[0]));\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateProfileImage = async () => {\r\n\t\tconst profileForm = new FormData(profileImageFormRef.current);\r\n\t\tconst res = await fetch('http://localhost:8000/upload-profile-image', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: profileForm\r\n\t\t});\r\n\t\tif (res.status !== 200) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst resJson = await res.json();\r\n\t\t// dispatch(setProfileImage(resJson['msg']));\r\n\t\tconsole.log(resJson['msg']);\r\n\t\tgetProfileImage();\r\n\t\t// Router.push(Router.pathname);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst currentDateInfo = new Date();\r\n\t\tconst month = months[currentDateInfo.getMonth()];\r\n\t\tconst day = currentDateInfo.getDate();\r\n\t\tconst year = currentDateInfo.getFullYear();\r\n\t\tsetCurrentDate(month + ' ' + day + ', ' + year);\r\n\t\tgetProfileImage();\r\n\t\tgetProfileUsername();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={styles.profileContainer}>\r\n\t\t\t<div className={styles.imageInputSection}>\r\n\t\t\t\t<img className={styles.profileImage} src={profileImage} alt={profileUsername.split(' ')[0]} />\r\n\t\t\t\t<FontAwesomeIcon className={styles.editIcon} icon={'user-edit'} />\r\n\t\t\t\t<form encType=\"multipart/form-data\" ref={profileImageFormRef}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tonChange={updateProfileImage}\r\n\t\t\t\t\t\taccept={'image/*'}\r\n\t\t\t\t\t\tclassName={styles.profileImageInput}\r\n\t\t\t\t\t\tname=\"image\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<h2>Hey {profileUsername.split(' ')[0]}!</h2>\r\n\t\t\t<h5>{currentDate}</h5>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}