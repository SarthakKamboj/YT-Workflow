{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\workflow\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux'; // import { jwt } from '../../components/JWT';\n\nimport Router from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport DashboardMenu from '../../components/DashboardMenu';\nimport styles from '../../styles/scss/worklow_editor.module.scss';\nimport Cookie from 'js-cookie';\nimport classnames from 'classnames';\nimport { parseCookie } from '../../components/parseCookie';\nimport WorkflowDescription from '../../components/WorkflowDescription';\nimport AddFile from '../../components/addFile';\nimport Share from '../../components/Share';\nimport WorkflowTitle from '../../components/WorkflowTitle';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // const dispatch = useDispatch();\n\nconst Workflow = props => {\n  // console.log(Router.pathname);\n  const jwtToken = useSelector(state => state.jwtToken);\n  const {\n    0: audioUrls,\n    1: setAudioUrls\n  } = useState([]);\n  const {\n    0: imageUrls,\n    1: setImageUrls\n  } = useState([]);\n  const {\n    0: videoUrls,\n    1: setVideoUrls\n  } = useState([]);\n  const {\n    0: videoEditingUrls,\n    1: setVideoEditingUrls\n  } = useState([]);\n  const {\n    0: description,\n    1: setDescription\n  } = useState(null);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(null);\n  const {\n    0: starred,\n    1: setStarred\n  } = useState(null);\n  const {\n    0: finished,\n    1: setFinished\n  } = useState(null);\n  const {\n    0: fetched,\n    1: setFetched\n  } = useState(false); // const id = Router.query.id;\n\n  const id = props.id;\n  useEffect(() => {\n    async function fetchData() {\n      const workflowInfoRes = await fetch(`http://127.0.0.1:8000/get-workflow/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${jwtToken}`\n        }\n      });\n      const workflowInfoJson = await workflowInfoRes.json(); // .then((workflowInfoJson) => {\n\n      const workflowInfo = workflowInfoJson['workflow'];\n      setDescription(workflowInfo.description);\n      setTitle(workflowInfo.title);\n      setStarred(workflowInfo.starred);\n      setFinished(workflowInfo.finished); // })\n      // .catch((err) => console.log(err));\n\n      const workflowFilesRes = await fetch(`http://127.0.0.1:8000/get-workflow-files/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${jwtToken}`\n        }\n      });\n      const filesJson = await workflowFilesRes.json();\n      const fileUrlsJson = filesJson['workflow-file-urls'];\n      setAudioUrls(fileUrlsJson['audio']);\n      setImageUrls(fileUrlsJson['image']);\n      setVideoUrls(fileUrlsJson['video']);\n      setVideoEditingUrls(fileUrlsJson['video_editing']);\n      setFetched(true);\n    }\n\n    fetchData();\n  }, []);\n\n  const updateFileCollections = async fileType => {\n    console.log(fileType);\n    const res = await fetch(`http://localhost:8000/get-workflow-files/${id}/${fileType}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwtToken\n      }\n    });\n    const resJson = await res.json();\n    const urls = resJson['workflow-specific-urls'];\n    console.log(urls);\n\n    switch (fileType) {\n      case 'image':\n        setImageUrls(urls);\n        break;\n\n      case 'video':\n        setVideoUrls(urls);\n        break;\n\n      case 'audio':\n        setAudioUrls(urls);\n        break;\n    }\n  };\n\n  const pageInfo = () => {\n    if (!fetched) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, \"Fetching\");\n    } else {\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }\n      }, __jsx(\"section\", {\n        className: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }\n      }, __jsx(\"div\", {\n        className: styles.workflowHeaderInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, __jsx(WorkflowTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 8\n        }\n      }), __jsx(FontAwesomeIcon, {\n        icon: \"star\",\n        className: classnames({\n          [styles.regular]: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 8\n        }\n      }), __jsx(FontAwesomeIcon, {\n        icon: \"check\",\n        className: classnames({\n          [styles.regular]: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 8\n        }\n      })), __jsx(Share, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      })), __jsx(WorkflowDescription, {\n        oldDescription: description,\n        id: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }\n      }), __jsx(\"div\", {\n        className: styles.images,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }, \"Images\"), __jsx(\"div\", {\n        className: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, imageUrls.map(imageUrl => {\n        const dotParts = imageUrl.split('.');\n        const mimeType = dotParts[dotParts.length - 1];\n        return __jsx(\"img\", {\n          src: imageUrl,\n          className: styles.workflowImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 16\n          }\n        });\n      }), __jsx(AddFile, {\n        fileType: 'image',\n        id: id,\n        updateFileCollections: updateFileCollections,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 8\n        }\n      }))), __jsx(\"div\", {\n        className: styles.audios,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }, \"Audio\"), __jsx(\"div\", {\n        className: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, audioUrls.map(audioUrl => {\n        const dotParts = audioUrl.split('.');\n        const mimeType = dotParts[dotParts.length - 1];\n        return __jsx(\"audio\", {\n          key: audioUrl,\n          controls: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 10\n          }\n        }, __jsx(\"source\", {\n          src: audioUrl,\n          type: `audio/${mimeType}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }\n        }), \";\");\n      }), __jsx(AddFile, {\n        fileType: 'audio',\n        id: id,\n        updateFileCollections: updateFileCollections,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 8\n        }\n      }))), __jsx(\"div\", {\n        className: styles.videos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }\n      }, \"Videos\"), __jsx(\"div\", {\n        className: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }, videoUrls.map(videoUrl => {\n        const dotParts = videoUrl.split('.');\n        const mimeType = dotParts[dotParts.length - 1];\n\n        if (mimeType !== 'mov') {\n          return __jsx(\"video\", {\n            key: videoUrl,\n            className: styles.workflowVideo,\n            width: \"320\",\n            height: \"240\",\n            controls: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 11\n            }\n          }, __jsx(\"source\", {\n            src: videoUrl,\n            type: `video/${mimeType}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 12\n            }\n          }), \";\");\n        } else {\n          return __jsx(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }\n          });\n        }\n      }), __jsx(AddFile, {\n        fileType: 'video',\n        id: id,\n        updateFileCollections: updateFileCollections,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 8\n        }\n      }))), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }\n      }, videoEditingUrls));\n    }\n  }; // console.log('hi');\n\n\n  return __jsx(\"main\", {\n    className: styles.workflowEditorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.dashboardMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }\n  }, pageInfo()));\n};\n\nexport async function getServerSideProps({\n  params\n}) {\n  // console.log(params.id);\n  return {\n    props: {\n      id: params.id\n    }\n  };\n}\nexport async function getServerSidePaths({\n  req\n}) {\n  const cookies = parseCookie(req);\n  const res = await fetch('http://127.0.0.1:8000/get-workflow-ids', {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: cookies.jwt\n    }\n  });\n  const resJson = res.json();\n  const workflowIds = resJson['workflow-ids'];\n  const paths = workflowIds.map(workflowId => {\n    return {\n      params: {\n        id: workflowId.toString()\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default Workflow;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/workflow/[id].js"],"names":["useSelector","Router","React","useState","useEffect","DashboardMenu","styles","Cookie","classnames","parseCookie","WorkflowDescription","AddFile","Share","WorkflowTitle","FontAwesomeIcon","Workflow","props","jwtToken","state","audioUrls","setAudioUrls","imageUrls","setImageUrls","videoUrls","setVideoUrls","videoEditingUrls","setVideoEditingUrls","description","setDescription","title","setTitle","starred","setStarred","finished","setFinished","fetched","setFetched","id","fetchData","workflowInfoRes","fetch","headers","Authorization","workflowInfoJson","json","workflowInfo","workflowFilesRes","filesJson","fileUrlsJson","updateFileCollections","fileType","console","log","res","resJson","urls","pageInfo","header","workflowHeaderInfo","regular","images","container","map","imageUrl","dotParts","split","mimeType","length","workflowImage","audios","audioUrl","videos","videoUrl","workflowVideo","workflowEditorContainer","dashboardMenuContainer","editor","getServerSideProps","params","getServerSidePaths","req","cookies","jwt","workflowIds","paths","workflowId","toString","fallback"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux';\r\n// import { jwt } from '../../components/JWT';\r\nimport Router from 'next/router';\r\nimport React, { useState, useEffect } from 'react';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\nimport styles from '../../styles/scss/worklow_editor.module.scss';\r\nimport Cookie from 'js-cookie';\r\nimport classnames from 'classnames';\r\nimport { parseCookie } from '../../components/parseCookie';\r\nimport WorkflowDescription from '../../components/WorkflowDescription';\r\nimport AddFile from '../../components/addFile';\r\nimport Share from '../../components/Share';\r\nimport WorkflowTitle from '../../components/WorkflowTitle';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n// const dispatch = useDispatch();\r\n\r\nconst Workflow = (props) => {\r\n\t// console.log(Router.pathname);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\r\n\tconst [ audioUrls, setAudioUrls ] = useState([]);\r\n\tconst [ imageUrls, setImageUrls ] = useState([]);\r\n\tconst [ videoUrls, setVideoUrls ] = useState([]);\r\n\tconst [ videoEditingUrls, setVideoEditingUrls ] = useState([]);\r\n\tconst [ description, setDescription ] = useState(null);\r\n\tconst [ title, setTitle ] = useState(null);\r\n\tconst [ starred, setStarred ] = useState(null);\r\n\tconst [ finished, setFinished ] = useState(null);\r\n\tconst [ fetched, setFetched ] = useState(false);\r\n\t// const id = Router.query.id;\r\n\tconst id = props.id;\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tconst workflowInfoRes = await fetch(`http://127.0.0.1:8000/get-workflow/${id}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst workflowInfoJson = await workflowInfoRes.json();\r\n\t\t\t// .then((workflowInfoJson) => {\r\n\t\t\tconst workflowInfo = workflowInfoJson['workflow'];\r\n\t\t\tsetDescription(workflowInfo.description);\r\n\t\t\tsetTitle(workflowInfo.title);\r\n\t\t\tsetStarred(workflowInfo.starred);\r\n\t\t\tsetFinished(workflowInfo.finished);\r\n\t\t\t// })\r\n\t\t\t// .catch((err) => console.log(err));\r\n\r\n\t\t\tconst workflowFilesRes = await fetch(`http://127.0.0.1:8000/get-workflow-files/${id}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst filesJson = await workflowFilesRes.json();\r\n\t\t\tconst fileUrlsJson = filesJson['workflow-file-urls'];\r\n\t\t\tsetAudioUrls(fileUrlsJson['audio']);\r\n\t\t\tsetImageUrls(fileUrlsJson['image']);\r\n\t\t\tsetVideoUrls(fileUrlsJson['video']);\r\n\t\t\tsetVideoEditingUrls(fileUrlsJson['video_editing']);\r\n\t\t\tsetFetched(true);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst updateFileCollections = async (fileType) => {\r\n\t\tconsole.log(fileType);\r\n\t\tconst res = await fetch(`http://localhost:8000/get-workflow-files/${id}/${fileType}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst resJson = await res.json();\r\n\t\tconst urls = resJson['workflow-specific-urls'];\r\n\t\tconsole.log(urls);\r\n\t\tswitch (fileType) {\r\n\t\t\tcase 'image':\r\n\t\t\t\tsetImageUrls(urls);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'video':\r\n\t\t\t\tsetVideoUrls(urls);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'audio':\r\n\t\t\t\tsetAudioUrls(urls);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst pageInfo = () => {\r\n\t\tif (!fetched) {\r\n\t\t\treturn <div>Fetching</div>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<section className={styles.header}>\r\n\t\t\t\t\t\t<div className={styles.workflowHeaderInfo}>\r\n\t\t\t\t\t\t\t<WorkflowTitle />\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"star\" className={classnames({ [styles.regular]: true })} />\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"check\" className={classnames({ [styles.regular]: true })} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Share />\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<WorkflowDescription oldDescription={description} id={id} />\r\n\t\t\t\t\t<div className={styles.images}>\r\n\t\t\t\t\t\t<h2>Images</h2>\r\n\t\t\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t\t\t{imageUrls.map((imageUrl) => {\r\n\t\t\t\t\t\t\t\tconst dotParts = imageUrl.split('.');\r\n\t\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\t\treturn <img src={imageUrl} className={styles.workflowImage} />;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t<AddFile fileType={'image'} id={id} updateFileCollections={updateFileCollections} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.audios}>\r\n\t\t\t\t\t\t<h2>Audio</h2>\r\n\t\t\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t\t\t{audioUrls.map((audioUrl) => {\r\n\t\t\t\t\t\t\t\tconst dotParts = audioUrl.split('.');\r\n\t\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<audio key={audioUrl} controls>\r\n\t\t\t\t\t\t\t\t\t\t<source src={audioUrl} type={`audio/${mimeType}`} />;\r\n\t\t\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t<AddFile fileType={'audio'} id={id} updateFileCollections={updateFileCollections} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.videos}>\r\n\t\t\t\t\t\t<h2>Videos</h2>\r\n\t\t\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t\t\t{videoUrls.map((videoUrl) => {\r\n\t\t\t\t\t\t\t\tconst dotParts = videoUrl.split('.');\r\n\t\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\t\tif (mimeType !== 'mov') {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<video\r\n\t\t\t\t\t\t\t\t\t\t\tkey={videoUrl}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.workflowVideo}\r\n\t\t\t\t\t\t\t\t\t\t\twidth=\"320\"\r\n\t\t\t\t\t\t\t\t\t\t\theight=\"240\"\r\n\t\t\t\t\t\t\t\t\t\t\tcontrols\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<source src={videoUrl} type={`video/${mimeType}`} />;\r\n\t\t\t\t\t\t\t\t\t\t</video>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn <React.Fragment />;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t<AddFile fileType={'video'} id={id} updateFileCollections={updateFileCollections} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>{videoEditingUrls}</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\t// console.log('hi');\r\n\treturn (\r\n\t\t<main className={styles.workflowEditorContainer}>\r\n\t\t\t<div className={styles.dashboardMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.editor}>{pageInfo()}</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport async function getServerSideProps({ params }) {\r\n\t// console.log(params.id);\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tid: params.id\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport async function getServerSidePaths({ req }) {\r\n\tconst cookies = parseCookie(req);\r\n\tconst res = await fetch('http://127.0.0.1:8000/get-workflow-ids', {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: cookies.jwt\r\n\t\t}\r\n\t});\r\n\tconst resJson = res.json();\r\n\tconst workflowIds = resJson['workflow-ids'];\r\n\tconst paths = workflowIds.map((workflowId) => {\r\n\t\treturn {\r\n\t\t\tparams: {\r\n\t\t\t\tid: workflowId.toString()\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\treturn {\r\n\t\tpaths,\r\n\t\tfallback: false\r\n\t};\r\n}\r\n\r\nexport default Workflow;\r\n"]},"metadata":{},"sourceType":"module"}