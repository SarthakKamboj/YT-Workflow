{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\Share.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../styles/scss/share.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport classnames from 'classnames';\nimport { useSelector } from 'react-redux';\n\nconst Share = ({\n  id\n}) => {\n  const jwtToken = useSelector(state => state.jwtToken);\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState();\n  const {\n    0: hideContent,\n    1: setHideContent\n  } = useState();\n  const {\n    0: inputActive,\n    1: setInputActive\n  } = useState();\n  const {\n    0: inputText,\n    1: setInputText\n  } = useState('');\n  const {\n    0: profileImages,\n    1: setProfileImages\n  } = useState({}); // const inputText = useRef();\n\n  const getProfileImages = async () => {\n    const imageUrlsRes = await fetch(`http://localhost:8000/get-workflow-profile-images/${id}`, {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + jwtToken\n      }\n    });\n    const imageUrlsJson = await imageUrlsRes.json();\n    console.log(Object.entries(imageUrlsJson['urls']));\n\n    for (const [email, profileImage] of Object.entries(imageUrlsJson['urls'])) {\n      console.log(`${email} ${profileImage}`);\n    }\n  };\n\n  useEffect(() => {\n    setModalVisible(false);\n    setHideContent(true);\n    setInputActive(false);\n    getProfileImages();\n  }, []);\n\n  const toggleModal = () => {\n    if (!modalVisible) {\n      setTimeout(() => {\n        setHideContent(false);\n      }, 250);\n    } else {\n      setHideContent(true);\n    }\n\n    setModalVisible(!modalVisible);\n  };\n\n  const toggleInputActive = () => {\n    setInputActive(!inputActive);\n  };\n\n  const updateInputText = e => {\n    setInputText(e.target.value);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: classnames({\n      [styles.shareModalNotVisible]: true,\n      [styles.shareModalVisible]: modalVisible,\n      [styles.contentsHidden]: hideContent\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }, __jsx(\"p\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"user-plus\",\n    className: styles.addUserIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  }), __jsx(\"span\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }, \"Share with Other People\")), __jsx(\"div\", {\n    className: styles.inputSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    onClick: toggleInputActive,\n    onBlur: toggleInputActive,\n    type: \"email\",\n    className: styles.emailInput,\n    onChange: updateInputText // ref={inputText}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }), __jsx(\"div\", {\n    className: classnames({\n      [styles.inputBorderBottom]: true,\n      [styles.inputBorderBottomActive]: inputActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }), __jsx(\"p\", {\n    className: classnames({\n      [styles.hoverLabel]: inputText !== ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }, \"Add People\")), __jsx(\"p\", {\n    className: styles.usersHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, \"Current Users\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    className: styles.shareBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, \"Done\")), __jsx(\"div\", {\n    onClick: toggleModal,\n    className: classnames({\n      [styles.backdropNotVisible]: true,\n      [styles.backdropVisible]: modalVisible\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }), __jsx(\"div\", {\n    className: styles.shareBtn,\n    onClick: () => toggleModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"users\",\n    className: styles.shareIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, \"Share\")));\n};\n\nexport default Share;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/Share.js"],"names":["FontAwesomeIcon","styles","useState","useEffect","useRef","classnames","useSelector","Share","id","jwtToken","state","modalVisible","setModalVisible","hideContent","setHideContent","inputActive","setInputActive","inputText","setInputText","profileImages","setProfileImages","getProfileImages","imageUrlsRes","fetch","headers","Authorization","imageUrlsJson","json","console","log","Object","entries","email","profileImage","toggleModal","setTimeout","toggleInputActive","updateInputText","e","target","value","shareModalNotVisible","shareModalVisible","contentsHidden","title","addUserIcon","heading","inputSection","emailInput","inputBorderBottom","inputBorderBottomActive","hoverLabel","usersHeading","shareBtn","backdropNotVisible","backdropVisible","shareIcon"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from '../styles/scss/share.module.scss';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport classnames from 'classnames';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Share = ({ id }) => {\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\tconst [ modalVisible, setModalVisible ] = useState();\r\n\tconst [ hideContent, setHideContent ] = useState();\r\n\tconst [ inputActive, setInputActive ] = useState();\r\n\tconst [ inputText, setInputText ] = useState('');\r\n\r\n\tconst [ profileImages, setProfileImages ] = useState({});\r\n\r\n\t// const inputText = useRef();\r\n\r\n\tconst getProfileImages = async () => {\r\n\t\tconst imageUrlsRes = await fetch(`http://localhost:8000/get-workflow-profile-images/${id}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst imageUrlsJson = await imageUrlsRes.json();\r\n\t\tconsole.log(Object.entries(imageUrlsJson['urls']));\r\n\t\tfor (const [ email, profileImage ] of Object.entries(imageUrlsJson['urls'])) {\r\n\t\t\tconsole.log(`${email} ${profileImage}`);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetModalVisible(false);\r\n\t\tsetHideContent(true);\r\n\t\tsetInputActive(false);\r\n\t\tgetProfileImages();\r\n\t}, []);\r\n\r\n\tconst toggleModal = () => {\r\n\t\tif (!modalVisible) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetHideContent(false);\r\n\t\t\t}, 250);\r\n\t\t} else {\r\n\t\t\tsetHideContent(true);\r\n\t\t}\r\n\t\tsetModalVisible(!modalVisible);\r\n\t};\r\n\r\n\tconst toggleInputActive = () => {\r\n\t\tsetInputActive(!inputActive);\r\n\t};\r\n\r\n\tconst updateInputText = (e) => {\r\n\t\tsetInputText(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div\r\n\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t[styles.shareModalNotVisible]: true,\r\n\t\t\t\t\t[styles.shareModalVisible]: modalVisible,\r\n\t\t\t\t\t[styles.contentsHidden]: hideContent\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<p className={styles.title}>\r\n\t\t\t\t\t<FontAwesomeIcon icon=\"user-plus\" className={styles.addUserIcon} />\r\n\t\t\t\t\t<span className={styles.heading}>Share with Other People</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className={styles.inputSection}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonClick={toggleInputActive}\r\n\t\t\t\t\t\tonBlur={toggleInputActive}\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName={styles.emailInput}\r\n\t\t\t\t\t\tonChange={updateInputText}\r\n\t\t\t\t\t\t// ref={inputText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t[styles.inputBorderBottom]: true,\r\n\t\t\t\t\t\t\t[styles.inputBorderBottomActive]: inputActive\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className={classnames({ [styles.hoverLabel]: inputText !== '' })}>Add People</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className={styles.usersHeading}>Current Users</p>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li />\r\n\t\t\t\t</ul>\r\n\t\t\t\t<div className={styles.shareBtn}>Done</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tonClick={toggleModal}\r\n\t\t\t\tclassName={classnames({ [styles.backdropNotVisible]: true, [styles.backdropVisible]: modalVisible })}\r\n\t\t\t/>\r\n\t\t\t<div className={styles.shareBtn} onClick={() => toggleModal()}>\r\n\t\t\t\t<FontAwesomeIcon icon=\"users\" className={styles.shareIcon} />\r\n\t\t\t\t<p>Share</p>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Share;\r\n"]},"metadata":{},"sourceType":"module"}