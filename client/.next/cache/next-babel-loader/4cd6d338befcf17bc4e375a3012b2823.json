{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\Share.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../styles/scss/share.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport classnames from 'classnames';\n\nvar Share = function Share(_ref) {\n  _s();\n\n  var _classnames, _classnames2, _classnames4;\n\n  var id = _ref.id;\n\n  var _useState = useState(),\n      modalVisible = _useState[0],\n      setModalVisible = _useState[1];\n\n  var _useState2 = useState(),\n      hideContent = _useState2[0],\n      setHideContent = _useState2[1];\n\n  var _useState3 = useState(),\n      inputActive = _useState3[0],\n      setInputActive = _useState3[1];\n\n  var _useState4 = useState(''),\n      inputText = _useState4[0],\n      setInputText = _useState4[1];\n\n  var _useState5 = useState({}),\n      profileImages = _useState5[0],\n      setProfileImages = _useState5[1]; // const inputText = useRef();\n\n\n  var getProfileImages = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var imageUrlsRes, imageUrlsJson, _i, _Object$entries, _Object$entries$_i, email, profileImage;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:8000/get-workflow-profile-images/\".concat(id));\n\n            case 2:\n              imageUrlsRes = _context.sent;\n              imageUrlsJson = imageUrlsRes.json();\n              setProfileImages(imageUrlsJson['urls']);\n\n              for (_i = 0, _Object$entries = Object.entries(imageUrlsJson['urls']); _i < _Object$entries.length; _i++) {\n                _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), email = _Object$entries$_i[0], profileImage = _Object$entries$_i[1];\n                console.log(\"\".concat(email, \" \").concat(profileImage));\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getProfileImages() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setModalVisible(false);\n    setHideContent(true);\n    setInputActive(false);\n  }, []);\n\n  var toggleModal = function toggleModal() {\n    if (!modalVisible) {\n      setTimeout(function () {\n        setHideContent(false);\n      }, 250);\n    } else {\n      setHideContent(true);\n    }\n\n    setModalVisible(!modalVisible);\n  };\n\n  var toggleInputActive = function toggleInputActive() {\n    setInputActive(!inputActive);\n  };\n\n  var updateInputText = function updateInputText(e) {\n    setInputText(e.target.value);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: classnames((_classnames = {}, _defineProperty(_classnames, styles.shareModalNotVisible, true), _defineProperty(_classnames, styles.shareModalVisible, modalVisible), _defineProperty(_classnames, styles.contentsHidden, hideContent), _classnames)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, __jsx(\"p\", {\n    className: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"user-plus\",\n    className: styles.addUserIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }), __jsx(\"span\", {\n    className: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }, \"Share with Other People\")), __jsx(\"div\", {\n    className: styles.inputSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    onClick: toggleInputActive,\n    onBlur: toggleInputActive,\n    type: \"email\",\n    className: styles.emailInput,\n    onChange: updateInputText // ref={inputText}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }), __jsx(\"div\", {\n    className: classnames((_classnames2 = {}, _defineProperty(_classnames2, styles.inputBorderBottom, true), _defineProperty(_classnames2, styles.inputBorderBottomActive, inputActive), _classnames2)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }), __jsx(\"p\", {\n    className: classnames(_defineProperty({}, styles.hoverLabel, inputText !== '')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }, \"Add People\")), __jsx(\"p\", {\n    className: styles.usersHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, \"Current Users\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    className: styles.shareBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, \"Done\")), __jsx(\"div\", {\n    onClick: toggleModal,\n    className: classnames((_classnames4 = {}, _defineProperty(_classnames4, styles.backdropNotVisible, true), _defineProperty(_classnames4, styles.backdropVisible, modalVisible), _classnames4)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }), __jsx(\"div\", {\n    className: styles.shareBtn,\n    onClick: function onClick() {\n      return toggleModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"users\",\n    className: styles.shareIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, \"Share\")));\n};\n\n_s(Share, \"AWLIJLOyQ//scSAl3p9GRojCbSQ=\");\n\n_c = Share;\nexport default Share;\n\nvar _c;\n\n$RefreshReg$(_c, \"Share\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/Share.js"],"names":["FontAwesomeIcon","styles","useState","useEffect","useRef","classnames","Share","id","modalVisible","setModalVisible","hideContent","setHideContent","inputActive","setInputActive","inputText","setInputText","profileImages","setProfileImages","getProfileImages","fetch","imageUrlsRes","imageUrlsJson","json","Object","entries","email","profileImage","console","log","toggleModal","setTimeout","toggleInputActive","updateInputText","e","target","value","shareModalNotVisible","shareModalVisible","contentsHidden","title","addUserIcon","heading","inputSection","emailInput","inputBorderBottom","inputBorderBottomActive","hoverLabel","usersHeading","shareBtn","backdropNotVisible","backdropVisible","shareIcon"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from '../styles/scss/share.module.scss';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst Share = ({ id }) => {\r\n\tconst [ modalVisible, setModalVisible ] = useState();\r\n\tconst [ hideContent, setHideContent ] = useState();\r\n\tconst [ inputActive, setInputActive ] = useState();\r\n\tconst [ inputText, setInputText ] = useState('');\r\n\r\n\tconst [ profileImages, setProfileImages ] = useState({});\r\n\r\n\t// const inputText = useRef();\r\n\r\n\tconst getProfileImages = async () => {\r\n\t\tconst imageUrlsRes = await fetch(`http://localhost:8000/get-workflow-profile-images/${id}`);\r\n\t\tconst imageUrlsJson = imageUrlsRes.json();\r\n\t\tsetProfileImages(imageUrlsJson['urls']);\r\n\t\tfor (const [ email, profileImage ] of Object.entries(imageUrlsJson['urls'])) {\r\n\t\t\tconsole.log(`${email} ${profileImage}`);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetModalVisible(false);\r\n\t\tsetHideContent(true);\r\n\t\tsetInputActive(false);\r\n\t}, []);\r\n\r\n\tconst toggleModal = () => {\r\n\t\tif (!modalVisible) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetHideContent(false);\r\n\t\t\t}, 250);\r\n\t\t} else {\r\n\t\t\tsetHideContent(true);\r\n\t\t}\r\n\t\tsetModalVisible(!modalVisible);\r\n\t};\r\n\r\n\tconst toggleInputActive = () => {\r\n\t\tsetInputActive(!inputActive);\r\n\t};\r\n\r\n\tconst updateInputText = (e) => {\r\n\t\tsetInputText(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div\r\n\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t[styles.shareModalNotVisible]: true,\r\n\t\t\t\t\t[styles.shareModalVisible]: modalVisible,\r\n\t\t\t\t\t[styles.contentsHidden]: hideContent\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<p className={styles.title}>\r\n\t\t\t\t\t<FontAwesomeIcon icon=\"user-plus\" className={styles.addUserIcon} />\r\n\t\t\t\t\t<span className={styles.heading}>Share with Other People</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className={styles.inputSection}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonClick={toggleInputActive}\r\n\t\t\t\t\t\tonBlur={toggleInputActive}\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName={styles.emailInput}\r\n\t\t\t\t\t\tonChange={updateInputText}\r\n\t\t\t\t\t\t// ref={inputText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t[styles.inputBorderBottom]: true,\r\n\t\t\t\t\t\t\t[styles.inputBorderBottomActive]: inputActive\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className={classnames({ [styles.hoverLabel]: inputText !== '' })}>Add People</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className={styles.usersHeading}>Current Users</p>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li />\r\n\t\t\t\t</ul>\r\n\t\t\t\t<div className={styles.shareBtn}>Done</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tonClick={toggleModal}\r\n\t\t\t\tclassName={classnames({ [styles.backdropNotVisible]: true, [styles.backdropVisible]: modalVisible })}\r\n\t\t\t/>\r\n\t\t\t<div className={styles.shareBtn} onClick={() => toggleModal()}>\r\n\t\t\t\t<FontAwesomeIcon icon=\"users\" className={styles.shareIcon} />\r\n\t\t\t\t<p>Share</p>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Share;\r\n"]},"metadata":{},"sourceType":"module"}