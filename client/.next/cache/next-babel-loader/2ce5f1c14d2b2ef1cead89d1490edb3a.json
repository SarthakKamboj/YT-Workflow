{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/sign-in.module.scss';\nimport classnames from 'classnames';\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nconst Joi = require('@hapi/joi');\n\nconst Login = () => {\n  const router = useRouter();\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: viewPassword,\n    1: setViewPassword\n  } = useState(false);\n  const {\n    0: emailInputEmpty,\n    1: setEmailInputEmpty\n  } = useState(true);\n  const {\n    0: passwordInputEmpty,\n    1: setPasswordInputEmpty\n  } = useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const minPasswordLength = 2;\n  const signUpSchema = Joi.object({\n    email: Joi.string().required().email({\n      minDomainSegments: 2,\n      tlds: {\n        allow: ['com', 'net']\n      }\n    }),\n    password: Joi.string().required().min(minPasswordLength)\n  });\n\n  const updateEmail = input => {\n    setEmail(input);\n    if (input === '') setEmailInputEmpty(true);else setEmailInputEmpty(false);\n  };\n\n  const updatePassword = input => {\n    setPassword(input);\n    if (input === '') setPasswordInputEmpty(true);else setPasswordInputEmpty(false);\n  };\n\n  const checkIfEncodeUriValid = input => {\n    return encodeURI(input) === input;\n  };\n\n  const toCapitalize = input => {\n    return input.slice(0, 1).toUpperCase() + input.slice(1);\n  };\n\n  const loginInformation = async () => {\n    const emailUriEncoded = checkIfEncodeUriValid(email);\n    const passwordUriEncoded = checkIfEncodeUriValid(password);\n    const signUpValidation = signUpSchema.validate({\n      email,\n      password\n    });\n\n    if (signUpValidation.error) {\n      const empty = signUpValidation.error.toString().includes('empty');\n      const valid = signUpValidation.error.toString().includes('valid');\n      const tooShort = signUpValidation.error.toString().includes('at least');\n      const errorField = signUpValidation.error.toString().split('\"')[1];\n\n      if (empty) {\n        return setError(toCapitalize(errorField) + ' cannot be empty');\n      } else if (valid) {\n        return setError(toCapitalize(errorField) + ' must be valid');\n      } else if (errorField === 'password' && tooShort) {\n        return setError(toCapitalize(errorField) + ` must be at least ${minPasswordLength} characters long.`);\n      }\n    }\n\n    if (!emailUriEncoded || !passwordUriEncoded) {\n      return setError('Login information can only have letters and numbers!');\n    }\n\n    const data = {\n      \"email\": email,\n      \"password\": password\n    };\n    const dataString = JSON.stringify(data);\n    const signInRequest = await fetch(process.env.LOGIN_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: dataString\n    });\n    const signInJson = await signInRequest.json();\n\n    if (signInJson.error) {\n      return setError(signInJson.error);\n    }\n\n    setError('');\n    localStorage.setItem('jwt', signInJson.token);\n    return router.push(\"/\");\n  };\n\n  const toggleViewPassword = () => {\n    setViewPassword(!viewPassword);\n  };\n\n  return __jsx(\"main\", {\n    className: styles.loginContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/cartoon-youtube.png\",\n    alt: \"Youtube Workflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.loginTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    className: styles.logoImg,\n    src: \"/images/logo.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, \"Welcome Back!\"), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, \"To keep putting out more of your amazing videos, please login in with your email address and password below.\"), __jsx(\"div\", {\n    className: styles.signInSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.googleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/google_logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Sign In with Google\")), __jsx(\"div\", {\n    className: styles.emailSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \"Or sign-in with email\"), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames({\n      [styles.label]: true,\n      [styles.labelHover]: !emailInputEmpty\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Email\"), console.log(error), __jsx(\"input\", {\n    className: classnames({\n      [styles.errorInput]: error.includes('Email')\n    }),\n    value: email,\n    onChange: e => updateEmail(e.target.value),\n    type: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames({\n      [styles.label]: true,\n      [styles.labelHover]: !passwordInputEmpty\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: classnames({\n      [styles.errorInput]: error.includes('Password')\n    }),\n    value: password,\n    onChange: e => updatePassword(e.target.value),\n    type: viewPassword ? \"text\" : \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    src: \"/images/eye.png\",\n    onClick: () => toggleViewPassword() // className={styles.eyeIcon}\n    ,\n    alt: \"Toggle Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  })), __jsx(\"span\", {\n    style: {\n      textAlign: 'center',\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 8\n    }\n  }, error), __jsx(\"div\", {\n    className: styles.submitEmailForm,\n    onClick: () => loginInformation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 8\n    }\n  }, \"Sign In\"))), __jsx(\"h3\", {\n    className: styles.switchToSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 6\n    }\n  }, \"Don't have an account?\", '  ', __jsx(Link, {\n    href: \"/sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: styles.signUpBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 8\n    }\n  }, \"Sign Up\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/login.js"],"names":["styles","classnames","useState","Link","useRouter","Joi","require","Login","router","email","setEmail","password","setPassword","viewPassword","setViewPassword","emailInputEmpty","setEmailInputEmpty","passwordInputEmpty","setPasswordInputEmpty","error","setError","minPasswordLength","signUpSchema","object","string","required","minDomainSegments","tlds","allow","min","updateEmail","input","updatePassword","checkIfEncodeUriValid","encodeURI","toCapitalize","slice","toUpperCase","loginInformation","emailUriEncoded","passwordUriEncoded","signUpValidation","validate","empty","toString","includes","valid","tooShort","errorField","split","data","dataString","JSON","stringify","signInRequest","fetch","process","env","LOGIN_URL","method","headers","Accept","body","signInJson","json","localStorage","setItem","token","push","toggleViewPassword","loginContainer","images","loginTxt","logoImg","signInSection","googleSignIn","emailSignIn","label","labelHover","console","log","errorInput","e","target","value","textAlign","width","submitEmailForm","switchToSignUp","signUpBtn"],"mappings":"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","sourcesContent":["import styles from '../styles/scss/sign-in.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nconst Joi = require('@hapi/joi');\r\n\r\nconst Login = () => {\r\n\r\n\tconst router = useRouter()\r\n\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [ viewPassword, setViewPassword ] = useState(false);\r\n\tconst [emailInputEmpty, setEmailInputEmpty] = useState(true);\r\n\tconst [passwordInputEmpty, setPasswordInputEmpty] = useState(true);\r\n\tconst [error,setError] = useState(\"\")\r\n\r\n\tconst minPasswordLength = 2;\r\n\r\n\tconst signUpSchema = Joi.object({\r\n\t\temail: Joi.string().required().email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }),\r\n\t\tpassword: Joi.string().required().min(minPasswordLength)\r\n\t});\r\n\r\n\tconst updateEmail = (input) => {\r\n\t\tsetEmail(input);\r\n\t\tif (input === '') setEmailInputEmpty(true);\r\n\t\telse setEmailInputEmpty(false);\r\n\t};\r\n\r\n\tconst updatePassword = (input) => {\r\n\t\tsetPassword(input);\r\n\t\tif (input === '') setPasswordInputEmpty(true);\r\n\t\telse setPasswordInputEmpty(false);\r\n\t};\r\n\r\n\tconst checkIfEncodeUriValid = (input) => {\r\n\t\treturn encodeURI(input) === input;\r\n\t};\r\n\r\n\tconst toCapitalize = (input) => {\r\n\t\treturn input.slice(0, 1).toUpperCase() + input.slice(1);\r\n\t};\r\n\r\n\tconst loginInformation = async () => {\r\n\r\n\t\tconst emailUriEncoded = checkIfEncodeUriValid(email);\r\n\t\tconst passwordUriEncoded = checkIfEncodeUriValid(password);\r\n\r\n\t\tconst signUpValidation = signUpSchema.validate({ email, password });\r\n\r\n\t\tif (signUpValidation.error) {\r\n\t\t\tconst empty = signUpValidation.error.toString().includes('empty');\r\n\t\t\tconst valid = signUpValidation.error.toString().includes('valid');\r\n\t\t\tconst tooShort = signUpValidation.error.toString().includes('at least');\r\n\t\t\tconst errorField = signUpValidation.error.toString().split('\"')[1];\r\n\t\t\tif (empty) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ' cannot be empty');\r\n\t\t\t} else if (valid) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ' must be valid');\r\n\t\t\t} else if (errorField === 'password' && tooShort) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ` must be at least ${minPasswordLength} characters long.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!emailUriEncoded || !passwordUriEncoded) {\r\n\t\t\treturn setError('Login information can only have letters and numbers!');\r\n\t\t}\r\n\t\tconst data = { \"email\": email, \"password\": password };\r\n\t\tconst dataString = JSON.stringify(data);\r\n\t\tconst signInRequest = await fetch(process.env.LOGIN_URL, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAccept: 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: dataString\r\n\t\t});\r\n\t\tconst signInJson = await signInRequest.json();\r\n\t\t\r\n\t\tif (signInJson.error) {\r\n\t\t\treturn setError(signInJson.error);\r\n\t\t}\r\n\t\tsetError('');\r\n\t\tlocalStorage.setItem('jwt', signInJson.token);\r\n\t\treturn router.push(\"/\");\r\n\t}\r\n\r\n\tconst toggleViewPassword = () => {\r\n\t\tsetViewPassword(!viewPassword);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className={styles.loginContainer}>\r\n\t\t\t<div className={styles.images}>\r\n\t\t\t\t<img src=\"/images/cartoon-youtube.png\" alt=\"Youtube Workflow\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.loginTxt}>\r\n\t\t\t\t<img className={styles.logoImg} src=\"/images/logo.jpg\" />\r\n\t\t\t\t<h1>Welcome Back!</h1>\r\n\t\t\t\t<h5>\r\n\t\t\t\t\tTo keep putting out more of your amazing videos, please login in with your email address and\r\n\t\t\t\t\tpassword below.\r\n\t\t\t\t</h5>\r\n\t\t\t\t<div className={styles.signInSection}>\r\n\t\t\t\t\t<div className={styles.googleSignIn}>\r\n\t\t\t\t\t\t<img src=\"/images/google_logo.png\" />\r\n\t\t\t\t\t\t<h4>Sign In with Google</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.emailSignIn}>\r\n\t\t\t\t\t\t<p>Or sign-in with email</p>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !emailInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t{console.log(error)}\r\n\t\t\t\t\t\t\t\t<input className={classnames({ [styles.errorInput]: error.includes('Email') })}\r\n\t\t\t\t\t\t\t\t\tvalue={email} onChange={(e) => updateEmail(e.target.value)} type=\"email\" required />\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !passwordInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Password') })}\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updatePassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype={viewPassword ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc=\"/images/eye.png\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => toggleViewPassword()}\r\n\t\t\t\t\t\t\t\t\t// className={styles.eyeIcon}\r\n\t\t\t\t\t\t\t\t\talt=\"Toggle Password\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span style={{ textAlign: 'center', width: '80%' }}>{error}</span>\r\n\t\t\t\t\t\t\t<div className={styles.submitEmailForm} onClick={() => loginInformation()}>Sign In</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3 className={styles.switchToSignUp}>\r\n\t\t\t\t\t\tDon't have an account?{'  '}\r\n\t\t\t\t\t\t<Link href=\"/sign-up\">\r\n\t\t\t\t\t\t\t<span className={styles.signUpBtn}>Sign Up</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}