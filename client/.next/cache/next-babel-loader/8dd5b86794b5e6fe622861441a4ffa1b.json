{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowItem.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/workflow-item.module.scss';\nimport { useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useState, useRef } from 'react';\nimport classnames from 'classnames';\n\nconst WorkflowItem = ({\n  workflow,\n  id\n}) => {\n  // const [ workflowContainerGripped, setWorkflowContainerGripped ] = useState(false);\n  // const workflowContainer = useRef();\n  console.log(id);\n\n  const capitalize = txt => {\n    return txt.slice(0, 1).toUpperCase() + txt.slice(1);\n  };\n\n  const maxTitleLengthBeforeCutoff = 15;\n  const maxDescriptionLengthBeforeCutoff = 30;\n  const profileImage = useSelector(state => state.profileImage);\n  return __jsx(\"div\", {\n    className: classnames({\n      [styles.workflowContainer]: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.workflowTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, workflow.title > maxTitleLengthBeforeCutoff ? workflow.title.slice(0, maxTitleLengthBeforeCutoff) + '...' : workflow.title), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, workflow.description.length > maxDescriptionLengthBeforeCutoff ? workflow.description.slice(0, maxDescriptionLengthBeforeCutoff) + '...' : workflow.description), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: styles.workflowUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: profileImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    className: styles.workflowExtraInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: styles.workflowCreated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  }, workflow.created_at), __jsx(\"div\", {\n    className: styles.workflowStatusIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, __jsx(FontAwesomeIcon, {\n    className: classnames({\n      [styles.starred]: workflow.starred\n    }),\n    icon: \"star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(FontAwesomeIcon, {\n    className: classnames({\n      [styles.finished]: workflow.finished\n    }),\n    icon: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  })))));\n};\n\nexport default WorkflowItem;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowItem.js"],"names":["styles","useSelector","FontAwesomeIcon","useState","useRef","classnames","WorkflowItem","workflow","id","console","log","capitalize","txt","slice","toUpperCase","maxTitleLengthBeforeCutoff","maxDescriptionLengthBeforeCutoff","profileImage","state","workflowContainer","workflowTitle","title","description","length","workflowUsers","workflowExtraInfo","workflowCreated","created_at","workflowStatusIcons","starred","finished"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0CAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAsB;AAC1C;AAEA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AAEA,QAAMG,UAAU,GAAIC,GAAD,IAAS;AAC3B,WAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgBC,WAAhB,KAAgCF,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAvC;AACA,GAFD;;AAIA,QAAME,0BAA0B,GAAG,EAAnC;AACA,QAAMC,gCAAgC,GAAG,EAAzC;AAEA,QAAMC,YAAY,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AAEA,SACC;AAAK,IAAA,SAAS,EAAEZ,UAAU,CAAC;AAAE,OAACL,MAAM,CAACmB,iBAAR,GAA4B;AAA9B,KAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAEnB,MAAM,CAACoB,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEb,QAAQ,CAACc,KAAT,GAAiBN,0BAAjB,GACAR,QAAQ,CAACc,KAAT,CAAeR,KAAf,CAAqB,CAArB,EAAwBE,0BAAxB,IAAsD,KADtD,GAGAR,QAAQ,CAACc,KAJX,CADD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEd,QAAQ,CAACe,WAAT,CAAqBC,MAArB,GAA8BP,gCAA9B,GACAT,QAAQ,CAACe,WAAT,CAAqBT,KAArB,CAA2B,CAA3B,EAA8BG,gCAA9B,IAAkE,KADlE,GAGAT,QAAQ,CAACe,WAJX,CARD,EAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACwB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,GAAG,EAAEP,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,EAIC;AAAK,IAAA,SAAS,EAAEjB,MAAM,CAACyB,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCnB,QAAQ,CAACoB,UAAjD,CADD,EAEC;AAAK,IAAA,SAAS,EAAE3B,MAAM,CAAC4B,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAEvB,UAAU,CAAC;AAAE,OAACL,MAAM,CAAC6B,OAAR,GAAkBtB,QAAQ,CAACsB;AAA7B,KAAD,CAAtC;AAAgF,IAAA,IAAI,EAAC,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,eAAD;AACC,IAAA,SAAS,EAAExB,UAAU,CAAC;AAAE,OAACL,MAAM,CAAC8B,QAAR,GAAmBvB,QAAQ,CAACuB;AAA9B,KAAD,CADtB;AAEC,IAAA,IAAI,EAAC,OAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAFD,CAJD,CAfD,CADD;AAiCA,CAjDD;;AAmDA,eAAexB,YAAf","sourcesContent":["import styles from '../styles/scss/workflow-item.module.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useState, useRef } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst WorkflowItem = ({ workflow, id }) => {\r\n\t// const [ workflowContainerGripped, setWorkflowContainerGripped ] = useState(false);\r\n\r\n\t// const workflowContainer = useRef();\r\n\r\n\tconsole.log(id);\r\n\r\n\tconst capitalize = (txt) => {\r\n\t\treturn txt.slice(0, 1).toUpperCase() + txt.slice(1);\r\n\t};\r\n\r\n\tconst maxTitleLengthBeforeCutoff = 15;\r\n\tconst maxDescriptionLengthBeforeCutoff = 30;\r\n\r\n\tconst profileImage = useSelector((state) => state.profileImage);\r\n\r\n\treturn (\r\n\t\t<div className={classnames({ [styles.workflowContainer]: true })}>\r\n\t\t\t<h2 className={styles.workflowTitle}>\r\n\t\t\t\t{workflow.title > maxTitleLengthBeforeCutoff ? (\r\n\t\t\t\t\tworkflow.title.slice(0, maxTitleLengthBeforeCutoff) + '...'\r\n\t\t\t\t) : (\r\n\t\t\t\t\tworkflow.title\r\n\t\t\t\t)}\r\n\t\t\t</h2>\r\n\t\t\t<h4>\r\n\t\t\t\t{workflow.description.length > maxDescriptionLengthBeforeCutoff ? (\r\n\t\t\t\t\tworkflow.description.slice(0, maxDescriptionLengthBeforeCutoff) + '...'\r\n\t\t\t\t) : (\r\n\t\t\t\t\tworkflow.description\r\n\t\t\t\t)}\r\n\t\t\t</h4>\r\n\t\t\t<div>\r\n\t\t\t\t<div className={styles.workflowUsers}>\r\n\t\t\t\t\t<img src={profileImage} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.workflowExtraInfo}>\r\n\t\t\t\t\t<h3 className={styles.workflowCreated}>{workflow.created_at}</h3>\r\n\t\t\t\t\t<div className={styles.workflowStatusIcons}>\r\n\t\t\t\t\t\t<FontAwesomeIcon className={classnames({ [styles.starred]: workflow.starred })} icon=\"star\" />\r\n\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\tclassName={classnames({ [styles.finished]: workflow.finished })}\r\n\t\t\t\t\t\t\ticon=\"check\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WorkflowItem;\r\n"]},"metadata":{},"sourceType":"module"}