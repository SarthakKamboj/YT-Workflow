{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\workflow\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux'; // import { jwt } from '../../components/JWT';\n\nimport Router from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport DashboardMenu from '../../components/DashboardMenu';\nimport styles from '../../styles/scss/worklow_editor.module.scss'; // const dispatch = useDispatch();\n\nconst Workflow = () => {\n  // console.log(Router.pathname);\n  const jwtToken = useSelector(state => state.jwtToken);\n  const {\n    0: audioUrls,\n    1: setAudioUrls\n  } = useState([]);\n  const {\n    0: imageUrls,\n    1: setImageUrls\n  } = useState([]);\n  const {\n    0: videoUrls,\n    1: setVideoUrls\n  } = useState([]);\n  const {\n    0: videoEditingUrls,\n    1: setVideoEditingUrls\n  } = useState([]);\n  const id = Router.query.id;\n  useEffect(() => {\n    fetch(`http://127.0.0.1:8000/get-workflow-files/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${jwtToken}`\n      }\n    }).then(res => res.json()).then(filesJson => {\n      const fileUrlsJson = filesJson['workflow-file-urls']; // console.log(filesJson['workflow-file-urls']);\n\n      setAudioUrls(fileUrlsJson['audio']);\n      setImageUrls(fileUrlsJson['images']);\n      setVideoUrls(fileUrlsJson['videos']);\n      setVideoEditingUrls(fileUrlsJson['video_editing']);\n    }).catch(err => console.log(err));\n  }, []); // console.log('hi');\n\n  return __jsx(\"main\", {\n    className: styles.workflowEditorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.dashboardMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: styles.images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, imageUrls.map(imageUrl => {\n    const dotParts = imageUrl.split('.');\n    const mimeType = dotParts[dotParts.length - 1];\n    return __jsx(\"a\", {\n      href: imageUrl,\n      key: imageUrl,\n      download: `hi.${mimeType}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }\n    }, __jsx(\"img\", {\n      src: imageUrl,\n      className: styles.workflowImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  })), __jsx(\"div\", {\n    className: styles.audios,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"audio\", {\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, audioUrls.map(audioUrl => {\n    const dotParts = audioUrl.split('.');\n    const mimeType = dotParts[dotParts.length - 1];\n    return __jsx(\"source\", {\n      src: audioUrl,\n      type: `audio/${mimeType}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    });\n  }))), __jsx(\"div\", {\n    className: styles.videos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, __jsx(\"video\", {\n    width: \"320\",\n    height: \"240\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }, videoUrls.map(videoUrl => {\n    const dotParts = videoUrl.split('.');\n    const mimeType = dotParts[dotParts.length - 1];\n\n    __jsx(\"source\", {\n      src: videoUrl,\n      type: `video/${mimeType}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    });\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, videoEditingUrls)));\n}; // export async function getStaticProps({ params }) {\n// \tconsole.log('props');\n// \treturn {\n// \t\tprops: {\n// \t\t\tid: params.id\n// \t\t}\n// \t};\n// }\n// export async function getStaticPaths() {\n// \t// const workflowIds = localStorage.getItem('workflowIds');\n// \t// const jwt = localStorage.getItem('jwt');\n// \tconst jwt =\n// \t\t'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTkyMzMyOTI1LCJqdGkiOiIyNzhiMjAyMTQyNTY0MWIxYTc5NjJmNGE4NzI2ZjcwNSIsInVzZXJfaWQiOjQ1fQ.rGAuQaDnBaueRKcE6ZE4t7Ym4Y-HbHqFYn-k-iWr1-0'; // console.log(jwtToken);\n// \tconsole.log(jwt);\n// \tconst workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\n// \t\theaders: {\n// \t\t\t'Content-Type': 'application/json',\n// \t\t\tAuthorization: `Bearer ${jwt}`\n// \t\t}\n// \t});\n// \tconst workflowIdsJson = await workflowIdsResponse.json();\n// \tconsole.log(workflowIdsJson);\n// \tconst workflowIdsArray = await workflowIdsJson['workflow-ids'];\n// \tconsole.log(workflowIdsArray);\n// \tconst paths = workflowIdsArray.map((workflowId) => {\n// \t\treturn {\n// \t\t\tparams: {\n// \t\t\t\tid: workflowId.toString()\n// \t\t\t}\n// \t\t};\n// \t});\n// \tconsole.log(paths);\n// \treturn {\n// \t\tpaths,\n// \t\tfallback: false\n// \t};\n// }\n\n\nexport default Workflow;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/workflow/[id].js"],"names":["useSelector","Router","React","useState","useEffect","DashboardMenu","styles","Workflow","jwtToken","state","audioUrls","setAudioUrls","imageUrls","setImageUrls","videoUrls","setVideoUrls","videoEditingUrls","setVideoEditingUrls","id","query","fetch","headers","Authorization","then","res","json","filesJson","fileUrlsJson","catch","err","console","log","workflowEditorContainer","dashboardMenuContainer","editor","images","map","imageUrl","dotParts","split","mimeType","length","workflowImage","audios","audioUrl","videos","videoUrl"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux';\r\n// import { jwt } from '../../components/JWT';\r\nimport Router from 'next/router';\r\nimport React, { useState, useEffect } from 'react';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\nimport styles from '../../styles/scss/worklow_editor.module.scss';\r\n\r\n// const dispatch = useDispatch();\r\n\r\nconst Workflow = () => {\r\n\t// console.log(Router.pathname);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\r\n\tconst [ audioUrls, setAudioUrls ] = useState([]);\r\n\tconst [ imageUrls, setImageUrls ] = useState([]);\r\n\tconst [ videoUrls, setVideoUrls ] = useState([]);\r\n\tconst [ videoEditingUrls, setVideoEditingUrls ] = useState([]);\r\n\tconst id = Router.query.id;\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`http://127.0.0.1:8000/get-workflow-files/${id}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((filesJson) => {\r\n\t\t\t\tconst fileUrlsJson = filesJson['workflow-file-urls'];\r\n\t\t\t\t// console.log(filesJson['workflow-file-urls']);\r\n\t\t\t\tsetAudioUrls(fileUrlsJson['audio']);\r\n\t\t\t\tsetImageUrls(fileUrlsJson['images']);\r\n\t\t\t\tsetVideoUrls(fileUrlsJson['videos']);\r\n\t\t\t\tsetVideoEditingUrls(fileUrlsJson['video_editing']);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}, []);\r\n\r\n\t// console.log('hi');\r\n\treturn (\r\n\t\t<main className={styles.workflowEditorContainer}>\r\n\t\t\t<div className={styles.dashboardMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.editor}>\r\n\t\t\t\t{/* Images */}\r\n\t\t\t\t<div className={styles.images}>\r\n\t\t\t\t\t{imageUrls.map((imageUrl) => {\r\n\t\t\t\t\t\tconst dotParts = imageUrl.split('.');\r\n\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<a href={imageUrl} key={imageUrl} download={`hi.${mimeType}`}>\r\n\t\t\t\t\t\t\t\t<img src={imageUrl} className={styles.workflowImage} />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* audio */}\r\n\t\t\t\t<div className={styles.audios}>\r\n\t\t\t\t\t<audio controls>\r\n\t\t\t\t\t\t{audioUrls.map((audioUrl) => {\r\n\t\t\t\t\t\t\tconst dotParts = audioUrl.split('.');\r\n\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\treturn <source src={audioUrl} type={`audio/${mimeType}`} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</audio>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.videos}>\r\n\t\t\t\t\t<video width=\"320\" height=\"240\" controls>\r\n\t\t\t\t\t\t{videoUrls.map((videoUrl) => {\r\n\t\t\t\t\t\t\tconst dotParts = videoUrl.split('.');\r\n\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\t<source src={videoUrl} type={`video/${mimeType}`} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</video>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>{videoEditingUrls}</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\n// export async function getStaticProps({ params }) {\r\n// \tconsole.log('props');\r\n// \treturn {\r\n// \t\tprops: {\r\n// \t\t\tid: params.id\r\n// \t\t}\r\n// \t};\r\n// }\r\n\r\n// export async function getStaticPaths() {\r\n// \t// const workflowIds = localStorage.getItem('workflowIds');\r\n// \t// const jwt = localStorage.getItem('jwt');\r\n// \tconst jwt =\r\n// \t\t'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTkyMzMyOTI1LCJqdGkiOiIyNzhiMjAyMTQyNTY0MWIxYTc5NjJmNGE4NzI2ZjcwNSIsInVzZXJfaWQiOjQ1fQ.rGAuQaDnBaueRKcE6ZE4t7Ym4Y-HbHqFYn-k-iWr1-0'; // console.log(jwtToken);\r\n// \tconsole.log(jwt);\r\n// \tconst workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\r\n// \t\theaders: {\r\n// \t\t\t'Content-Type': 'application/json',\r\n// \t\t\tAuthorization: `Bearer ${jwt}`\r\n// \t\t}\r\n// \t});\r\n// \tconst workflowIdsJson = await workflowIdsResponse.json();\r\n// \tconsole.log(workflowIdsJson);\r\n// \tconst workflowIdsArray = await workflowIdsJson['workflow-ids'];\r\n// \tconsole.log(workflowIdsArray);\r\n// \tconst paths = workflowIdsArray.map((workflowId) => {\r\n// \t\treturn {\r\n// \t\t\tparams: {\r\n// \t\t\t\tid: workflowId.toString()\r\n// \t\t\t}\r\n// \t\t};\r\n// \t});\r\n// \tconsole.log(paths);\r\n// \treturn {\r\n// \t\tpaths,\r\n// \t\tfallback: false\r\n// \t};\r\n// }\r\n\r\nexport default Workflow;\r\n"]},"metadata":{},"sourceType":"module"}