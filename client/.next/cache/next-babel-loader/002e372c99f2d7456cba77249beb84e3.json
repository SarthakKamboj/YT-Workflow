{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\dashboard\\\\shared-with-me.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../../styles/scss/workflows.module.scss';\nimport classnames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setJwt } from '../../components/actions/jwtAction';\nimport { setWorkflowInfo } from '../../components/actions/workflowInfo';\nimport DashboardMenu from '../../components/DashboardMenu';\nimport WorkflowItem from '../../components/WorkflowItem';\nimport Cookie from 'js-cookie';\nimport Router from 'next/router';\n\nconst Dashboard = () => {\n  const {\n    0: workflows,\n    1: setWorkflows\n  } = useState(null);\n  const jwtToken = useSelector(state => state.jwtToken);\n  const dispatch = useDispatch();\n  const {\n    0: origWorkflow,\n    1: setOrigWorkflow\n  } = useState([]);\n  const {\n    0: curFilter,\n    1: setCurFilter\n  } = useState('');\n\n  if (jwtToken === '') {\n    Router.push('/');\n  }\n\n  const setWorkflowIdsInLocalStorage = workflowsInfo => {\n    const workflowIds = workflowsInfo.map(workflowInfo => workflowInfo.id);\n\n    if (!localStorage.getItem('workflowIds')) {\n      localStorage.setItem('workflowIds', workflowIds);\n    }\n  };\n\n  const getNewJwtToken = async () => {\n    const refreshToken = localStorage.getItem('refresh-token');\n    const data = {\n      refresh: refreshToken\n    };\n    const dataStringified = JSON.stringify(data);\n    const newAccessTokenRes = await fetch('http://127.0.0.1:8000/api/refresh', {\n      method: 'POST',\n      body: dataStringified,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const newAccessTokenJson = await newAccessTokenRes.json();\n\n    if (newAccessTokenJson.detail === 'Token is invalid or expired') {\n      localStorage.setItem('refresh-token', '');\n      Cookie.set('jwt', JSON.stringify(''));\n      Cookie.set('refresh-token', JSON.stringify(''));\n      dispatch(setJwt(''));\n      return Router.push('/');\n    }\n\n    const newJwtToken = newAccessTokenJson.access;\n    dispatch(setJwt(newJwtToken));\n    localStorage.setItem('jwt', newJwtToken);\n    Cookie.set('jwt', JSON.stringify(newJwtToken));\n    const workflowsResponse = await fetch('http://localhost:8000/get-shared-workflows', {\n      headers: {\n        Authorization: 'Bearer ' + newJwtToken\n      }\n    });\n    const workflowsJson = await workflowsResponse.json();\n    setWorkflows(workflowsJson['workflows']);\n    dispatch(setWorkflowInfo(workflowsJson['workflows']));\n    setWorkflowIdsInLocalStorage(workflowsJson['workflows']);\n  };\n\n  const getWorkflows = async () => {\n    const jwtBearerString = 'Bearer ' + jwtToken;\n    const workflowsResponse = await fetch('http://localhost:8000/get-shared-workflows', {\n      headers: {\n        Authorization: jwtBearerString\n      }\n    });\n    const workflowsJson = await workflowsResponse.json();\n\n    if (workflowsJson.code) {\n      await getNewJwtToken();\n      return;\n    }\n\n    const tempWorkflows = workflowsJson['workflows'];\n    const orig = tempWorkflows.sort((w1, w2) => {\n      if (w1.id > w2.id) return -1;\n      return 1;\n    });\n    setWorkflows([...orig]);\n    setOrigWorkflow([...orig]);\n  };\n\n  useEffect(() => {\n    getWorkflows();\n  }, []);\n\n  const filterByUnfinished = () => {\n    const filtered = workflows.sort((w1, w2) => {\n      if (w1.finished && w2.finished) {\n        if (w1.starred && w1.starred) {\n          if (w1.id > w2.id) {\n            return -1;\n          }\n\n          return 1;\n        }\n\n        if (w1.starred) {\n          return -1;\n        }\n\n        return 1;\n      } else if (w1.finished) return 1;\n\n      return -1;\n    });\n    setWorkflows([...filtered]);\n    setCurFilter('finished');\n  };\n\n  const filterByStarred = () => {\n    const filtered = workflows.sort((w1, w2) => {\n      if (w1.starred && w2.starred) {\n        if (w1.finished && w1.finished) {\n          if (w1.id > w1.id) {\n            return -1;\n          }\n\n          return 1;\n        }\n\n        if (w1.finished) {\n          return 1;\n        }\n\n        return -1;\n      } else if (w1.starred) return -1;\n\n      return 1;\n    });\n    setWorkflows([...filtered]);\n    setCurFilter('starred');\n  };\n\n  const removeFilter = () => {\n    setWorkflows([...origWorkflow]);\n    setCurFilter('');\n  };\n\n  return __jsx(\"main\", {\n    className: styles.workflowsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.dashboardMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.workflowsBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 4\n    }\n  }, !workflows ? __jsx(\"p\", {\n    className: styles.noWorkflows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 6\n    }\n  }, \"You don't have any workflows. Let's get one started!\") : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 6\n    }\n  }, __jsx(\"h1\", {\n    className: styles.numWorkflows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, workflows.length, \" Workflow\", workflows.length != 1 ? 's' : ''), __jsx(\"ul\", {\n    className: styles.filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    onClick: filterByStarred,\n    className: classnames({\n      [styles.active]: curFilter === 'starred'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 8\n    }\n  }, \"Starred\"), __jsx(\"li\", {\n    onClick: filterByUnfinished,\n    className: classnames({\n      [styles.active]: curFilter === 'finished'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 8\n    }\n  }, \"Unfinished\"), __jsx(\"li\", {\n    onClick: removeFilter,\n    className: styles.clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 8\n    }\n  }, \"Clear\")), __jsx(\"div\", {\n    className: styles.workflowList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, workflows.map(workflow => __jsx(\"a\", {\n    href: `../workflow/${workflow.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, __jsx(WorkflowItem, {\n    workflow: workflow,\n    key: workflow.id,\n    id: workflow.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 10\n    }\n  })))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/dashboard/shared-with-me.js"],"names":["styles","classnames","useEffect","useState","useSelector","useDispatch","setJwt","setWorkflowInfo","DashboardMenu","WorkflowItem","Cookie","Router","Dashboard","workflows","setWorkflows","jwtToken","state","dispatch","origWorkflow","setOrigWorkflow","curFilter","setCurFilter","push","setWorkflowIdsInLocalStorage","workflowsInfo","workflowIds","map","workflowInfo","id","localStorage","getItem","setItem","getNewJwtToken","refreshToken","data","refresh","dataStringified","JSON","stringify","newAccessTokenRes","fetch","method","body","headers","newAccessTokenJson","json","detail","set","newJwtToken","access","workflowsResponse","Authorization","workflowsJson","getWorkflows","jwtBearerString","code","tempWorkflows","orig","sort","w1","w2","filterByUnfinished","filtered","finished","starred","filterByStarred","removeFilter","workflowsContainer","dashboardMenuContainer","workflowsBody","noWorkflows","numWorkflows","length","filter","active","clear","workflowList","workflow"],"mappings":"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","sourcesContent":["import styles from '../../styles/scss/workflows.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setJwt } from '../../components/actions/jwtAction';\r\nimport { setWorkflowInfo } from '../../components/actions/workflowInfo';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\nimport WorkflowItem from '../../components/WorkflowItem';\r\nimport Cookie from 'js-cookie';\r\nimport Router from 'next/router';\r\n\r\nconst Dashboard = () => {\r\n\tconst [ workflows, setWorkflows ] = useState(null);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\tconst dispatch = useDispatch();\r\n\tconst [ origWorkflow, setOrigWorkflow ] = useState([]);\r\n\tconst [ curFilter, setCurFilter ] = useState('');\r\n\tif (jwtToken === '') {\r\n\t\tRouter.push('/');\r\n\t}\r\n\r\n\tconst setWorkflowIdsInLocalStorage = (workflowsInfo) => {\r\n\t\tconst workflowIds = workflowsInfo.map((workflowInfo) => workflowInfo.id);\r\n\t\tif (!localStorage.getItem('workflowIds')) {\r\n\t\t\tlocalStorage.setItem('workflowIds', workflowIds);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getNewJwtToken = async () => {\r\n\t\tconst refreshToken = localStorage.getItem('refresh-token');\r\n\t\tconst data = {\r\n\t\t\trefresh: refreshToken\r\n\t\t};\r\n\t\tconst dataStringified = JSON.stringify(data);\r\n\t\tconst newAccessTokenRes = await fetch('http://127.0.0.1:8000/api/refresh', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: dataStringified,\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst newAccessTokenJson = await newAccessTokenRes.json();\r\n\t\tif (newAccessTokenJson.detail === 'Token is invalid or expired') {\r\n\t\t\tlocalStorage.setItem('refresh-token', '');\r\n\t\t\tCookie.set('jwt', JSON.stringify(''));\r\n\t\t\tCookie.set('refresh-token', JSON.stringify(''));\r\n\t\t\tdispatch(setJwt(''));\r\n\t\t\treturn Router.push('/');\r\n\t\t}\r\n\t\tconst newJwtToken = newAccessTokenJson.access;\r\n\t\tdispatch(setJwt(newJwtToken));\r\n\t\tlocalStorage.setItem('jwt', newJwtToken);\r\n\t\tCookie.set('jwt', JSON.stringify(newJwtToken));\r\n\t\tconst workflowsResponse = await fetch('http://localhost:8000/get-shared-workflows', {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer ' + newJwtToken\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst workflowsJson = await workflowsResponse.json();\r\n\t\tsetWorkflows(workflowsJson['workflows']);\r\n\t\tdispatch(setWorkflowInfo(workflowsJson['workflows']));\r\n\t\tsetWorkflowIdsInLocalStorage(workflowsJson['workflows']);\r\n\t};\r\n\r\n\tconst getWorkflows = async () => {\r\n\t\tconst jwtBearerString = 'Bearer ' + jwtToken;\r\n\t\tconst workflowsResponse = await fetch('http://localhost:8000/get-shared-workflows', {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: jwtBearerString\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst workflowsJson = await workflowsResponse.json();\r\n\r\n\t\tif (workflowsJson.code) {\r\n\t\t\tawait getNewJwtToken();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst tempWorkflows = workflowsJson['workflows'];\r\n\t\tconst orig = tempWorkflows.sort((w1, w2) => {\r\n\t\t\tif (w1.id > w2.id) return -1;\r\n\t\t\treturn 1;\r\n\t\t});\r\n\t\tsetWorkflows([ ...orig ]);\r\n\t\tsetOrigWorkflow([ ...orig ]);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetWorkflows();\r\n\t}, []);\r\n\r\n\tconst filterByUnfinished = () => {\r\n\t\tconst filtered = workflows.sort((w1, w2) => {\r\n\t\t\tif (w1.finished && w2.finished) {\r\n\t\t\t\tif (w1.starred && w1.starred) {\r\n\t\t\t\t\tif (w1.id > w2.id) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (w1.starred) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t} else if (w1.finished) return 1;\r\n\t\t\treturn -1;\r\n\t\t});\r\n\t\tsetWorkflows([ ...filtered ]);\r\n\t\tsetCurFilter('finished');\r\n\t};\r\n\r\n\tconst filterByStarred = () => {\r\n\t\tconst filtered = workflows.sort((w1, w2) => {\r\n\t\t\tif (w1.starred && w2.starred) {\r\n\t\t\t\tif (w1.finished && w1.finished) {\r\n\t\t\t\t\tif (w1.id > w1.id) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (w1.finished) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn -1;\r\n\t\t\t} else if (w1.starred) return -1;\r\n\t\t\treturn 1;\r\n\t\t});\r\n\t\tsetWorkflows([ ...filtered ]);\r\n\t\tsetCurFilter('starred');\r\n\t};\r\n\r\n\tconst removeFilter = () => {\r\n\t\tsetWorkflows([ ...origWorkflow ]);\r\n\t\tsetCurFilter('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className={styles.workflowsContainer}>\r\n\t\t\t<div className={styles.dashboardMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.workflowsBody}>\r\n\t\t\t\t{!workflows ? (\r\n\t\t\t\t\t<p className={styles.noWorkflows}>You don't have any workflows. Let's get one started!</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<h1 className={styles.numWorkflows}>\r\n\t\t\t\t\t\t\t{workflows.length} Workflow{workflows.length != 1 ? 's' : ''}\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<ul className={styles.filter}>\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tonClick={filterByStarred}\r\n\t\t\t\t\t\t\t\tclassName={classnames({ [styles.active]: curFilter === 'starred' })}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tStarred\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tonClick={filterByUnfinished}\r\n\t\t\t\t\t\t\t\tclassName={classnames({ [styles.active]: curFilter === 'finished' })}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tUnfinished\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li onClick={removeFilter} className={styles.clear}>\r\n\t\t\t\t\t\t\t\tClear\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<div className={styles.workflowList}>\r\n\t\t\t\t\t\t\t{workflows.map((workflow) => (\r\n\t\t\t\t\t\t\t\t<a href={`../workflow/${workflow.id}`}>\r\n\t\t\t\t\t\t\t\t\t<WorkflowItem workflow={workflow} key={workflow.id} id={workflow.id} />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}