{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\Share.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from '../styles/scss/share.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport classnames from 'classnames';\n\nconst Share = ({\n  id\n}) => {\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState();\n  const {\n    0: hideContent,\n    1: setHideContent\n  } = useState();\n  const {\n    0: inputActive,\n    1: setInputActive\n  } = useState();\n  const {\n    0: inputText,\n    1: setInputText\n  } = useState('');\n  const {\n    0: profileImages,\n    1: setProfileImages\n  } = useState([]); // const inputText = useRef();\n\n  const getProfileImages = async () => {\n    const imageUrlsRes = await fetch(`http://localhost:8000/get-workflow-profile-images/${id}`);\n    const imageUrlsJson = imageUrlsRes.json();\n    setProfileImages(imageUrlsJson['urls']);\n  };\n\n  useEffect(() => {\n    setModalVisible(false);\n    setHideContent(true);\n    setInputActive(false);\n  }, []);\n\n  const toggleModal = () => {\n    if (!modalVisible) {\n      setTimeout(() => {\n        setHideContent(false);\n      }, 250);\n    } else {\n      setHideContent(true);\n    }\n\n    setModalVisible(!modalVisible);\n  };\n\n  const toggleInputActive = () => {\n    setInputActive(!inputActive);\n  };\n\n  const updateInputText = e => {\n    setInputText(e.target.value);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: classnames({\n      [styles.shareModalNotVisible]: true,\n      [styles.shareModalVisible]: modalVisible,\n      [styles.contentsHidden]: hideContent\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, __jsx(\"p\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"user-plus\",\n    className: styles.addUserIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }), __jsx(\"span\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, \"Share with Other People\")), __jsx(\"div\", {\n    className: styles.inputSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    onClick: toggleInputActive,\n    onBlur: toggleInputActive,\n    type: \"email\",\n    className: styles.emailInput,\n    onChange: updateInputText // ref={inputText}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }), __jsx(\"div\", {\n    className: classnames({\n      [styles.inputBorderBottom]: true,\n      [styles.inputBorderBottomActive]: inputActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }), __jsx(\"p\", {\n    className: classnames({\n      [styles.hoverLabel]: inputText !== ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, \"Add People\")), __jsx(\"p\", {\n    className: styles.usersHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \"Current Users\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    className: styles.shareBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, \"Done\")), __jsx(\"div\", {\n    onClick: toggleModal,\n    className: classnames({\n      [styles.backdropNotVisible]: true,\n      [styles.backdropVisible]: modalVisible\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }), __jsx(\"div\", {\n    className: styles.shareBtn,\n    onClick: () => toggleModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: \"users\",\n    className: styles.shareIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, \"Share\")));\n};\n\nexport default Share;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/Share.js"],"names":["FontAwesomeIcon","styles","useState","useEffect","useRef","classnames","Share","id","modalVisible","setModalVisible","hideContent","setHideContent","inputActive","setInputActive","inputText","setInputText","profileImages","setProfileImages","getProfileImages","imageUrlsRes","fetch","imageUrlsJson","json","toggleModal","setTimeout","toggleInputActive","updateInputText","e","target","value","shareModalNotVisible","shareModalVisible","contentsHidden","title","addUserIcon","heading","inputSection","emailInput","inputBorderBottom","inputBorderBottomActive","hoverLabel","usersHeading","shareBtn","backdropNotVisible","backdropVisible","shareIcon"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from '../styles/scss/share.module.scss';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst Share = ({ id }) => {\r\n\tconst [ modalVisible, setModalVisible ] = useState();\r\n\tconst [ hideContent, setHideContent ] = useState();\r\n\tconst [ inputActive, setInputActive ] = useState();\r\n\tconst [ inputText, setInputText ] = useState('');\r\n\r\n\tconst [ profileImages, setProfileImages ] = useState([]);\r\n\r\n\t// const inputText = useRef();\r\n\r\n\tconst getProfileImages = async () => {\r\n\t\tconst imageUrlsRes = await fetch(`http://localhost:8000/get-workflow-profile-images/${id}`);\r\n\t\tconst imageUrlsJson = imageUrlsRes.json();\r\n\t\tsetProfileImages(imageUrlsJson['urls']);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetModalVisible(false);\r\n\t\tsetHideContent(true);\r\n\t\tsetInputActive(false);\r\n\t}, []);\r\n\r\n\tconst toggleModal = () => {\r\n\t\tif (!modalVisible) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetHideContent(false);\r\n\t\t\t}, 250);\r\n\t\t} else {\r\n\t\t\tsetHideContent(true);\r\n\t\t}\r\n\t\tsetModalVisible(!modalVisible);\r\n\t};\r\n\r\n\tconst toggleInputActive = () => {\r\n\t\tsetInputActive(!inputActive);\r\n\t};\r\n\r\n\tconst updateInputText = (e) => {\r\n\t\tsetInputText(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div\r\n\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t[styles.shareModalNotVisible]: true,\r\n\t\t\t\t\t[styles.shareModalVisible]: modalVisible,\r\n\t\t\t\t\t[styles.contentsHidden]: hideContent\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<p className={styles.title}>\r\n\t\t\t\t\t<FontAwesomeIcon icon=\"user-plus\" className={styles.addUserIcon} />\r\n\t\t\t\t\t<span className={styles.heading}>Share with Other People</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className={styles.inputSection}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonClick={toggleInputActive}\r\n\t\t\t\t\t\tonBlur={toggleInputActive}\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName={styles.emailInput}\r\n\t\t\t\t\t\tonChange={updateInputText}\r\n\t\t\t\t\t\t// ref={inputText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t[styles.inputBorderBottom]: true,\r\n\t\t\t\t\t\t\t[styles.inputBorderBottomActive]: inputActive\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className={classnames({ [styles.hoverLabel]: inputText !== '' })}>Add People</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className={styles.usersHeading}>Current Users</p>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li />\r\n\t\t\t\t</ul>\r\n\t\t\t\t<div className={styles.shareBtn}>Done</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tonClick={toggleModal}\r\n\t\t\t\tclassName={classnames({ [styles.backdropNotVisible]: true, [styles.backdropVisible]: modalVisible })}\r\n\t\t\t/>\r\n\t\t\t<div className={styles.shareBtn} onClick={() => toggleModal()}>\r\n\t\t\t\t<FontAwesomeIcon icon=\"users\" className={styles.shareIcon} />\r\n\t\t\t\t<p>Share</p>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Share;\r\n"]},"metadata":{},"sourceType":"module"}