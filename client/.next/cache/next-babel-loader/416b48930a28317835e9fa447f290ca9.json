{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowDescription.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/workflow-description.module.scss';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst WorkflowDescription = ({\n  id\n}) => {\n  const {\n    0: description,\n    1: setDescription\n  } = useState();\n  const jwtToken = useSelector(state => state.jwtToken); // const updateDescription = (e) => {\n  // \tsetDescription(e.target.value);\n  // };\n\n  useEffect(async () => {\n    const descRes = await fetch(`http://127.0.0.1:8000/get-workflow-description/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${jwtToken}`\n      }\n    });\n    const descJson = descRes.json();\n    setDescription(descJson.description); // .then((res) => res.json())\n    // .then((res) => {\n    // \tconsole.log(res.description);\n    // \tsetDescription(res.description);\n    // })\n    // .catch((err) => console.log(err));\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.descriptionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, \"Description\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }), __jsx(\"textarea\", {\n    name: \"description\",\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, description ? description : 'none'));\n};\n\nexport default WorkflowDescription;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowDescription.js"],"names":["styles","useState","useEffect","useSelector","WorkflowDescription","id","description","setDescription","jwtToken","state","descRes","fetch","headers","Authorization","descJson","json","descriptionTitle"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iDAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AACvC,QAAM;AAAA,OAAEC,WAAF;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,EAAhD;AACA,QAAMO,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B,CAFuC,CAGvC;AACA;AACA;;AACAN,EAAAA,SAAS,CAAC,YAAY;AACrB,UAAMQ,OAAO,GAAG,MAAMC,KAAK,CAAE,kDAAiDN,EAAG,EAAtD,EAAyD;AACnFO,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,EAAG,UAASL,QAAS;AAF1B;AAD0E,KAAzD,CAA3B;AAMA,UAAMM,QAAQ,GAAGJ,OAAO,CAACK,IAAR,EAAjB;AACAR,IAAAA,cAAc,CAACO,QAAQ,CAACR,WAAV,CAAd,CARqB,CASrB;AACA;AACA;AACA;AACA;AACA;AACA,GAfQ,EAeN,EAfM,CAAT;AAgBA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAEN,MAAM,CAACgB,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAU,IAAA,IAAI,EAAC,aAAf;AAA6B,IAAA,SAAS,EAAEhB,MAAM,CAACM,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,WAAW,GAAGA,WAAH,GAAiB,MAD9B,CAHD,CADD;AASA,CA/BD;;AAiCA,eAAeF,mBAAf","sourcesContent":["import styles from '../styles/scss/workflow-description.module.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WorkflowDescription = ({ id }) => {\r\n\tconst [ description, setDescription ] = useState();\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\t// const updateDescription = (e) => {\r\n\t// \tsetDescription(e.target.value);\r\n\t// };\r\n\tuseEffect(async () => {\r\n\t\tconst descRes = await fetch(`http://127.0.0.1:8000/get-workflow-description/${id}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst descJson = descRes.json();\r\n\t\tsetDescription(descJson.description);\r\n\t\t// .then((res) => res.json())\r\n\t\t// .then((res) => {\r\n\t\t// \tconsole.log(res.description);\r\n\t\t// \tsetDescription(res.description);\r\n\t\t// })\r\n\t\t// .catch((err) => console.log(err));\r\n\t}, []);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className={styles.descriptionTitle}>Description</h2>\r\n\t\t\t<br />\r\n\t\t\t<textarea name=\"description\" className={styles.description}>\r\n\t\t\t\t{description ? description : 'none'}\r\n\t\t\t</textarea>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default WorkflowDescription;\r\n"]},"metadata":{},"sourceType":"module"}