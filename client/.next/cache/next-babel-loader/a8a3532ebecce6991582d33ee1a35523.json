{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\dashboard\\\\workflows.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../../styles/scss/workflows.module.scss';\nimport classnames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setProfileImage } from '../../components/actions/profileImageActions';\nimport { setProfileName } from '../../components/actions/profileNameActions';\nimport DashboardMenu from '../../components/DashboardMenu';\nimport WorkflowItem from \"../../components/WorkflowItem\";\n\nvar Dashboard = function Dashboard(props) {\n  _s();\n\n  var currentProfileImage = useSelector(function (state) {\n    return state.profileImage;\n  });\n\n  var _useState = useState([]),\n      workflows = _useState[0],\n      setWorkflows = _useState[1];\n\n  var capitalize = function capitalize(txt) {\n    return txt.slice(0, 1).toUpperCase() + txt.slice(1);\n  };\n\n  useEffect(function () {\n    var tempWorkflows = [{\n      title: \"Workflow 1\",\n      keywords: [\"blog\", \"comedy\"]\n    }];\n    setWorkflows(tempWorkflows);\n  }, []);\n\n  if (currentProfileImage === '') {\n    var dispatch = useDispatch();\n    dispatch(setProfileImage(props.profileImage));\n    dispatch(setProfileName(props.profileName));\n  }\n\n  return __jsx(\"main\", {\n    className: styles.workflowsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.workflowsMenuContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.workflowsBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: styles.workflowList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, workflows.map(function (workflow, index) {\n    return __jsx(\"div\", {\n      className: styles.workflow,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: styles.workflowTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }\n    }, workflow.title), __jsx(\"ul\", {\n      className: styles.workflowKeywords,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }\n    }, workflow.keywords.map(function (keyword) {\n      return __jsx(\"li\", {\n        key: keyword,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 10\n        }\n      }, capitalize(keyword));\n    })));\n  }))));\n};\n\n_s(Dashboard, \"BslR8VXIxqbt3xDdJKnKxJcRWWk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Dashboard;\nexport var __N_SSG = true;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/dashboard/workflows.js"],"names":["styles","classnames","useEffect","useState","useSelector","useDispatch","setProfileImage","setProfileName","DashboardMenu","WorkflowItem","Dashboard","props","currentProfileImage","state","profileImage","workflows","setWorkflows","capitalize","txt","slice","toUpperCase","tempWorkflows","title","keywords","dispatch","profileName","workflowsContainer","workflowsMenuContainer","workflowsBody","workflowList","map","workflow","index","workflowTitle","workflowKeywords","keyword"],"mappings":"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","sourcesContent":["import styles from '../../styles/scss/workflows.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setProfileImage } from '../../components/actions/profileImageActions';\r\nimport { setProfileName } from '../../components/actions/profileNameActions';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\nimport WorkflowItem from \"../../components/WorkflowItem\"\r\n\r\nconst Dashboard = (props) => {\r\n\tconst currentProfileImage = useSelector((state) => state.profileImage);\r\n\r\n\tconst [ workflows, setWorkflows ] = useState([]);\r\n\r\n\tconst capitalize = (txt) => {\r\n\t\treturn txt.slice(0,1).toUpperCase() + txt.slice(1)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst tempWorkflows = [\r\n\t\t\t{title:\"Workflow 1\",keywords:[\"blog\",\"comedy\"],}\r\n\t\t];\r\n\t\tsetWorkflows(tempWorkflows);\r\n\t}, []);\r\n\r\n\tif (currentProfileImage === '') {\r\n\t\tconst dispatch = useDispatch();\r\n\t\tdispatch(setProfileImage(props.profileImage));\r\n\t\tdispatch(setProfileName(props.profileName));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className={styles.workflowsContainer}>\r\n\t\t\t<div className={styles.workflowsMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.workflowsBody}>\r\n\t\t\t\t<div className={styles.workflowList}>\r\n\t\t\t\t\t{workflows.map((workflow,index) => (\r\n\t\t\t\t\t\t<div className={styles.workflow} key={index}>\r\n\t\t\t\t\t\t\t<div className={styles.workflowTitle}>{workflow.title}</div>\r\n\t\t\t\t\t\t\t<ul className={styles.workflowKeywords}>\r\n\t\t\t\t\t\t\t\t{workflow.keywords.map(keyword=>(\r\n\t\t\t\t\t\t\t\t\t<li key={keyword}>\r\n\t\t\t\t\t\t\t\t\t\t{capitalize(keyword)}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport async function getStaticProps() {\r\n\tconst profileImage = 'https://i.imgur.com/0byOhwQ.jpg';\r\n\tconst profileName = 'Sarthak Kamboj';\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tprofileImage,\r\n\t\t\tprofileName\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}