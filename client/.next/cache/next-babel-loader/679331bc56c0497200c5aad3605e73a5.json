{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowDescription.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/workflow-description.module.scss';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nvar WorkflowDescription = function WorkflowDescription(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useState = useState(),\n      description = _useState[0],\n      setDescription = _useState[1];\n\n  var jwtToken = useSelector(function (state) {\n    return state.jwtToken;\n  }); // const updateDescription = (e) => {\n  // \tsetDescription(e.target.value);\n  // };\n\n  useEffect(function () {\n    fetch(\"http://127.0.0.1:8000/get-workflow-description/\".concat(id), {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \".concat(jwtToken)\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      console.log(res);\n      setDescription(res.description);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.descriptionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, \"Description\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }), __jsx(\"textarea\", {\n    name: \"description\",\n    className: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, description));\n};\n\n_s(WorkflowDescription, \"3lx0rq2EagxvY7oEvy5PNljdhPs=\", false, function () {\n  return [useSelector];\n});\n\n_c = WorkflowDescription;\nexport default WorkflowDescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkflowDescription\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowDescription.js"],"names":["styles","useState","useEffect","useSelector","WorkflowDescription","id","description","setDescription","jwtToken","state","fetch","headers","Authorization","then","res","json","console","log","err","descriptionTitle"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,iDAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAY;AAAA;;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACCJ,QAAQ,EADT;AAAA,MAC/BK,WAD+B;AAAA,MAClBC,cADkB;;AAEvC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACD,QAAjB;AAAA,GAAD,CAA5B,CAFuC,CAGvC;AACA;AACA;;AACAN,EAAAA,SAAS,CAAC,YAAM;AACfQ,IAAAA,KAAK,0DAAmDL,EAAnD,GAAyD;AAC7DM,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,mBAAYJ,QAAZ;AAFL;AADoD,KAAzD,CAAL,CAMEK,IANF,CAMO,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KANP,EAOEF,IAPF,CAOO,UAACC,GAAD,EAAS;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAP,MAAAA,cAAc,CAACO,GAAG,CAACR,WAAL,CAAd;AACA,KAVF,WAWQ,UAACY,GAAD;AAAA,aAASF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAT;AAAA,KAXR;AAYA,GAbQ,EAaN,EAbM,CAAT;AAcA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAElB,MAAM,CAACmB,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAU,IAAA,IAAI,EAAC,aAAf;AAA6B,IAAA,SAAS,EAAEnB,MAAM,CAACM,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,WADF,CAHD,CADD;AASA,CA7BD;;GAAMF,mB;UAEYD,W;;;KAFZC,mB;AA+BN,eAAeA,mBAAf","sourcesContent":["import styles from '../styles/scss/workflow-description.module.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WorkflowDescription = ({ id }) => {\r\n\tconst [ description, setDescription ] = useState();\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\t// const updateDescription = (e) => {\r\n\t// \tsetDescription(e.target.value);\r\n\t// };\r\n\tuseEffect(() => {\r\n\t\tfetch(`http://127.0.0.1:8000/get-workflow-description/${id}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tsetDescription(res.description);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}, []);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className={styles.descriptionTitle}>Description</h2>\r\n\t\t\t<br />\r\n\t\t\t<textarea name=\"description\" className={styles.description}>\r\n\t\t\t\t{description}\r\n\t\t\t</textarea>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default WorkflowDescription;\r\n"]},"metadata":{},"sourceType":"module"}