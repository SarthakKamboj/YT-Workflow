{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\_app.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport \"../styles/global.css\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\"; // const increment = () => {\n//   return {\n//     type: \"INCREMENT\"\n//   }\n// }\n// const decrement = () => {\n//   return {\n//     type: \"DECREMENT\"\n//   }\n// }\n// const signIn = () => {\n//   return {\n//     type:\"SIGN_IN\"\n//   }\n// }\n// const signUp = () => {\n//   return {\n//     type:\"SIGN_UP\"\n//   }\n// }\n// const countReducer = (state=0,action) => {\n//   switch (action.type) {\n//     case \"INCREMENT\":\n//       return state + 1;\n//     case \"DECREMENT\":\n//       return state - 1;\n//     default:\n//       return state;\n//   }\n// }\n// const loginReducer = (state=false,action) => {\n//   switch (action.type) {\n//     case \"SIGN_IN\":\n//       return true;\n//     case \"SIGN_OUT\":\n//       return false;\n//     default:\n//       state;\n//   }\n// }\n// const allReducers = combineReducers({\n//   count: countReducer,\n//   login: loginReducer,\n// })\n// const myStore = createStore(allReducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nvar App = function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return (// <Provider store={myStore}>\n    __jsx(Component, _extends({}, pageProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }\n    })) // </Provider>\n\n  );\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/_app.js"],"names":["createStore","combineReducers","Provider","App","Component","pageProps"],"mappings":";;;;;;;AAAA,OAAO,sBAAP;AACA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,QAAR,QAAuB,aAAvB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAA8B;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACxC,SACA;AACA,UAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFA,CAGA;;AAHA;AAKD,CAND;;KAAMF,G;AAQN,eAAeA,GAAf","sourcesContent":["import \"../styles/global.css\";\r\nimport {createStore, combineReducers} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\n\r\n// const increment = () => {\r\n//   return {\r\n//     type: \"INCREMENT\"\r\n//   }\r\n// }\r\n\r\n// const decrement = () => {\r\n//   return {\r\n//     type: \"DECREMENT\"\r\n//   }\r\n// }\r\n\r\n// const signIn = () => {\r\n//   return {\r\n//     type:\"SIGN_IN\"\r\n//   }\r\n// }\r\n\r\n// const signUp = () => {\r\n//   return {\r\n//     type:\"SIGN_UP\"\r\n//   }\r\n// }\r\n\r\n// const countReducer = (state=0,action) => {\r\n//   switch (action.type) {\r\n//     case \"INCREMENT\":\r\n//       return state + 1;\r\n//     case \"DECREMENT\":\r\n//       return state - 1;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n\r\n// const loginReducer = (state=false,action) => {\r\n//   switch (action.type) {\r\n//     case \"SIGN_IN\":\r\n//       return true;\r\n//     case \"SIGN_OUT\":\r\n//       return false;\r\n//     default:\r\n//       state;\r\n//   }\r\n// }\r\n\r\n// const allReducers = combineReducers({\r\n//   count: countReducer,\r\n//   login: loginReducer,\r\n// })\r\n\r\n// const myStore = createStore(allReducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nconst App = ({ Component, pageProps }) => {\r\n  return (\r\n  // <Provider store={myStore}>\r\n  <Component {...pageProps} />\r\n  // </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}