{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\workflow\\\\[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDispatch } from 'react-redux'; // import { jwt } from '../../components/JWT';\n\nimport Router from 'next/router'; // const dispatch = useDispatch();\n\nvar Workflow = function Workflow() {\n  console.log(Router.query); // console.log('hi');\n\n  var id = Router.query.id;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Workflow \", id);\n};\n\n_c = Workflow;\nexport var __N_SSG = true;\nexport default Workflow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workflow\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/workflow/[id].js"],"names":["useDispatch","Router","Workflow","console","log","query","id"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAnB,EADsB,CAEtB;;AACA,MAAMC,EAAE,GAAGL,MAAM,CAACI,KAAP,CAAaC,EAAxB;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeA,EAAf,CAAP;AACA,CALD;;KAAMJ,Q;;AA8CN,eAAeA,QAAf","sourcesContent":["import { useDispatch } from 'react-redux';\r\n// import { jwt } from '../../components/JWT';\r\nimport Router from 'next/router';\r\n\r\n// const dispatch = useDispatch();\r\n\r\nconst Workflow = () => {\r\n\tconsole.log(Router.query);\r\n\t// console.log('hi');\r\n\tconst id = Router.query.id;\r\n\treturn <div>Workflow {id}</div>;\r\n};\r\n\r\nexport async function getStaticProps({ params }) {\r\n\t// console.log('props');\r\n\t// return {\r\n\t// \tprops: {\r\n\t// \t\tid: params.id\r\n\t// \t}\r\n\t// };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\t// const workflowIds = localStorage.getItem('workflowIds');\r\n\t// const jwt = localStorage.getItem('jwt');\r\n\tconst jwt =\r\n\t\t'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTkyMzMyOTI1LCJqdGkiOiIyNzhiMjAyMTQyNTY0MWIxYTc5NjJmNGE4NzI2ZjcwNSIsInVzZXJfaWQiOjQ1fQ.rGAuQaDnBaueRKcE6ZE4t7Ym4Y-HbHqFYn-k-iWr1-0'; // console.log(jwtToken);\r\n\tconsole.log(jwt);\r\n\tconst workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${jwt}`\r\n\t\t}\r\n\t});\r\n\tconst workflowIdsJson = await workflowIdsResponse.json();\r\n\tconsole.log(workflowIdsJson);\r\n\tconst workflowIdsArray = await workflowIdsJson['workflow-ids'];\r\n\tconsole.log(workflowIdsArray);\r\n\tconst paths = workflowIdsArray.map((workflowId) => {\r\n\t\treturn {\r\n\t\t\tparams: {\r\n\t\t\t\tid: workflowId.toString()\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\tconsole.log(paths);\r\n\treturn {\r\n\t\tpaths,\r\n\t\tfallback: false\r\n\t};\r\n}\r\n\r\nexport default Workflow;\r\n"]},"metadata":{},"sourceType":"module"}