{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\workflow\\\\[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux'; // import { jwt } from '../../components/JWT';\n\nimport Router from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport DashboardMenu from '../../components/DashboardMenu';\nimport styles from '../../styles/scss/worklow_editor.module.scss';\nimport Cookie from 'js-cookie';\nimport { parseCookie } from '../../components/parseCookie';\nimport WorkflowDescription from '../../components/WorkflowDescription';\nimport AddFile from '../../components/addFile'; // const dispatch = useDispatch();\n\nvar Workflow = function Workflow(props) {\n  _s();\n\n  // console.log(Router.pathname);\n  var jwtToken = useSelector(function (state) {\n    return state.jwtToken;\n  });\n\n  var _useState = useState([]),\n      audioUrls = _useState[0],\n      setAudioUrls = _useState[1];\n\n  var _useState2 = useState([]),\n      imageUrls = _useState2[0],\n      setImageUrls = _useState2[1];\n\n  var _useState3 = useState([]),\n      videoUrls = _useState3[0],\n      setVideoUrls = _useState3[1];\n\n  var _useState4 = useState([]),\n      videoEditingUrls = _useState4[0],\n      setVideoEditingUrls = _useState4[1];\n\n  var _useState5 = useState(null),\n      description = _useState5[0],\n      setDescription = _useState5[1];\n\n  var _useState6 = useState(null),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(null),\n      starred = _useState7[0],\n      setStarred = _useState7[1];\n\n  var _useState8 = useState(null),\n      finished = _useState8[0],\n      setFinished = _useState8[1];\n\n  var _useState9 = useState(false),\n      fetched = _useState9[0],\n      setFetched = _useState9[1]; // const id = Router.query.id;\n\n\n  var id = props.id;\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var workflowInfoRes, workflowInfoJson, workflowInfo, workflowFilesRes, filesJson, fileUrlsJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://127.0.0.1:8000/get-workflow/\".concat(id), {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: \"Bearer \".concat(jwtToken)\n                  }\n                });\n\n              case 2:\n                workflowInfoRes = _context.sent;\n                _context.next = 5;\n                return workflowInfoRes.json();\n\n              case 5:\n                workflowInfoJson = _context.sent;\n                // .then((workflowInfoJson) => {\n                workflowInfo = workflowInfoJson['workflow'];\n                setDescription(workflowInfo.description);\n                setTitle(workflowInfo.title);\n                setStarred(workflowInfo.starred);\n                setFinished(workflowInfo.finished); // })\n                // .catch((err) => console.log(err));\n\n                _context.next = 13;\n                return fetch(\"http://127.0.0.1:8000/get-workflow-files/\".concat(id), {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: \"Bearer \".concat(jwtToken)\n                  }\n                });\n\n              case 13:\n                workflowFilesRes = _context.sent;\n                _context.next = 16;\n                return workflowFilesRes.json();\n\n              case 16:\n                filesJson = _context.sent;\n                fileUrlsJson = filesJson['workflow-file-urls'];\n                setAudioUrls(fileUrlsJson['audio']);\n                setImageUrls(fileUrlsJson['image']);\n                setVideoUrls(fileUrlsJson['video']);\n                setVideoEditingUrls(fileUrlsJson['video_editing']);\n                setFetched(true);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  var updateFileCollections = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(fileType) {\n      var res, resJson, urls;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"http://localhost:8000/get-workflow-files/8/\".concat(fileType));\n\n            case 2:\n              res = _context2.sent;\n              _context2.next = 5;\n              return res.json();\n\n            case 5:\n              resJson = _context2.sent;\n              urls = resJson['workflow-specific-urls'];\n              _context2.t0 = fileType;\n              _context2.next = _context2.t0 === 'image' ? 10 : _context2.t0 === 'video' ? 12 : _context2.t0 === 'audio' ? 13 : 14;\n              break;\n\n            case 10:\n              pass;\n              return _context2.abrupt(\"break\", 14);\n\n            case 12:\n              return _context2.abrupt(\"break\", 14);\n\n            case 13:\n              return _context2.abrupt(\"break\", 14);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updateFileCollections(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var pageInfo = function pageInfo() {\n    if (!fetched) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, \"Fetching\");\n    } else {\n      return __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }\n      }, __jsx(WorkflowDescription, {\n        oldDescription: description,\n        id: id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }\n      }), __jsx(\"div\", {\n        className: styles.images,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }\n      }, __jsx(\"h2\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, \"Images\"), __jsx(\"div\", {\n        className: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, imageUrls.map(function (imageUrl) {\n        var dotParts = imageUrl.split('.');\n        var mimeType = dotParts[dotParts.length - 1];\n        return __jsx(\"img\", {\n          src: imageUrl,\n          className: styles.workflowImage,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 16\n          }\n        });\n      }), __jsx(AddFile, {\n        fileType: 'image',\n        id: id,\n        updateFileCollections: updateFileCollections,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 8\n        }\n      }))), __jsx(\"div\", {\n        className: styles.audios,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }\n      }, __jsx(\"h2\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, \"Audio\"), audioUrls.map(function (audioUrl) {\n        var dotParts = audioUrl.split('.');\n        var mimeType = dotParts[dotParts.length - 1];\n        return __jsx(\"audio\", {\n          key: audioUrl,\n          controls: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }\n        }, __jsx(\"source\", {\n          src: audioUrl,\n          type: \"audio/\".concat(mimeType),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 10\n          }\n        }), \";\");\n      })), __jsx(\"div\", {\n        className: styles.videos,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }\n      }, __jsx(\"h2\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, \"Videos\"), videoUrls.map(function (videoUrl) {\n        var dotParts = videoUrl.split('.');\n        var mimeType = dotParts[dotParts.length - 1];\n\n        if (mimeType !== 'mov') {\n          return __jsx(\"video\", {\n            key: videoUrl,\n            className: styles.workflowVideo,\n            width: \"320\",\n            height: \"240\",\n            controls: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 10\n            }\n          }, __jsx(\"source\", {\n            src: videoUrl,\n            type: \"video/\".concat(mimeType),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }\n          }), \";\");\n        } else {\n          return __jsx(React.Fragment, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 16\n            }\n          });\n        }\n      })), __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 6\n        }\n      }, videoEditingUrls));\n    }\n  }; // console.log('hi');\n\n\n  return __jsx(\"main\", {\n    className: styles.workflowEditorContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.dashboardMenuContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.editor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }\n  }, pageInfo()));\n};\n\n_s(Workflow, \"c97Tk2x8aS+tR0Wdw6S+OGapxlE=\", false, function () {\n  return [useSelector];\n});\n\n_c = Workflow;\nexport var __N_SSP = true;\nexport function getServerSidePaths(_x2) {\n  return _getServerSidePaths.apply(this, arguments);\n}\n\nfunction _getServerSidePaths() {\n  _getServerSidePaths = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref2) {\n    var req, cookies, res, resJson, workflowIds, paths;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            req = _ref2.req;\n            cookies = parseCookie(req);\n            _context3.next = 4;\n            return fetch('http://127.0.0.1:8000/get-workflow-ids', {\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: cookies.jwt\n              }\n            });\n\n          case 4:\n            res = _context3.sent;\n            resJson = res.json();\n            workflowIds = resJson['workflow-ids'];\n            paths = workflowIds.map(function (workflowId) {\n              return {\n                params: {\n                  id: workflowId.toString()\n                }\n              };\n            });\n            return _context3.abrupt(\"return\", {\n              paths: paths,\n              fallback: false\n            });\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getServerSidePaths.apply(this, arguments);\n}\n\nexport default Workflow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workflow\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/workflow/[id].js"],"names":["useSelector","Router","React","useState","useEffect","DashboardMenu","styles","Cookie","parseCookie","WorkflowDescription","AddFile","Workflow","props","jwtToken","state","audioUrls","setAudioUrls","imageUrls","setImageUrls","videoUrls","setVideoUrls","videoEditingUrls","setVideoEditingUrls","description","setDescription","title","setTitle","starred","setStarred","finished","setFinished","fetched","setFetched","id","fetchData","fetch","headers","Authorization","workflowInfoRes","json","workflowInfoJson","workflowInfo","workflowFilesRes","filesJson","fileUrlsJson","updateFileCollections","fileType","res","resJson","urls","pass","pageInfo","images","container","map","imageUrl","dotParts","split","mimeType","length","workflowImage","audios","audioUrl","videos","videoUrl","workflowVideo","workflowEditorContainer","dashboardMenuContainer","editor","getServerSidePaths","req","cookies","jwt","workflowIds","paths","workflowId","params","toString","fallback"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux';\r\n// import { jwt } from '../../components/JWT';\r\nimport Router from 'next/router';\r\nimport React, { useState, useEffect } from 'react';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\nimport styles from '../../styles/scss/worklow_editor.module.scss';\r\nimport Cookie from 'js-cookie';\r\nimport { parseCookie } from '../../components/parseCookie';\r\nimport WorkflowDescription from '../../components/WorkflowDescription';\r\nimport AddFile from '../../components/addFile';\r\n\r\n// const dispatch = useDispatch();\r\n\r\nconst Workflow = (props) => {\r\n\t// console.log(Router.pathname);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\r\n\tconst [ audioUrls, setAudioUrls ] = useState([]);\r\n\tconst [ imageUrls, setImageUrls ] = useState([]);\r\n\tconst [ videoUrls, setVideoUrls ] = useState([]);\r\n\tconst [ videoEditingUrls, setVideoEditingUrls ] = useState([]);\r\n\tconst [ description, setDescription ] = useState(null);\r\n\tconst [ title, setTitle ] = useState(null);\r\n\tconst [ starred, setStarred ] = useState(null);\r\n\tconst [ finished, setFinished ] = useState(null);\r\n\tconst [ fetched, setFetched ] = useState(false);\r\n\t// const id = Router.query.id;\r\n\tconst id = props.id;\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tconst workflowInfoRes = await fetch(`http://127.0.0.1:8000/get-workflow/${id}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst workflowInfoJson = await workflowInfoRes.json();\r\n\t\t\t// .then((workflowInfoJson) => {\r\n\t\t\tconst workflowInfo = workflowInfoJson['workflow'];\r\n\t\t\tsetDescription(workflowInfo.description);\r\n\t\t\tsetTitle(workflowInfo.title);\r\n\t\t\tsetStarred(workflowInfo.starred);\r\n\t\t\tsetFinished(workflowInfo.finished);\r\n\t\t\t// })\r\n\t\t\t// .catch((err) => console.log(err));\r\n\r\n\t\t\tconst workflowFilesRes = await fetch(`http://127.0.0.1:8000/get-workflow-files/${id}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst filesJson = await workflowFilesRes.json();\r\n\t\t\tconst fileUrlsJson = filesJson['workflow-file-urls'];\r\n\t\t\tsetAudioUrls(fileUrlsJson['audio']);\r\n\t\t\tsetImageUrls(fileUrlsJson['image']);\r\n\t\t\tsetVideoUrls(fileUrlsJson['video']);\r\n\t\t\tsetVideoEditingUrls(fileUrlsJson['video_editing']);\r\n\t\t\tsetFetched(true);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst updateFileCollections = async (fileType) => {\r\n\t\tconst res = await fetch(`http://localhost:8000/get-workflow-files/8/${fileType}`);\r\n\t\tconst resJson = await res.json();\r\n\t\tconst urls = resJson['workflow-specific-urls'];\r\n\t\tswitch (fileType) {\r\n\t\t\tcase 'image':\r\n\t\t\t\tpass;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'video':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'audio':\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst pageInfo = () => {\r\n\t\tif (!fetched) {\r\n\t\t\treturn <div>Fetching</div>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<WorkflowDescription oldDescription={description} id={id} />\r\n\t\t\t\t\t<div className={styles.images}>\r\n\t\t\t\t\t\t<h2>Images</h2>\r\n\t\t\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t\t\t{imageUrls.map((imageUrl) => {\r\n\t\t\t\t\t\t\t\tconst dotParts = imageUrl.split('.');\r\n\t\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\t\treturn <img src={imageUrl} className={styles.workflowImage} />;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t<AddFile fileType={'image'} id={id} updateFileCollections={updateFileCollections} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.audios}>\r\n\t\t\t\t\t\t<h2>Audio</h2>\r\n\t\t\t\t\t\t{audioUrls.map((audioUrl) => {\r\n\t\t\t\t\t\t\tconst dotParts = audioUrl.split('.');\r\n\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<audio key={audioUrl} controls>\r\n\t\t\t\t\t\t\t\t\t<source src={audioUrl} type={`audio/${mimeType}`} />;\r\n\t\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.videos}>\r\n\t\t\t\t\t\t<h2>Videos</h2>\r\n\t\t\t\t\t\t{videoUrls.map((videoUrl) => {\r\n\t\t\t\t\t\t\tconst dotParts = videoUrl.split('.');\r\n\t\t\t\t\t\t\tconst mimeType = dotParts[dotParts.length - 1];\r\n\t\t\t\t\t\t\tif (mimeType !== 'mov') {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<video\r\n\t\t\t\t\t\t\t\t\t\tkey={videoUrl}\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles.workflowVideo}\r\n\t\t\t\t\t\t\t\t\t\twidth=\"320\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"240\"\r\n\t\t\t\t\t\t\t\t\t\tcontrols\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<source src={videoUrl} type={`video/${mimeType}`} />;\r\n\t\t\t\t\t\t\t\t\t</video>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn <React.Fragment />;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>{videoEditingUrls}</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\t// console.log('hi');\r\n\treturn (\r\n\t\t<main className={styles.workflowEditorContainer}>\r\n\t\t\t<div className={styles.dashboardMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.editor}>{pageInfo()}</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport async function getServerSideProps({ params }) {\r\n\t// console.log(params.id);\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tid: params.id\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport async function getServerSidePaths({ req }) {\r\n\tconst cookies = parseCookie(req);\r\n\tconst res = await fetch('http://127.0.0.1:8000/get-workflow-ids', {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: cookies.jwt\r\n\t\t}\r\n\t});\r\n\tconst resJson = res.json();\r\n\tconst workflowIds = resJson['workflow-ids'];\r\n\tconst paths = workflowIds.map((workflowId) => {\r\n\t\treturn {\r\n\t\t\tparams: {\r\n\t\t\t\tid: workflowId.toString()\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\treturn {\r\n\t\tpaths,\r\n\t\tfallback: false\r\n\t};\r\n}\r\n\r\nexport default Workflow;\r\n"]},"metadata":{},"sourceType":"module"}