{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowDescription.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/workflow-description.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\n\nconst WorkflowDescription = ({\n  oldDescription,\n  id\n}) => {\n  const {\n    0: sameSessionOldDescription,\n    1: setSameSessionOldDescription\n  } = useState(null);\n  const {\n    0: descriptionChanged,\n    1: setDescriptionChanged\n  } = useState(false);\n  const jwtToken = useSelector(state => state.jwtToken);\n  const descTextArea = useRef(null);\n\n  const updateDescToBackend = async () => {\n    const newDescJson = JSON.stringify({\n      description: descTextArea.current.value\n    });\n    const res = await fetch(`http://127.0.0.1:8000/set-workflow-description/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwtToken\n      },\n      body: newDescJson\n    });\n    setDescriptionChanged(false);\n    setSameSessionOldDescription(descTextArea.current.value);\n  };\n\n  const updateDesc = () => {\n    console.log(oldDescription);\n\n    if (!sameSessionOldDescription) {\n      setDescriptionChanged(descTextArea.current.value !== oldDescription);\n    } else {\n      setDescriptionChanged(descTextArea.current.value !== sameSessionOldDescription);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.descriptionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.descriptionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, \"Description\"), __jsx(\"textarea\", {\n    ref: descTextArea,\n    name: \"description\",\n    className: styles.description,\n    defaultValue: oldDescription,\n    onChange: () => updateDesc(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }), __jsx(FontAwesomeIcon, {\n    icon: 'arrow-right',\n    className: classnames({\n      [styles.updateIcon]: true,\n      [styles.descriptionChanged]: descriptionChanged\n    }),\n    onClick: () => updateDescToBackend(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default WorkflowDescription;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowDescription.js"],"names":["styles","useState","useEffect","useRef","useSelector","FontAwesomeIcon","classnames","WorkflowDescription","oldDescription","id","sameSessionOldDescription","setSameSessionOldDescription","descriptionChanged","setDescriptionChanged","jwtToken","state","descTextArea","updateDescToBackend","newDescJson","JSON","stringify","description","current","value","res","fetch","method","headers","Authorization","body","updateDesc","console","log","descriptionContainer","descriptionTitle","updateIcon"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iDAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,KAA4B;AACvD,QAAM;AAAA,OAAEC,yBAAF;AAAA,OAA6BC;AAA7B,MAA8DV,QAAQ,CAAC,IAAD,CAA5E;AACA,QAAM;AAAA,OAAEW,kBAAF;AAAA,OAAsBC;AAAtB,MAAgDZ,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAMa,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAME,YAAY,GAAGb,MAAM,CAAC,IAAD,CAA3B;;AAEA,QAAMc,mBAAmB,GAAG,YAAY;AACvC,UAAMC,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe;AAClCC,MAAAA,WAAW,EAAEL,YAAY,CAACM,OAAb,CAAqBC;AADA,KAAf,CAApB;AAGA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kDAAiDhB,EAAG,EAAtD,EAAyD;AAC/EiB,MAAAA,MAAM,EAAE,KADuE;AAE/EC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,EAAE,YAAYd;AAFnB,OAFsE;AAM/Ee,MAAAA,IAAI,EAAEX;AANyE,KAAzD,CAAvB;AAQAL,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAF,IAAAA,4BAA4B,CAACK,YAAY,CAACM,OAAb,CAAqBC,KAAtB,CAA5B;AACA,GAdD;;AAgBA,QAAMO,UAAU,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYxB,cAAZ;;AACA,QAAI,CAACE,yBAAL,EAAgC;AAC/BG,MAAAA,qBAAqB,CAACG,YAAY,CAACM,OAAb,CAAqBC,KAArB,KAA+Bf,cAAhC,CAArB;AACA,KAFD,MAEO;AACNK,MAAAA,qBAAqB,CAACG,YAAY,CAACM,OAAb,CAAqBC,KAArB,KAA+Bb,yBAAhC,CAArB;AACA;AACD,GAPD;;AASA,SACC;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACiC,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAEjC,MAAM,CAACkC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AACC,IAAA,GAAG,EAAElB,YADN;AAEC,IAAA,IAAI,EAAC,aAFN;AAGC,IAAA,SAAS,EAAEhB,MAAM,CAACqB,WAHnB;AAIC,IAAA,YAAY,EAAEb,cAJf;AAKC,IAAA,QAAQ,EAAE,MAAMsB,UAAU,EAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EASC,MAAC,eAAD;AACC,IAAA,IAAI,EAAE,aADP;AAEC,IAAA,SAAS,EAAExB,UAAU,CAAC;AAAE,OAACN,MAAM,CAACmC,UAAR,GAAqB,IAAvB;AAA6B,OAACnC,MAAM,CAACY,kBAAR,GAA6BA;AAA1D,KAAD,CAFtB;AAGC,IAAA,OAAO,EAAE,MAAMK,mBAAmB,EAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,CADD;AAiBA,CAhDD;;AAkDA,eAAeV,mBAAf","sourcesContent":["import styles from '../styles/scss/workflow-description.module.scss';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classnames from 'classnames';\r\n\r\nconst WorkflowDescription = ({ oldDescription, id }) => {\r\n\tconst [ sameSessionOldDescription, setSameSessionOldDescription ] = useState(null);\r\n\tconst [ descriptionChanged, setDescriptionChanged ] = useState(false);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\tconst descTextArea = useRef(null);\r\n\r\n\tconst updateDescToBackend = async () => {\r\n\t\tconst newDescJson = JSON.stringify({\r\n\t\t\tdescription: descTextArea.current.value\r\n\t\t});\r\n\t\tconst res = await fetch(`http://127.0.0.1:8000/set-workflow-description/${id}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t\t},\r\n\t\t\tbody: newDescJson\r\n\t\t});\r\n\t\tsetDescriptionChanged(false);\r\n\t\tsetSameSessionOldDescription(descTextArea.current.value);\r\n\t};\r\n\r\n\tconst updateDesc = () => {\r\n\t\tconsole.log(oldDescription);\r\n\t\tif (!sameSessionOldDescription) {\r\n\t\t\tsetDescriptionChanged(descTextArea.current.value !== oldDescription);\r\n\t\t} else {\r\n\t\t\tsetDescriptionChanged(descTextArea.current.value !== sameSessionOldDescription);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.descriptionContainer}>\r\n\t\t\t<h2 className={styles.descriptionTitle}>Description</h2>\r\n\t\t\t<textarea\r\n\t\t\t\tref={descTextArea}\r\n\t\t\t\tname=\"description\"\r\n\t\t\t\tclassName={styles.description}\r\n\t\t\t\tdefaultValue={oldDescription}\r\n\t\t\t\tonChange={() => updateDesc()}\r\n\t\t\t/>\r\n\t\t\t<FontAwesomeIcon\r\n\t\t\t\ticon={'arrow-right'}\r\n\t\t\t\tclassName={classnames({ [styles.updateIcon]: true, [styles.descriptionChanged]: descriptionChanged })}\r\n\t\t\t\tonClick={() => updateDescToBackend()}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WorkflowDescription;\r\n"]},"metadata":{},"sourceType":"module"}