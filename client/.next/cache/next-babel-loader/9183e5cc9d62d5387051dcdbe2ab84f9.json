{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/sign-in.module.scss';\nimport classnames from 'classnames';\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nvar Joi = require('@hapi/joi');\n\nvar Login = function Login() {\n  _s();\n\n  var _classnames, _classnames3;\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(true),\n      emailInputEmpty = _useState3[0],\n      setEmailInputEmpty = _useState3[1];\n\n  var _useState4 = useState(true),\n      passwordInputEmpty = _useState4[0],\n      setPasswordInputEmpty = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      error = _useState5[0],\n      setError = _useState5[1];\n\n  var minPasswordLength = 2;\n  var signUpSchema = Joi.object({\n    email: Joi.string().required().email({\n      minDomainSegments: 2,\n      tlds: {\n        allow: ['com', 'net']\n      }\n    }),\n    password: Joi.string().required().min(minPasswordLength)\n  });\n\n  var updateEmail = function updateEmail(input) {\n    setEmail(input);\n    if (input === '') setEmailInputEmpty(true);else setEmailInputEmpty(false);\n  };\n\n  var updatePassword = function updatePassword(input) {\n    setPassword(input);\n    if (input === '') setPasswordInputEmpty(true);else setPasswordInputEmpty(false);\n  };\n\n  var checkIfEncodeUriValid = function checkIfEncodeUriValid(input) {\n    return encodeURI(input) === input;\n  };\n\n  var toCapitalize = function toCapitalize(input) {\n    return input.slice(0, 1).toUpperCase() + input.slice(1);\n  };\n\n  var loginInformation = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var emailUriEncoded, passwordUriEncoded, signUpValidation, empty, valid, tooShort, errorField, data, dataString, signInRequest, signInJson;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              emailUriEncoded = checkIfEncodeUriValid(email);\n              passwordUriEncoded = checkIfEncodeUriValid(password);\n              signUpValidation = signUpSchema.validate({\n                email: email,\n                password: password\n              });\n\n              if (!signUpValidation.error) {\n                _context.next = 18;\n                break;\n              }\n\n              empty = signUpValidation.error.toString().includes('empty');\n              valid = signUpValidation.error.toString().includes('valid');\n              tooShort = signUpValidation.error.toString().includes('at least');\n              errorField = signUpValidation.error.toString().split('\"')[1];\n\n              if (!empty) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setError(toCapitalize(errorField) + ' cannot be empty'));\n\n            case 12:\n              if (!valid) {\n                _context.next = 16;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setError(toCapitalize(errorField) + ' must be valid'));\n\n            case 16:\n              if (!(errorField === 'password' && tooShort)) {\n                _context.next = 18;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setError(toCapitalize(errorField) + \" must be at least \".concat(minPasswordLength, \" characters long.\")));\n\n            case 18:\n              if (!(!emailUriEncoded || !passwordUriEncoded)) {\n                _context.next = 20;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setError('Login information can only have letters and numbers!'));\n\n            case 20:\n              data = {\n                \"email\": email,\n                \"password\": password\n              };\n              dataString = JSON.stringify(data);\n              _context.next = 24;\n              return fetch(process.env.LOGIN_URL, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  Accept: 'application/json'\n                },\n                body: dataString\n              });\n\n            case 24:\n              signInRequest = _context.sent;\n              _context.next = 27;\n              return signInRequest.json();\n\n            case 27:\n              signInJson = _context.sent;\n\n              if (!signInJson.error) {\n                _context.next = 30;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setError(signInJson.error));\n\n            case 30:\n              setError('');\n              return _context.abrupt(\"return\", console.log(signInJson));\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loginInformation() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"main\", {\n    className: styles.loginContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.images,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/cartoon-youtube.png\",\n    alt: \"Youtube Workflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.loginTxt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    className: styles.logoImg,\n    src: \"/images/logo.jpg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, \"Welcome Back!\"), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, \"To keep putting out more of your amazing videos, please login in with your email address and password below.\"), __jsx(\"div\", {\n    className: styles.signInSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.googleSignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/google_logo.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Sign In with Google\")), __jsx(\"div\", {\n    className: styles.emailSignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Or sign-in with email\"), __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames((_classnames = {}, _defineProperty(_classnames, styles.label, true), _defineProperty(_classnames, styles.labelHover, !emailInputEmpty), _classnames)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Email\"), console.log(error), __jsx(\"input\", {\n    className: classnames(_defineProperty({}, styles.errorInput, error.includes('Email'))),\n    value: email,\n    onChange: function onChange(e) {\n      return updateEmail(e.target.value);\n    },\n    type: \"email\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames((_classnames3 = {}, _defineProperty(_classnames3, styles.label, true), _defineProperty(_classnames3, styles.labelHover, !passwordInputEmpty), _classnames3)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: classnames(_defineProperty({}, styles.errorInput, error.includes('Username'))),\n    value: password,\n    onChange: function onChange(e) {\n      return updatePassword(e.target.value);\n    },\n    type: \"password\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })), __jsx(\"span\", {\n    style: {\n      textAlign: 'center',\n      width: '80%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 8\n    }\n  }, error), __jsx(\"div\", {\n    className: styles.submitEmailForm,\n    onClick: function onClick() {\n      return loginInformation();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 8\n    }\n  }, \"Sign In\"))), __jsx(\"h3\", {\n    className: styles.switchToSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 6\n    }\n  }, \"Don't have an account?\", '  ', __jsx(Link, {\n    href: \"/sign-up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: styles.signUpBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 8\n    }\n  }, \"Sign Up\"))))));\n};\n\n_s(Login, \"XYtbGpeFXDei/c3wTSiUHOids44=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/login.js"],"names":["styles","classnames","useState","Link","useRouter","Joi","require","Login","email","setEmail","password","setPassword","emailInputEmpty","setEmailInputEmpty","passwordInputEmpty","setPasswordInputEmpty","error","setError","minPasswordLength","signUpSchema","object","string","required","minDomainSegments","tlds","allow","min","updateEmail","input","updatePassword","checkIfEncodeUriValid","encodeURI","toCapitalize","slice","toUpperCase","loginInformation","emailUriEncoded","passwordUriEncoded","signUpValidation","validate","empty","toString","includes","valid","tooShort","errorField","split","data","dataString","JSON","stringify","fetch","process","env","LOGIN_URL","method","headers","Accept","body","signInRequest","json","signInJson","console","log","loginContainer","images","loginTxt","logoImg","signInSection","googleSignIn","emailSignIn","label","labelHover","errorInput","e","target","value","textAlign","width","submitEmailForm","switchToSignUp","signUpBtn"],"mappings":"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","sourcesContent":["import styles from '../styles/scss/sign-in.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nconst Joi = require('@hapi/joi');\r\n\r\nconst Login = () => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\tconst [emailInputEmpty, setEmailInputEmpty] = useState(true);\r\n\tconst [passwordInputEmpty, setPasswordInputEmpty] = useState(true);\r\n\tconst [error,setError] = useState(\"\")\r\n\r\n\tconst minPasswordLength = 2;\r\n\r\n\tconst signUpSchema = Joi.object({\r\n\t\temail: Joi.string().required().email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }),\r\n\t\tpassword: Joi.string().required().min(minPasswordLength)\r\n\t});\r\n\r\n\tconst updateEmail = (input) => {\r\n\t\tsetEmail(input);\r\n\t\tif (input === '') setEmailInputEmpty(true);\r\n\t\telse setEmailInputEmpty(false);\r\n\t};\r\n\r\n\tconst updatePassword = (input) => {\r\n\t\tsetPassword(input);\r\n\t\tif (input === '') setPasswordInputEmpty(true);\r\n\t\telse setPasswordInputEmpty(false);\r\n\t};\r\n\r\n\tconst checkIfEncodeUriValid = (input) => {\r\n\t\treturn encodeURI(input) === input;\r\n\t};\r\n\r\n\tconst toCapitalize = (input) => {\r\n\t\treturn input.slice(0, 1).toUpperCase() + input.slice(1);\r\n\t};\r\n\r\n\tconst loginInformation = async () => {\r\n\r\n\t\tconst emailUriEncoded = checkIfEncodeUriValid(email);\r\n\t\tconst passwordUriEncoded = checkIfEncodeUriValid(password);\r\n\r\n\t\tconst signUpValidation = signUpSchema.validate({ email, password });\r\n\r\n\t\tif (signUpValidation.error) {\r\n\t\t\tconst empty = signUpValidation.error.toString().includes('empty');\r\n\t\t\tconst valid = signUpValidation.error.toString().includes('valid');\r\n\t\t\tconst tooShort = signUpValidation.error.toString().includes('at least');\r\n\t\t\tconst errorField = signUpValidation.error.toString().split('\"')[1];\r\n\t\t\tif (empty) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ' cannot be empty');\r\n\t\t\t} else if (valid) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ' must be valid');\r\n\t\t\t} else if (errorField === 'password' && tooShort) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ` must be at least ${minPasswordLength} characters long.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!emailUriEncoded || !passwordUriEncoded) {\r\n\t\t\treturn setError('Login information can only have letters and numbers!');\r\n\t\t}\r\n\t\tconst data = { \"email\": email, \"password\": password };\r\n\t\tconst dataString = JSON.stringify(data);\r\n\t\tconst signInRequest = await fetch(process.env.LOGIN_URL, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAccept: 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: dataString\r\n\t\t});\r\n\t\tconst signInJson = await signInRequest.json();\r\n\t\t\r\n\t\tif (signInJson.error) {\r\n\t\t\treturn setError(signInJson.error);\r\n\t\t}\r\n\t\tsetError('');\r\n\t\treturn console.log(signInJson)\r\n\t\tlocalStorage.setItem('jwt', signInJson.token);\r\n\t\treturn router.push(\"/\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className={styles.loginContainer}>\r\n\t\t\t<div className={styles.images}>\r\n\t\t\t\t<img src=\"/images/cartoon-youtube.png\" alt=\"Youtube Workflow\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.loginTxt}>\r\n\t\t\t\t<img className={styles.logoImg} src=\"/images/logo.jpg\" />\r\n\t\t\t\t<h1>Welcome Back!</h1>\r\n\t\t\t\t<h5>\r\n\t\t\t\t\tTo keep putting out more of your amazing videos, please login in with your email address and\r\n\t\t\t\t\tpassword below.\r\n\t\t\t\t</h5>\r\n\t\t\t\t<div className={styles.signInSection}>\r\n\t\t\t\t\t<div className={styles.googleSignIn}>\r\n\t\t\t\t\t\t<img src=\"/images/google_logo.png\" />\r\n\t\t\t\t\t\t<h4>Sign In with Google</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.emailSignIn}>\r\n\t\t\t\t\t\t<p>Or sign-in with email</p>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !emailInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t{console.log(error)}\r\n\t\t\t\t\t\t\t\t<input className={classnames({ [styles.errorInput]: error.includes('Email') })}\r\n\t\t\t\t\t\t\t\t\tvalue={email} onChange={(e) => updateEmail(e.target.value)} type=\"email\" required />\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !passwordInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Username') })}\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updatePassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span style={{ textAlign: 'center', width: '80%' }}>{error}</span>\r\n\t\t\t\t\t\t\t<div className={styles.submitEmailForm} onClick={() => loginInformation()}>Sign In</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3 className={styles.switchToSignUp}>\r\n\t\t\t\t\t\tDon't have an account?{'  '}\r\n\t\t\t\t\t\t<Link href=\"/sign-up\">\r\n\t\t\t\t\t\t\t<span className={styles.signUpBtn}>Sign Up</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}