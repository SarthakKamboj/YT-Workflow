{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\dashboard\\\\statistics.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../../styles/scss/statistics.module.scss';\nimport classnames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setProfileImage } from '../../components/actions/profileImageActions';\nimport { setProfileName } from '../../components/actions/profileNameActions';\nimport DashboardMenu from '../../components/DashboardMenu'; // import Chart from 'chart.js';\n\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport { useRef, useState, useEffect } from 'react';\n\nconst Dashboard = () => {\n  const jwt = useSelector(state => state.jwtToken);\n  const statsCanvas = useRef();\n  const {\n    0: userFilesBreakdown,\n    1: setUserFilesBreakdown\n  } = useState();\n  const {\n    0: userFilesLabels,\n    1: setUserFilesLabels\n  } = useState();\n  const {\n    0: userStarredWorkflows,\n    1: setUserStarredWorkflows\n  } = useState();\n  const {\n    0: userStarredLabels,\n    1: setUserStarredLabels\n  } = useState();\n  const {\n    0: userFinishedWorkflows,\n    1: setUserFinishedWorkflows\n  } = useState();\n\n  const capitalize = str => {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n  };\n\n  const fetchFileBreakdown = async () => {\n    const res = await fetch('http://localhost:8000/workflows-file-breakdown', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwt\n      }\n    });\n\n    if (res.status === 200) {\n      const resJson = await res.json();\n      const info = resJson['msg'];\n      setUserFilesLabels(Object.keys(info).map(label => capitalize(label)));\n      setUserFilesBreakdown(Object.values(info));\n    }\n  };\n\n  const fetchStarredUnfinishedBreakdown = async () => {\n    const res = await fetch('http://localhost:8000/workflows-finished-data', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwt\n      }\n    });\n\n    if (res.status === 200) {\n      const resJson = await res.json();\n      const info = resJson['msg'];\n      setUserStarredLabels(Object.keys(info).map(label => capitalize(label)));\n      setUserStarredWorkflows(Object.values(info));\n    }\n  };\n\n  useEffect(() => {\n    fetchFileBreakdown();\n    fetchStarredUnfinishedBreakdown();\n  }, []);\n\n  const fileBreakdownChart = canvas => {\n    // const ctx = canvas.getContext('2d');\n    canvas.style.width = '50%';\n    return {\n      labels: userFilesLabels,\n      datasets: [{\n        // label: 'File Breakdown',\n        data: userFilesBreakdown,\n        backgroundColor: ['#DC1C13', '#EA4C46', '#F07470', '#F1959B'],\n        borderWidth: 2,\n        hoverBorderColor: 'black',\n        borderColor: 'white'\n      }]\n    };\n  };\n\n  const starredBreakdownChart = canvas => {\n    // const ctx = canvas.getContext('2d');\n    canvas.style.width = '50%';\n    return {\n      labels: userStarredLabels,\n      datasets: [{\n        // label: 'File Breakdown',\n        data: userStarredWorkflows,\n        backgroundColor: ['#DC1C13', '#EA4C46', '#F07470', '#F1959B'],\n        borderWidth: 2,\n        hoverBorderColor: 'black',\n        borderColor: 'white'\n      }]\n    };\n  }; // const loadCharts = () => {};\n  // useEffect(\n  // \t() => {\n  // \t\tloadCharts();\n  // \t\treturn () => {\n  // \t\t\tcleanup;\n  // \t\t};\n  // \t},\n  // \t[ input ]\n  // );\n\n\n  const chartOptions = {};\n  return __jsx(\"main\", {\n    className: styles.statisticsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.dashboardMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.statisticsSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }\n  }, __jsx(Doughnut, {\n    data: fileBreakdownChart,\n    responsive: true,\n    options: {},\n    className: styles.chart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), __jsx(Doughnut, {\n    data: starredBreakdownChart,\n    responsive: true,\n    options: {},\n    className: styles.chart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/dashboard/statistics.js"],"names":["styles","classnames","useSelector","useDispatch","setProfileImage","setProfileName","DashboardMenu","Bar","Line","Pie","Doughnut","useRef","useState","useEffect","Dashboard","jwt","state","jwtToken","statsCanvas","userFilesBreakdown","setUserFilesBreakdown","userFilesLabels","setUserFilesLabels","userStarredWorkflows","setUserStarredWorkflows","userStarredLabels","setUserStarredLabels","userFinishedWorkflows","setUserFinishedWorkflows","capitalize","str","slice","toUpperCase","fetchFileBreakdown","res","fetch","headers","Authorization","status","resJson","json","info","Object","keys","map","label","values","fetchStarredUnfinishedBreakdown","fileBreakdownChart","canvas","style","width","labels","datasets","data","backgroundColor","borderWidth","hoverBorderColor","borderColor","starredBreakdownChart","chartOptions","statisticsContainer","dashboardMenuContainer","statisticsSection","chart"],"mappings":"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","sourcesContent":["import styles from '../../styles/scss/statistics.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setProfileImage } from '../../components/actions/profileImageActions';\r\nimport { setProfileName } from '../../components/actions/profileNameActions';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\n// import Chart from 'chart.js';\r\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { useRef, useState, useEffect } from 'react';\r\n\r\nconst Dashboard = () => {\r\n\tconst jwt = useSelector((state) => state.jwtToken);\r\n\tconst statsCanvas = useRef();\r\n\tconst [ userFilesBreakdown, setUserFilesBreakdown ] = useState();\r\n\tconst [ userFilesLabels, setUserFilesLabels ] = useState();\r\n\r\n\tconst [ userStarredWorkflows, setUserStarredWorkflows ] = useState();\r\n\tconst [ userStarredLabels, setUserStarredLabels ] = useState();\r\n\r\n\tconst [ userFinishedWorkflows, setUserFinishedWorkflows ] = useState();\r\n\r\n\tconst capitalize = (str) => {\r\n\t\treturn str.slice(0, 1).toUpperCase() + str.slice(1);\r\n\t};\r\n\r\n\tconst fetchFileBreakdown = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-file-breakdown', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserFilesLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserFilesBreakdown(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchStarredUnfinishedBreakdown = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-finished-data', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserStarredLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserStarredWorkflows(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchFileBreakdown();\r\n\t\tfetchStarredUnfinishedBreakdown();\r\n\t}, []);\r\n\r\n\tconst fileBreakdownChart = (canvas) => {\r\n\t\t// const ctx = canvas.getContext('2d');\r\n\t\tcanvas.style.width = '50%';\r\n\t\treturn {\r\n\t\t\tlabels: userFilesLabels,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\t// label: 'File Breakdown',\r\n\t\t\t\t\tdata: userFilesBreakdown,\r\n\t\t\t\t\tbackgroundColor: [ '#DC1C13', '#EA4C46', '#F07470', '#F1959B' ],\r\n\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\thoverBorderColor: 'black',\r\n\t\t\t\t\tborderColor: 'white'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t};\r\n\r\n\tconst starredBreakdownChart = (canvas) => {\r\n\t\t// const ctx = canvas.getContext('2d');\r\n\t\tcanvas.style.width = '50%';\r\n\t\treturn {\r\n\t\t\tlabels: userStarredLabels,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\t// label: 'File Breakdown',\r\n\t\t\t\t\tdata: userStarredWorkflows,\r\n\t\t\t\t\tbackgroundColor: [ '#DC1C13', '#EA4C46', '#F07470', '#F1959B' ],\r\n\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\thoverBorderColor: 'black',\r\n\t\t\t\t\tborderColor: 'white'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t};\r\n\r\n\t// const loadCharts = () => {};\r\n\r\n\t// useEffect(\r\n\t// \t() => {\r\n\t// \t\tloadCharts();\r\n\t// \t\treturn () => {\r\n\t// \t\t\tcleanup;\r\n\t// \t\t};\r\n\t// \t},\r\n\t// \t[ input ]\r\n\t// );\r\n\r\n\tconst chartOptions = {};\r\n\r\n\treturn (\r\n\t\t<main className={styles.statisticsContainer}>\r\n\t\t\t<div className={styles.dashboardMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.statisticsSection}>\r\n\t\t\t\t<Doughnut data={fileBreakdownChart} responsive={true} options={{}} className={styles.chart} />\r\n\t\t\t\t<Doughnut data={starredBreakdownChart} responsive={true} options={{}} className={styles.chart} />\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}