{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\workflow\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDispatch } from 'react-redux'; // const dispatch = useDispatch();\n\nconst string = 'string';\n\nconst Workflow = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"Workflow \", props.id);\n};\n\nexport async function getStaticProps({\n  params\n}) {\n  return {\n    id: params.id\n  };\n}\nexport async function getStaticPaths() {\n  // const workflowIds = localStorage.getItem('workflowIds');\n  // const jwt = localStorage.getItem('jwt');\n  console.log(string); // const workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\n  // \theaders: {\n  // \t\t'Content-Type': 'application/json',\n  // \t\tAuthorization: `Bearer ${jwt}`\n  // \t}\n  // });\n  // const workflowIdsJson = await workflowIdsResponse.json();\n  // const workflowIdsArray = await workflowIdsJson['workflow-ids'];\n  // const paths = workflowIdsArray.map((workflowId) => {\n  // \treturn {\n  // \t\tparams: {\n  // \t\t\tid: workflowId\n  // \t\t}\n  // \t};\n  // });\n  // return {\n  // \tpaths,\n  // \tfallback: false\n  // };\n}","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/workflow/[id].js"],"names":["useDispatch","string","Workflow","props","id","getStaticProps","params","getStaticPaths","console","log"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B,C,CAEA;;AAEA,MAAMC,MAAM,GAAG,QAAf;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC3B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeA,KAAK,CAACC,EAArB,CAAP;AACA,CAFD;;AAIA,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAChD,SAAO;AACNF,IAAAA,EAAE,EAAEE,MAAM,CAACF;AADL,GAAP;AAGA;AAED,OAAO,eAAeG,cAAf,GAAgC;AACtC;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAHsC,CAItC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\n// const dispatch = useDispatch();\r\n\r\nconst string = 'string';\r\n\r\nconst Workflow = (props) => {\r\n\treturn <div>Workflow {props.id}</div>;\r\n};\r\n\r\nexport async function getStaticProps({ params }) {\r\n\treturn {\r\n\t\tid: params.id\r\n\t};\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\t// const workflowIds = localStorage.getItem('workflowIds');\r\n\t// const jwt = localStorage.getItem('jwt');\r\n\tconsole.log(string);\r\n\t// const workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\r\n\t// \theaders: {\r\n\t// \t\t'Content-Type': 'application/json',\r\n\t// \t\tAuthorization: `Bearer ${jwt}`\r\n\t// \t}\r\n\t// });\r\n\t// const workflowIdsJson = await workflowIdsResponse.json();\r\n\t// const workflowIdsArray = await workflowIdsJson['workflow-ids'];\r\n\t// const paths = workflowIdsArray.map((workflowId) => {\r\n\t// \treturn {\r\n\t// \t\tparams: {\r\n\t// \t\t\tid: workflowId\r\n\t// \t\t}\r\n\t// \t};\r\n\t// });\r\n\t// return {\r\n\t// \tpaths,\r\n\t// \tfallback: false\r\n\t// };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}