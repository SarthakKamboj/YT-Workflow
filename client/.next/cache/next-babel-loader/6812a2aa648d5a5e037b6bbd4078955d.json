{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\dashboard\\\\statistics.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../../styles/scss/statistics.module.scss';\nimport classnames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setProfileImage } from '../../components/actions/profileImageActions';\nimport { setProfileName } from '../../components/actions/profileNameActions';\nimport DashboardMenu from '../../components/DashboardMenu'; // import Chart from 'chart.js';\n// import { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\n\nimport { useRef, useState, useEffect } from 'react';\nimport DonutChart from '../../components/DonutChart';\n\nconst Dashboard = () => {\n  const jwt = useSelector(state => state.jwtToken);\n  const {\n    0: userFilesBreakdown,\n    1: setUserFilesBreakdown\n  } = useState();\n  const {\n    0: userFilesLabels,\n    1: setUserFilesLabels\n  } = useState();\n  const {\n    0: userStarredWorkflows,\n    1: setUserStarredWorkflows\n  } = useState();\n  const {\n    0: userStarredLabels,\n    1: setUserStarredLabels\n  } = useState();\n  const {\n    0: userFinishedWorkflows,\n    1: setUserFinishedWorkflows\n  } = useState();\n  const {\n    0: userFinishedLabels,\n    1: setUserFinishedLabels\n  } = useState();\n\n  const capitalize = str => {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n  };\n\n  const fetchFileBreakdown = async () => {\n    const res = await fetch('http://localhost:8000/workflows-file-breakdown', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwt\n      }\n    });\n\n    if (res.status === 200) {\n      const resJson = await res.json();\n      const info = resJson['msg'];\n      setUserFilesLabels(Object.keys(info).map(label => capitalize(label)));\n      setUserFilesBreakdown(Object.values(info));\n    }\n  };\n\n  const fetchFinishedBreakdown = async () => {\n    const res = await fetch('http://localhost:8000/workflows-finished-data', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwt\n      }\n    });\n\n    if (res.status === 200) {\n      const resJson = await res.json();\n      const info = resJson['msg'];\n      setUserFinishedLabels(Object.keys(info).map(label => capitalize(label)));\n      setUserFinishedWorkflows(Object.values(info));\n    }\n  };\n\n  const fetchStarredBreakdown = async () => {\n    const res = await fetch('http://localhost:8000/workflows-starred-data', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + jwt\n      }\n    });\n\n    if (res.status === 200) {\n      const resJson = await res.json();\n      const info = resJson['msg'];\n      setUserStarredLabels(Object.keys(info).map(label => capitalize(label)));\n      setUserStarredWorkflows(Object.values(info));\n    }\n  };\n\n  useEffect(() => {\n    fetchFileBreakdown();\n    fetchFinishedBreakdown();\n    fetchStarredBreakdown();\n  }, []);\n\n  const fileBreakdownChart = canvas => {\n    // const ctx = canvas.getContext('2d');\n    canvas.style.width = '50%';\n    canvas.style.height = '45%';\n    return {\n      labels: userFilesLabels,\n      datasets: [{\n        // label: 'File Breakdown',\n        data: userFilesBreakdown,\n        backgroundColor: ['#DC1C13', '#F1959B', '#EA4C46', '#F07470'],\n        borderWidth: 2,\n        hoverBorderColor: 'black',\n        borderColor: 'white'\n      }]\n    };\n  };\n\n  const starredBreakdownChart = canvas => {\n    // const ctx = canvas.getContext('2d');\n    canvas.style.width = '50%';\n    canvas.style.height = '45%';\n    return {\n      labels: userStarredLabels,\n      datasets: [{\n        // label: 'File Breakdown',\n        data: userStarredWorkflows,\n        backgroundColor: ['#DC1C13', '#F1959B'],\n        borderWidth: 2,\n        hoverBorderColor: 'black',\n        borderColor: 'white',\n        label: 'Hi'\n      }]\n    };\n  };\n\n  const finishedBreakdownChart = canvas => {\n    // const ctx = canvas.getContext('2d');\n    canvas.style.width = '50%';\n    canvas.style.height = '45%';\n    return {\n      labels: userFinishedLabels,\n      datasets: [{\n        // label: 'File Breakdown',\n        data: userFinishedWorkflows,\n        backgroundColor: ['#DC1C13', '#F1959B'],\n        borderWidth: 2,\n        hoverBorderColor: 'black',\n        borderColor: 'white',\n        label: 'Hi'\n      }]\n    };\n  }; // const loadCharts = () => {};\n  // useEffect(\n  // \t() => {\n  // \t\tloadCharts();\n  // \t\treturn () => {\n  // \t\t\tcleanup;\n  // \t\t};\n  // \t},\n  // \t[ input ]\n  // );\n\n\n  const chartOptions = {\n    legend: {\n      position: 'right',\n      labels: {// fontSize: 25\n      }\n    },\n    tooltips: {\n      // bodyFontSize: 30,\n      padding: 5\n    }\n  };\n  return __jsx(\"main\", {\n    className: styles.statisticsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.dashboardMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.statisticsSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }\n  }, __jsx(Doughnut, {\n    data: fileBreakdownChart,\n    responsive: true // options={chartOptions}\n    ,\n    className: styles.chart,\n    options: Object.freeze({\n      title: 'File Breakdown',\n      fontSize: 25\n    }, chartOptions),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }), __jsx(Doughnut, {\n    data: starredBreakdownChart,\n    responsive: true // options={chartOptions}\n    ,\n    className: styles.chart,\n    options: Object.freeze({\n      title: 'Starred vs. Unstarred',\n      fontSize: 25\n    }, chartOptions),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }), __jsx(Doughnut, {\n    data: finishedBreakdownChart,\n    responsive: true // options={chartOptions}\n    ,\n    className: styles.chart,\n    options: Object.freeze({\n      title: 'Finished vs. Unfinished',\n      fontSize: 25\n    }, chartOptions),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/dashboard/statistics.js"],"names":["styles","classnames","useSelector","useDispatch","setProfileImage","setProfileName","DashboardMenu","useRef","useState","useEffect","DonutChart","Dashboard","jwt","state","jwtToken","userFilesBreakdown","setUserFilesBreakdown","userFilesLabels","setUserFilesLabels","userStarredWorkflows","setUserStarredWorkflows","userStarredLabels","setUserStarredLabels","userFinishedWorkflows","setUserFinishedWorkflows","userFinishedLabels","setUserFinishedLabels","capitalize","str","slice","toUpperCase","fetchFileBreakdown","res","fetch","headers","Authorization","status","resJson","json","info","Object","keys","map","label","values","fetchFinishedBreakdown","fetchStarredBreakdown","fileBreakdownChart","canvas","style","width","height","labels","datasets","data","backgroundColor","borderWidth","hoverBorderColor","borderColor","starredBreakdownChart","finishedBreakdownChart","chartOptions","legend","position","tooltips","padding","statisticsContainer","dashboardMenuContainer","statisticsSection","chart","freeze","title","fontSize"],"mappings":"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","sourcesContent":["import styles from '../../styles/scss/statistics.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setProfileImage } from '../../components/actions/profileImageActions';\r\nimport { setProfileName } from '../../components/actions/profileNameActions';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\n// import Chart from 'chart.js';\r\n// import { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport DonutChart from '../../components/DonutChart';\r\n\r\nconst Dashboard = () => {\r\n\tconst jwt = useSelector((state) => state.jwtToken);\r\n\tconst [ userFilesBreakdown, setUserFilesBreakdown ] = useState();\r\n\tconst [ userFilesLabels, setUserFilesLabels ] = useState();\r\n\r\n\tconst [ userStarredWorkflows, setUserStarredWorkflows ] = useState();\r\n\tconst [ userStarredLabels, setUserStarredLabels ] = useState();\r\n\r\n\tconst [ userFinishedWorkflows, setUserFinishedWorkflows ] = useState();\r\n\tconst [ userFinishedLabels, setUserFinishedLabels ] = useState();\r\n\r\n\tconst capitalize = (str) => {\r\n\t\treturn str.slice(0, 1).toUpperCase() + str.slice(1);\r\n\t};\r\n\r\n\tconst fetchFileBreakdown = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-file-breakdown', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserFilesLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserFilesBreakdown(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchFinishedBreakdown = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-finished-data', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserFinishedLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserFinishedWorkflows(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchStarredBreakdown = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-starred-data', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserStarredLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserStarredWorkflows(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchFileBreakdown();\r\n\t\tfetchFinishedBreakdown();\r\n\t\tfetchStarredBreakdown();\r\n\t}, []);\r\n\r\n\tconst fileBreakdownChart = (canvas) => {\r\n\t\t// const ctx = canvas.getContext('2d');\r\n\t\tcanvas.style.width = '50%';\r\n\t\tcanvas.style.height = '45%';\r\n\t\treturn {\r\n\t\t\tlabels: userFilesLabels,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\t// label: 'File Breakdown',\r\n\t\t\t\t\tdata: userFilesBreakdown,\r\n\t\t\t\t\tbackgroundColor: [ '#DC1C13', '#F1959B', '#EA4C46', '#F07470' ],\r\n\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\thoverBorderColor: 'black',\r\n\t\t\t\t\tborderColor: 'white'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t};\r\n\r\n\tconst starredBreakdownChart = (canvas) => {\r\n\t\t// const ctx = canvas.getContext('2d');\r\n\t\tcanvas.style.width = '50%';\r\n\t\tcanvas.style.height = '45%';\r\n\t\treturn {\r\n\t\t\tlabels: userStarredLabels,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\t// label: 'File Breakdown',\r\n\t\t\t\t\tdata: userStarredWorkflows,\r\n\t\t\t\t\tbackgroundColor: [ '#DC1C13', '#F1959B' ],\r\n\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\thoverBorderColor: 'black',\r\n\t\t\t\t\tborderColor: 'white',\r\n\t\t\t\t\tlabel: 'Hi'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t};\r\n\r\n\tconst finishedBreakdownChart = (canvas) => {\r\n\t\t// const ctx = canvas.getContext('2d');\r\n\t\tcanvas.style.width = '50%';\r\n\t\tcanvas.style.height = '45%';\r\n\t\treturn {\r\n\t\t\tlabels: userFinishedLabels,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\t// label: 'File Breakdown',\r\n\t\t\t\t\tdata: userFinishedWorkflows,\r\n\t\t\t\t\tbackgroundColor: [ '#DC1C13', '#F1959B' ],\r\n\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\thoverBorderColor: 'black',\r\n\t\t\t\t\tborderColor: 'white',\r\n\t\t\t\t\tlabel: 'Hi'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t};\r\n\r\n\t// const loadCharts = () => {};\r\n\r\n\t// useEffect(\r\n\t// \t() => {\r\n\t// \t\tloadCharts();\r\n\t// \t\treturn () => {\r\n\t// \t\t\tcleanup;\r\n\t// \t\t};\r\n\t// \t},\r\n\t// \t[ input ]\r\n\t// );\r\n\r\n\tconst chartOptions = {\r\n\t\tlegend: {\r\n\t\t\tposition: 'right',\r\n\t\t\tlabels: {\r\n\t\t\t\t// fontSize: 25\r\n\t\t\t}\r\n\t\t},\r\n\t\ttooltips: {\r\n\t\t\t// bodyFontSize: 30,\r\n\t\t\tpadding: 5\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className={styles.statisticsContainer}>\r\n\t\t\t<div className={styles.dashboardMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.statisticsSection}>\r\n\t\t\t\t<Doughnut\r\n\t\t\t\t\tdata={fileBreakdownChart}\r\n\t\t\t\t\tresponsive={true}\r\n\t\t\t\t\t// options={chartOptions}\r\n\t\t\t\t\tclassName={styles.chart}\r\n\t\t\t\t\toptions={Object.freeze(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'File Breakdown',\r\n\t\t\t\t\t\t\tfontSize: 25\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchartOptions\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Doughnut\r\n\t\t\t\t\tdata={starredBreakdownChart}\r\n\t\t\t\t\tresponsive={true}\r\n\t\t\t\t\t// options={chartOptions}\r\n\t\t\t\t\tclassName={styles.chart}\r\n\t\t\t\t\toptions={Object.freeze(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'Starred vs. Unstarred',\r\n\t\t\t\t\t\t\tfontSize: 25\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchartOptions\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* <Doughnut data={fileBreakdownChart} responsive={true} options={chartOptions} className={styles.chart} /> */}\r\n\t\t\t\t<Doughnut\r\n\t\t\t\t\tdata={finishedBreakdownChart}\r\n\t\t\t\t\tresponsive={true}\r\n\t\t\t\t\t// options={chartOptions}\r\n\t\t\t\t\tclassName={styles.chart}\r\n\t\t\t\t\toptions={Object.freeze(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'Finished vs. Unfinished',\r\n\t\t\t\t\t\t\tfontSize: 25\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchartOptions\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}