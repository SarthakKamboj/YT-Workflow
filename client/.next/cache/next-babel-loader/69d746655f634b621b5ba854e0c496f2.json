{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\dashboard\\\\workflows.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../../styles/scss/workflows.module.scss';\nimport classnames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setProfileImage } from '../../components/actions/profileImageActions';\nimport { setProfileName } from '../../components/actions/profileNameActions';\nimport { setJwt } from '../../components/actions/jwtAction';\nimport DashboardMenu from '../../components/DashboardMenu';\nimport WorkflowItem from '../../components/WorkflowItem';\nimport CreateWorkflowModal from '../../components/CreateWorkflowModal';\n\nconst Dashboard = () => {\n  // const currentProfileImage = useSelector((state) => state.profileImage);\n  console.log('dashboard');\n  const {\n    0: workflows,\n    1: setWorkflows\n  } = useState(null);\n  const {\n    0: displayModal,\n    1: setDisplayModal\n  } = useState(false);\n  const jwtToken = useSelector(state => state.jwtToken); // console.log('jwtToken: ' + (jwtToken === ''));\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  console.log(state);\n\n  const getNewJwtToken = async () => {\n    const refreshToken = localStorage.getItem('refresh-token');\n    const data = {\n      refresh: refreshToken\n    };\n    const dataStringified = JSON.stringify(data);\n    const newAccessTokenRes = await fetch('http://127.0.0.1:8000/api/refresh', {\n      method: 'POST',\n      body: dataStringified,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const newAccessTokenJson = await newAccessTokenRes.json();\n    const newJwtToken = newAccessTokenJson.access; // dispatch(setJwt(newJwtToken));\n    // const workflowsResponse = await fetch('http://localhost:8000/get-workflows', {\n    // \theaders: {\n    // \t\tAuthorization: 'Bearer ' + newJwtToken\n    // \t}\n    // });\n    // console.log(workflowsResponse);\n    // const workflowsJson = await workflowsResponse.json();\n    // if (workflowsJson.code) {\n    // \tconsole.log('jwt was not correct');\n    // \tawait getNewJwtToken();\n    // \treturn;\n    // }\n    // setWorkflows(workflowsJson['workflows']);\n    // console.log(workflowsJson);\n    // await getWorkflows();\n    // window.location = window.location.href;\n  };\n\n  const getWorkflows = async () => {\n    // console.log('in workflows.js');]\n    // console.log(jwtToken);\n    const jwtBearerString = 'Bearer ' + jwtToken; // console.log(jwtBearerString);\n\n    const workflowsResponse = await fetch('http://localhost:8000/get-workflows', {\n      headers: {\n        Authorization: jwtBearerString\n      }\n    });\n    const workflowsJson = await workflowsResponse.json(); // console.log(workflowsJson);\n\n    if (workflowsJson.code) {\n      // console.log('jwt was not correct');\n      // await getNewJwtToken();\n      return;\n    }\n\n    setWorkflows(workflowsJson['workflows']); // console.log(workflowsJson);\n  };\n\n  useEffect(() => {\n    console.log('use effect'); // const tempWorkflows = [\n    // \t{ title: 'Workflow 1', keywords: [ 'blog', 'comedy' ] },\n    // \t{ title: 'Workflow 1', keywords: [ 'blog', 'comedy' ] },\n    // \t{ title: 'Workflow 1', keywords: [ 'blog', 'comedy' ] }\n    // ];\n    // const workflowsResponse = fetch('http://localhost:8000/get-workflows', {\n    // \theaders: {\n    // \t\tAuthorization: 'Bearer ' + jwtToken\n    // \t}\n    // })\n    // \t.then((res) => res.json())\n    // \t.then((workflows) => {\n    // \t\tif (workflows.code) {\n    // \t\t\treturn;\n    // \t\t}\n    // \t\tsetWorkflows(workflows);\n    // \t\tconsole.log(workflows);\n    // \t})\n    // \t.catch((e) => {\n    // \t\tconsole.log(error);\n    // \t\tconsole.log(e);\n    // \t});\n\n    getWorkflows();\n  }, []);\n\n  const toggleModalVisibility = () => {\n    setDisplayModal(!displayModal);\n  }; // if (currentProfileImage === '') {\n  // \tconst dispatch = useDispatch();\n  // \tdispatch(setProfileImage(props.profileImage));\n  // \tdispatch(setProfileName(props.profileName));\n  // }\n\n\n  return __jsx(\"main\", {\n    className: styles.workflowsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }\n  });\n}; // export async function getStaticProps() {\n// \t// const profileImage = 'https://i.imgur.com/0byOhwQ.jpg';\n// \t// const profileName = 'Sarthak Kamboj';\n// \t// return {\n// \t// \tprops: {\n// \t// \t\tprofileImage,\n// \t// \t\tprofileName\n// \t// \t}\n// \t// };\n// }\n\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/dashboard/workflows.js"],"names":["styles","classnames","useEffect","useState","useSelector","useDispatch","setProfileImage","setProfileName","setJwt","DashboardMenu","WorkflowItem","CreateWorkflowModal","Dashboard","console","log","workflows","setWorkflows","displayModal","setDisplayModal","jwtToken","state","dispatch","getNewJwtToken","refreshToken","localStorage","getItem","data","refresh","dataStringified","JSON","stringify","newAccessTokenRes","fetch","method","body","headers","newAccessTokenJson","json","newJwtToken","access","getWorkflows","jwtBearerString","workflowsResponse","Authorization","workflowsJson","code","toggleModalVisibility","workflowsContainer"],"mappings":"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","sourcesContent":["import styles from '../../styles/scss/workflows.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setProfileImage } from '../../components/actions/profileImageActions';\r\nimport { setProfileName } from '../../components/actions/profileNameActions';\r\nimport { setJwt } from '../../components/actions/jwtAction';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\nimport WorkflowItem from '../../components/WorkflowItem';\r\nimport CreateWorkflowModal from '../../components/CreateWorkflowModal';\r\n\r\nconst Dashboard = () => {\r\n\t// const currentProfileImage = useSelector((state) => state.profileImage);\r\n\tconsole.log('dashboard');\r\n\tconst [ workflows, setWorkflows ] = useState(null);\r\n\tconst [ displayModal, setDisplayModal ] = useState(false);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\t// console.log('jwtToken: ' + (jwtToken === ''));\r\n\tconst dispatch = useDispatch();\r\n\tconst state = useSelector((state) => state);\r\n\tconsole.log(state);\r\n\r\n\tconst getNewJwtToken = async () => {\r\n\t\tconst refreshToken = localStorage.getItem('refresh-token');\r\n\t\tconst data = {\r\n\t\t\trefresh: refreshToken\r\n\t\t};\r\n\t\tconst dataStringified = JSON.stringify(data);\r\n\t\tconst newAccessTokenRes = await fetch('http://127.0.0.1:8000/api/refresh', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: dataStringified,\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst newAccessTokenJson = await newAccessTokenRes.json();\r\n\t\tconst newJwtToken = newAccessTokenJson.access;\r\n\t\t// dispatch(setJwt(newJwtToken));\r\n\t\t// const workflowsResponse = await fetch('http://localhost:8000/get-workflows', {\r\n\t\t// \theaders: {\r\n\t\t// \t\tAuthorization: 'Bearer ' + newJwtToken\r\n\t\t// \t}\r\n\t\t// });\r\n\t\t// console.log(workflowsResponse);\r\n\t\t// const workflowsJson = await workflowsResponse.json();\r\n\t\t// if (workflowsJson.code) {\r\n\t\t// \tconsole.log('jwt was not correct');\r\n\t\t// \tawait getNewJwtToken();\r\n\t\t// \treturn;\r\n\t\t// }\r\n\t\t// setWorkflows(workflowsJson['workflows']);\r\n\t\t// console.log(workflowsJson);\r\n\t\t// await getWorkflows();\r\n\t\t// window.location = window.location.href;\r\n\t};\r\n\r\n\tconst getWorkflows = async () => {\r\n\t\t// console.log('in workflows.js');]\r\n\t\t// console.log(jwtToken);\r\n\t\tconst jwtBearerString = 'Bearer ' + jwtToken;\r\n\t\t// console.log(jwtBearerString);\r\n\t\tconst workflowsResponse = await fetch('http://localhost:8000/get-workflows', {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: jwtBearerString\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst workflowsJson = await workflowsResponse.json();\r\n\t\t// console.log(workflowsJson);\r\n\t\tif (workflowsJson.code) {\r\n\t\t\t// console.log('jwt was not correct');\r\n\t\t\t// await getNewJwtToken();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetWorkflows(workflowsJson['workflows']);\r\n\t\t// console.log(workflowsJson);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('use effect');\r\n\t\t// const tempWorkflows = [\r\n\t\t// \t{ title: 'Workflow 1', keywords: [ 'blog', 'comedy' ] },\r\n\t\t// \t{ title: 'Workflow 1', keywords: [ 'blog', 'comedy' ] },\r\n\t\t// \t{ title: 'Workflow 1', keywords: [ 'blog', 'comedy' ] }\r\n\t\t// ];\r\n\t\t// const workflowsResponse = fetch('http://localhost:8000/get-workflows', {\r\n\t\t// \theaders: {\r\n\t\t// \t\tAuthorization: 'Bearer ' + jwtToken\r\n\t\t// \t}\r\n\t\t// })\r\n\t\t// \t.then((res) => res.json())\r\n\t\t// \t.then((workflows) => {\r\n\t\t// \t\tif (workflows.code) {\r\n\t\t// \t\t\treturn;\r\n\t\t// \t\t}\r\n\t\t// \t\tsetWorkflows(workflows);\r\n\t\t// \t\tconsole.log(workflows);\r\n\t\t// \t})\r\n\t\t// \t.catch((e) => {\r\n\t\t// \t\tconsole.log(error);\r\n\t\t// \t\tconsole.log(e);\r\n\t\t// \t});\r\n\t\tgetWorkflows();\r\n\t}, []);\r\n\r\n\tconst toggleModalVisibility = () => {\r\n\t\tsetDisplayModal(!displayModal);\r\n\t};\r\n\r\n\t// if (currentProfileImage === '') {\r\n\t// \tconst dispatch = useDispatch();\r\n\t// \tdispatch(setProfileImage(props.profileImage));\r\n\t// \tdispatch(setProfileName(props.profileName));\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<main className={styles.workflowsContainer}>\r\n\t\t\t{/* <div className={styles.workflowsMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.workflowsBody}>\r\n\t\t\t\t{!workflows ? (\r\n\t\t\t\t\t<p className={styles.noWorkflows}>You don't have any workflows. Let's get one started!</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={styles.workflowList}>\r\n\t\t\t\t\t\t{workflows.map((workflow) => <WorkflowItem workflow={workflow} key={workflow.id} />)} */}\r\n\t\t\t{/* {workflows.map((workflow) => (\r\n\t\t\t\t\t\t\t<WorkflowItem workflow={workflow} key={workflow.title} />\r\n\t\t\t\t\t\t\t// <div className={styles.workflow} key={index}>\r\n\t\t\t\t\t\t\t// <div className={styles.workflowTitle}>{workflow.title}</div>\r\n\t\t\t\t\t\t\t// \t<ul className={styles.workflowKeywords}>\r\n\t\t\t\t\t\t\t// \t\t{workflow.keywords.map(keyword=>(\r\n\t\t\t\t\t\t\t// \t\t\t<li key={keyword}>\r\n\t\t\t\t\t\t\t// \t\t\t\t{capitalize(keyword)}\r\n\t\t\t\t\t\t\t// \t\t\t</li>\r\n\t\t\t\t\t\t\t// \t\t))}\r\n\t\t\t\t\t\t\t// \t</ul>\r\n\t\t\t\t\t\t\t// </div>\r\n\t\t\t\t\t\t))} */}\r\n\t\t\t{/* </div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className={styles.addWorkflowBtn} onClick={() => toggleModalVisibility()}>\r\n\t\t\t\t\tAdd Workflow\r\n\t\t\t\t</div> */}\r\n\t\t\t{/* <CreateWorkflowModal displayModal={displayModal} toggleModalVisibility={toggleModalVisibility} /> */}\r\n\t\t\t{/* <Link href=\"\" */}\r\n\t\t\t{/* </div> */}\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\n// export async function getStaticProps() {\r\n// \t// const profileImage = 'https://i.imgur.com/0byOhwQ.jpg';\r\n// \t// const profileName = 'Sarthak Kamboj';\r\n// \t// return {\r\n// \t// \tprops: {\r\n// \t// \t\tprofileImage,\r\n// \t// \t\tprofileName\r\n// \t// \t}\r\n// \t// };\r\n// }\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}