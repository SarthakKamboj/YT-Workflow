{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\sign-up.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/sign-up.module.scss';\nimport Link from 'next/link';\nimport classnames from 'classnames';\nimport { useState } from 'react';\n\nconst Joi = require('@hapi/joi');\n\nconst SignUp = () => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: emailInputEmpty,\n    1: setEmailInputEmpty\n  } = useState(true);\n  const {\n    0: passwordInputEmpty,\n    1: setPasswordInputEmpty\n  } = useState(true);\n  const {\n    0: usernameEmpty,\n    1: setUsernameEmpty\n  } = useState(true);\n  const {\n    0: viewPassword,\n    1: setViewPassword\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const minPasswordLength = 2;\n  const signUpSchema = Joi.object({\n    username: Joi.string().required(),\n    email: Joi.string().required().email({\n      minDomainSegments: 2,\n      tlds: {\n        allow: ['com', 'net']\n      }\n    }),\n    password: Joi.string().required().min(minPasswordLength)\n  });\n\n  const updateEmail = input => {\n    setEmail(input);\n    if (input === '') setEmailInputEmpty(true);else setEmailInputEmpty(false);\n  };\n\n  const updatePassword = input => {\n    setPassword(input);\n    if (input === '') setPasswordInputEmpty(true);else setPasswordInputEmpty(false);\n  };\n\n  const updateUsername = input => {\n    setUsername(input);\n    if (input === '') setUsernameEmpty(true);else setUsernameEmpty(false);\n  };\n\n  const checkIfEncodeUriValid = input => {\n    return encodeURI(input) === input;\n  };\n\n  const toCapitalize = input => {\n    return input.slice(0, 1).toUpperCase() + input.slice(1);\n  };\n\n  const submitSignUpInfo = async () => {\n    const usernameUriEncoded = checkIfEncodeUriValid(username.replace(' ', ''));\n    const emailUriEncoded = checkIfEncodeUriValid(email);\n    const passwordUriEncoded = checkIfEncodeUriValid(password);\n    const signUpValidation = signUpSchema.validate({\n      username,\n      email,\n      password\n    });\n\n    if (signUpValidation.error) {\n      const empty = signUpValidation.error.toString().includes('empty');\n      const valid = signUpValidation.error.toString().includes('valid');\n      const tooShort = signUpValidation.error.toString().includes('at least');\n      const errorField = signUpValidation.error.toString().split('\"')[1];\n\n      if (empty) {\n        return setError(toCapitalize(errorField) + ' cannot be empty');\n      } else if (valid) {\n        return setError(toCapitalize(errorField) + ' must be valid');\n      } else if (errorField === 'password' && tooShort) {\n        return setError(toCapitalize(errorField) + ` must be at least ${minPasswordLength} characters long.`);\n      }\n    }\n\n    if (!usernameUriEncoded || !emailUriEncoded || !passwordUriEncoded) {\n      return setError('Login information can only have letters and numbers!');\n    }\n\n    const data = {\n      \"name\": username,\n      'email': email,\n      'password': password\n    };\n    console.log(data);\n    console.log(process.env.SIGN_UP_URL);\n    const signInRequest = await fetch(process.env.SIGN_UP_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: data\n    });\n    console.log(signInRequest);\n    const signInJson = await signInRequest.text();\n    return console.log(signInJson);\n\n    if (signInJson.msg === 'User with this email already exists.') {\n      return setError(signInJson.msg);\n    }\n\n    setError('');\n    return localStorage.setItem('jwt', signInJson.token);\n  };\n\n  const toggleViewPassword = () => {\n    setViewPassword(!viewPassword);\n  };\n\n  return __jsx(\"main\", {\n    className: styles.signUpContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, __jsx(\"section\", {\n    className: styles.textSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: styles.logoImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: \"./images/logo.jpg\",\n    alt: \"Workflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    className: styles.signUpSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }, \"Sign Up to \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 18\n    }\n  }), \" Workflow\"), __jsx(\"div\", {\n    className: styles.googleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 6\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/google_logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"Sign Up with Google\")), __jsx(\"div\", {\n    className: styles.emailSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"Or sign-up with email\"), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames({\n      [styles.label]: true,\n      [styles.usernameLabel]: true,\n      [styles.labelHover]: !usernameEmpty\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Username\"), __jsx(\"input\", {\n    value: username,\n    className: classnames({\n      [styles.errorInput]: error.includes('Username')\n    }),\n    onChange: e => updateUsername(e.target.value),\n    type: \"text\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames({\n      [styles.label]: true,\n      [styles.emailLabel]: true,\n      [styles.labelHover]: !emailInputEmpty\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: classnames({\n      [styles.errorInput]: error.includes('Email')\n    }),\n    value: email,\n    onChange: e => updateEmail(e.target.value),\n    type: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames({\n      [styles.label]: true,\n      [styles.passwordLabel]: true,\n      [styles.labelHover]: !passwordInputEmpty\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    value: password,\n    className: classnames({\n      [styles.errorInput]: error.includes('Password')\n    }),\n    onChange: e => updatePassword(e.target.value),\n    type: viewPassword ? 'text' : 'password',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    src: \"/images/eye.png\",\n    onClick: () => toggleViewPassword(),\n    className: styles.eyeIcon,\n    alt: \"Toggle Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })), __jsx(\"span\", {\n    style: {\n      textAlign: 'center',\n      width: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 8\n    }\n  }, error), __jsx(\"div\", {\n    onClick: () => submitSignUpInfo(),\n    className: styles.submitEmailForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 8\n    }\n  }, \"Create Your Account\")), __jsx(\"p\", {\n    className: styles.legal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, \"By signing up, I agree to the \", __jsx(\"span\", {\n    className: styles.underline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 38\n    }\n  }, \"Privacy Policy\"), \" and\", ' ', __jsx(\"span\", {\n    className: styles.underline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 8\n    }\n  }, \"Terms of Service\"))), __jsx(\"h3\", {\n    className: styles.switchToLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 6\n    }\n  }, \"Already have an account?\", '  ', __jsx(Link, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: styles.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 8\n    }\n  }, \"Log in\")))), __jsx(\"div\", {\n    className: styles.copyright,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, \"\\xA9 2020. All Rights Reserved. Workflow.\")), __jsx(\"section\", {\n    className: styles.slideshowSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/sign-up.js"],"names":["styles","Link","classnames","useState","Joi","require","SignUp","email","setEmail","username","setUsername","password","setPassword","emailInputEmpty","setEmailInputEmpty","passwordInputEmpty","setPasswordInputEmpty","usernameEmpty","setUsernameEmpty","viewPassword","setViewPassword","error","setError","minPasswordLength","signUpSchema","object","string","required","minDomainSegments","tlds","allow","min","updateEmail","input","updatePassword","updateUsername","checkIfEncodeUriValid","encodeURI","toCapitalize","slice","toUpperCase","submitSignUpInfo","usernameUriEncoded","replace","emailUriEncoded","passwordUriEncoded","signUpValidation","validate","empty","toString","includes","valid","tooShort","errorField","split","data","console","log","process","env","SIGN_UP_URL","signInRequest","fetch","method","headers","Accept","body","signInJson","text","msg","localStorage","setItem","token","toggleViewPassword","signUpContainer","textSection","logoImage","signUpSection","googleSignIn","emailSignIn","label","usernameLabel","labelHover","errorInput","e","target","value","emailLabel","passwordLabel","eyeIcon","textAlign","width","submitEmailForm","legal","underline","switchToLogin","loginBtn","copyright","slideshowSection"],"mappings":"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","sourcesContent":["import styles from '../styles/scss/sign-up.module.scss';\r\nimport Link from 'next/link';\r\nimport classnames from 'classnames';\r\nimport { useState } from 'react';\r\nconst Joi = require('@hapi/joi');\r\n\r\nconst SignUp = () => {\r\n\tconst [ email, setEmail ] = useState('');\r\n\tconst [ username, setUsername ] = useState('');\r\n\tconst [ password, setPassword ] = useState('');\r\n\tconst [ emailInputEmpty, setEmailInputEmpty ] = useState(true);\r\n\tconst [ passwordInputEmpty, setPasswordInputEmpty ] = useState(true);\r\n\tconst [ usernameEmpty, setUsernameEmpty ] = useState(true);\r\n\tconst [ viewPassword, setViewPassword ] = useState(false);\r\n\tconst [ error, setError ] = useState('');\r\n\r\n\tconst minPasswordLength = 2;\r\n\r\n\tconst signUpSchema = Joi.object({\r\n\t\tusername: Joi.string().required(),\r\n\t\temail: Joi.string().required().email({ minDomainSegments: 2, tlds: { allow: [ 'com', 'net' ] } }),\r\n\t\tpassword: Joi.string().required().min(minPasswordLength)\r\n\t});\r\n\r\n\tconst updateEmail = (input) => {\r\n\t\tsetEmail(input);\r\n\t\tif (input === '') setEmailInputEmpty(true);\r\n\t\telse setEmailInputEmpty(false);\r\n\t};\r\n\r\n\tconst updatePassword = (input) => {\r\n\t\tsetPassword(input);\r\n\t\tif (input === '') setPasswordInputEmpty(true);\r\n\t\telse setPasswordInputEmpty(false);\r\n\t};\r\n\r\n\tconst updateUsername = (input) => {\r\n\t\tsetUsername(input);\r\n\t\tif (input === '') setUsernameEmpty(true);\r\n\t\telse setUsernameEmpty(false);\r\n\t};\r\n\r\n\tconst checkIfEncodeUriValid = (input) => {\r\n\t\treturn encodeURI(input) === input;\r\n\t};\r\n\r\n\tconst toCapitalize = (input) => {\r\n\t\treturn input.slice(0, 1).toUpperCase() + input.slice(1);\r\n\t};\r\n\r\n\tconst submitSignUpInfo = async () => {\r\n\t\tconst usernameUriEncoded = checkIfEncodeUriValid(username.replace(' ', ''));\r\n\t\tconst emailUriEncoded = checkIfEncodeUriValid(email);\r\n\t\tconst passwordUriEncoded = checkIfEncodeUriValid(password);\r\n\t\tconst signUpValidation = signUpSchema.validate({ username, email, password });\r\n\t\tif (signUpValidation.error) {\r\n\t\t\tconst empty = signUpValidation.error.toString().includes('empty');\r\n\t\t\tconst valid = signUpValidation.error.toString().includes('valid');\r\n\t\t\tconst tooShort = signUpValidation.error.toString().includes('at least');\r\n\t\t\tconst errorField = signUpValidation.error.toString().split('\"')[1];\r\n\t\t\tif (empty) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ' cannot be empty');\r\n\t\t\t} else if (valid) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ' must be valid');\r\n\t\t\t} else if (errorField === 'password' && tooShort) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ` must be at least ${minPasswordLength} characters long.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!usernameUriEncoded || !emailUriEncoded || !passwordUriEncoded) {\r\n\t\t\treturn setError('Login information can only have letters and numbers!');\r\n\t\t}\r\n\t\tconst data = { \"name\": username, 'email': email, 'password': password };\r\n\t\tconsole.log(data);\r\n\t\tconsole.log(process.env.SIGN_UP_URL);\r\n\t\tconst signInRequest = await fetch(process.env.SIGN_UP_URL, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAccept: 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: data\r\n\t\t});\r\n\t\tconsole.log(signInRequest);\r\n\t\tconst signInJson = await signInRequest.text();\r\n\r\n\t\treturn console.log(signInJson);\r\n\t\tif (signInJson.msg === 'User with this email already exists.') {\r\n\t\t\treturn setError(signInJson.msg);\r\n\t\t}\r\n\t\tsetError('');\r\n\t\treturn localStorage.setItem('jwt', signInJson.token);\r\n\t};\r\n\r\n\tconst toggleViewPassword = () => {\r\n\t\tsetViewPassword(!viewPassword);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className={styles.signUpContainer}>\r\n\t\t\t<section className={styles.textSection}>\r\n\t\t\t\t<div className={styles.logoImage}>\r\n\t\t\t\t\t<img src=\"./images/logo.jpg\" alt=\"Workflow\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.signUpSection}>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\tSign Up to <br /> Workflow\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<div className={styles.googleSignIn}>\r\n\t\t\t\t\t\t<img src=\"/images/google_logo.png\" />\r\n\t\t\t\t\t\t<h4>Sign Up with Google</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.emailSignIn}>\r\n\t\t\t\t\t\t<p>Or sign-up with email</p>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.usernameLabel]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !usernameEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUsername\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Username') })}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updateUsername(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.emailLabel]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !emailInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Email') })}\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updateEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.passwordLabel]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !passwordInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Password') })}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updatePassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype={viewPassword ? 'text' : 'password'}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc=\"/images/eye.png\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => toggleViewPassword()}\r\n\t\t\t\t\t\t\t\t\tclassName={styles.eyeIcon}\r\n\t\t\t\t\t\t\t\t\talt=\"Toggle Password\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span style={{ textAlign: 'center', width: '70%' }}>{error}</span>\r\n\t\t\t\t\t\t\t<div onClick={() => submitSignUpInfo()} className={styles.submitEmailForm}>\r\n\t\t\t\t\t\t\t\tCreate Your Account\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<p className={styles.legal}>\r\n\t\t\t\t\t\t\tBy signing up, I agree to the <span className={styles.underline}>Privacy Policy</span> and{' '}\r\n\t\t\t\t\t\t\t<span className={styles.underline}>Terms of Service</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3 className={styles.switchToLogin}>\r\n\t\t\t\t\t\tAlready have an account?{'  '}\r\n\t\t\t\t\t\t<Link href=\"/login\">\r\n\t\t\t\t\t\t\t<span className={styles.loginBtn}>Log in</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.copyright}>&copy; 2020. All Rights Reserved. Workflow.</div>\r\n\t\t\t</section>\r\n\t\t\t<section className={styles.slideshowSection} />\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}