{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\dashboard\\\\statistics.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../../styles/scss/statistics.module.scss';\nimport classnames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setProfileImage } from '../../components/actions/profileImageActions';\nimport { setProfileName } from '../../components/actions/profileNameActions';\nimport DashboardMenu from '../../components/DashboardMenu'; // import Chart from 'chart.js';\n\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport { useRef, useState, useEffect } from 'react';\n\nvar Dashboard = function Dashboard() {\n  _s();\n\n  var jwt = useSelector(function (state) {\n    return state.jwtToken;\n  });\n\n  var _useState = useState(),\n      userFilesBreakdown = _useState[0],\n      setUserFilesBreakdown = _useState[1];\n\n  var _useState2 = useState(),\n      userFilesLabels = _useState2[0],\n      setUserFilesLabels = _useState2[1];\n\n  var _useState3 = useState(),\n      userStarredWorkflows = _useState3[0],\n      setUserStarredWorkflows = _useState3[1];\n\n  var _useState4 = useState(),\n      userStarredLabels = _useState4[0],\n      setUserStarredLabels = _useState4[1];\n\n  var _useState5 = useState(),\n      userFinishedWorkflows = _useState5[0],\n      setUserFinishedWorkflows = _useState5[1];\n\n  var capitalize = function capitalize(str) {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n  };\n\n  var fetchFileBreakdown = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, resJson, info;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:8000/workflows-file-breakdown', {\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: 'Bearer ' + jwt\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n\n              if (!(res.status === 200)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              resJson = _context.sent;\n              info = resJson['msg'];\n              setUserFilesLabels(Object.keys(info).map(function (label) {\n                return capitalize(label);\n              }));\n              setUserFilesBreakdown(Object.values(info));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchFileBreakdown() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchStarredUnfinishedBreakdown = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res, resJson, info;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('http://localhost:8000/workflows-finished-data', {\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: 'Bearer ' + jwt\n                }\n              });\n\n            case 2:\n              res = _context2.sent;\n\n              if (!(res.status === 200)) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 6;\n              return res.json();\n\n            case 6:\n              resJson = _context2.sent;\n              info = resJson['msg'];\n              setUserStarredLabels(Object.keys(info).map(function (label) {\n                return capitalize(label);\n              }));\n              setUserStarredWorkflows(Object.values(info));\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function fetchStarredUnfinishedBreakdown() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchFileBreakdown();\n    fetchStarredUnfinishedBreakdown();\n  }, []);\n\n  var fileBreakdownChart = function fileBreakdownChart(canvas) {\n    // const ctx = canvas.getContext('2d');\n    canvas.style.width = '50%';\n    canvas.style.height = '45%';\n    return {\n      labels: userFilesLabels,\n      datasets: [{\n        // label: 'File Breakdown',\n        data: userFilesBreakdown,\n        backgroundColor: ['#DC1C13', '#EA4C46', '#F07470', '#F1959B'],\n        borderWidth: 2,\n        hoverBorderColor: 'black',\n        borderColor: 'white'\n      }]\n    };\n  };\n\n  var starredBreakdownChart = function starredBreakdownChart(canvas) {\n    // const ctx = canvas.getContext('2d');\n    // canvas.style.width = '50%';\n    // canvas.style.height = '45%';\n    return {\n      labels: userStarredLabels,\n      datasets: [{\n        // label: 'File Breakdown',\n        data: userStarredWorkflows,\n        backgroundColor: ['#DC1C13', '#EA4C46', '#F07470', '#F1959B'],\n        borderWidth: 2,\n        hoverBorderColor: 'black',\n        borderColor: 'white',\n        label: 'Hi'\n      }]\n    };\n  }; // const loadCharts = () => {};\n  // useEffect(\n  // \t() => {\n  // \t\tloadCharts();\n  // \t\treturn () => {\n  // \t\t\tcleanup;\n  // \t\t};\n  // \t},\n  // \t[ input ]\n  // );\n\n\n  var chartOptions = {\n    legend: {\n      position: 'right',\n      labels: {\n        fontSize: 25\n      }\n    }\n  };\n  return __jsx(\"main\", {\n    className: styles.statisticsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.dashboardMenuContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }\n  }, __jsx(DashboardMenu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.statisticsSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }\n  }, __jsx(Doughnut, {\n    data: fileBreakdownChart,\n    responsive: true,\n    options: chartOptions,\n    className: styles.chart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }), __jsx(Doughnut, {\n    data: starredBreakdownChart,\n    responsive: true,\n    options: chartOptions,\n    className: styles.chart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  })));\n};\n\n_s(Dashboard, \"yYvswRz0DTlVm8m3eh6/eesVoY4=\", false, function () {\n  return [useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/dashboard/statistics.js"],"names":["styles","classnames","useSelector","useDispatch","setProfileImage","setProfileName","DashboardMenu","Bar","Line","Pie","Doughnut","useRef","useState","useEffect","Dashboard","jwt","state","jwtToken","userFilesBreakdown","setUserFilesBreakdown","userFilesLabels","setUserFilesLabels","userStarredWorkflows","setUserStarredWorkflows","userStarredLabels","setUserStarredLabels","userFinishedWorkflows","setUserFinishedWorkflows","capitalize","str","slice","toUpperCase","fetchFileBreakdown","fetch","headers","Authorization","res","status","json","resJson","info","Object","keys","map","label","values","fetchStarredUnfinishedBreakdown","fileBreakdownChart","canvas","style","width","height","labels","datasets","data","backgroundColor","borderWidth","hoverBorderColor","borderColor","starredBreakdownChart","chartOptions","legend","position","fontSize","statisticsContainer","dashboardMenuContainer","statisticsSection","chart"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,0CAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,8CAAhC;AACA,SAASC,cAAT,QAA+B,6CAA/B;AACA,OAAOC,aAAP,MAA0B,gCAA1B,C,CACA;;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACvB,MAAMC,GAAG,GAAGb,WAAW,CAAC,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAjB;AAAA,GAAD,CAAvB;;AADuB,kBAE+BL,QAAQ,EAFvC;AAAA,MAEfM,kBAFe;AAAA,MAEKC,qBAFL;;AAAA,mBAGyBP,QAAQ,EAHjC;AAAA,MAGfQ,eAHe;AAAA,MAGEC,kBAHF;;AAAA,mBAKmCT,QAAQ,EAL3C;AAAA,MAKfU,oBALe;AAAA,MAKOC,uBALP;;AAAA,mBAM6BX,QAAQ,EANrC;AAAA,MAMfY,iBANe;AAAA,MAMIC,oBANJ;;AAAA,mBAQqCb,QAAQ,EAR7C;AAAA,MAQfc,qBARe;AAAA,MAQQC,wBARR;;AAUvB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;AAC3B,WAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgBC,WAAhB,KAAgCF,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAvC;AACA,GAFD;;AAIA,MAAME,kBAAkB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACRC,KAAK,CAAC,gDAAD,EAAmD;AACzEC,gBAAAA,OAAO,EAAE;AACR,kCAAgB,kBADR;AAERC,kBAAAA,aAAa,EAAE,YAAYpB;AAFnB;AADgE,eAAnD,CADG;;AAAA;AACpBqB,cAAAA,GADoB;;AAAA,oBAOtBA,GAAG,CAACC,MAAJ,KAAe,GAPO;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQHD,GAAG,CAACE,IAAJ,EARG;;AAAA;AAQnBC,cAAAA,OARmB;AASnBC,cAAAA,IATmB,GASZD,OAAO,CAAC,KAAD,CATK;AAWzBlB,cAAAA,kBAAkB,CAACoB,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,GAAlB,CAAsB,UAACC,KAAD;AAAA,uBAAWhB,UAAU,CAACgB,KAAD,CAArB;AAAA,eAAtB,CAAD,CAAlB;AACAzB,cAAAA,qBAAqB,CAACsB,MAAM,CAACI,MAAP,CAAcL,IAAd,CAAD,CAArB;;AAZyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBR,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AAgBA,MAAMc,+BAA+B;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACrBb,KAAK,CAAC,+CAAD,EAAkD;AACxEC,gBAAAA,OAAO,EAAE;AACR,kCAAgB,kBADR;AAERC,kBAAAA,aAAa,EAAE,YAAYpB;AAFnB;AAD+D,eAAlD,CADgB;;AAAA;AACjCqB,cAAAA,GADiC;;AAAA,oBAOnCA,GAAG,CAACC,MAAJ,KAAe,GAPoB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQhBD,GAAG,CAACE,IAAJ,EARgB;;AAAA;AAQhCC,cAAAA,OARgC;AAShCC,cAAAA,IATgC,GASzBD,OAAO,CAAC,KAAD,CATkB;AAWtCd,cAAAA,oBAAoB,CAACgB,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,GAAlB,CAAsB,UAACC,KAAD;AAAA,uBAAWhB,UAAU,CAACgB,KAAD,CAArB;AAAA,eAAtB,CAAD,CAApB;AACArB,cAAAA,uBAAuB,CAACkB,MAAM,CAACI,MAAP,CAAcL,IAAd,CAAD,CAAvB;;AAZsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAA/BM,+BAA+B;AAAA;AAAA;AAAA,KAArC;;AAgBAjC,EAAAA,SAAS,CAAC,YAAM;AACfmB,IAAAA,kBAAkB;AAClBc,IAAAA,+BAA+B;AAC/B,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD,EAAY;AACtC;AACAA,IAAAA,MAAM,CAACC,KAAP,CAAaC,KAAb,GAAqB,KAArB;AACAF,IAAAA,MAAM,CAACC,KAAP,CAAaE,MAAb,GAAsB,KAAtB;AACA,WAAO;AACNC,MAAAA,MAAM,EAAEhC,eADF;AAENiC,MAAAA,QAAQ,EAAE,CACT;AACC;AACAC,QAAAA,IAAI,EAAEpC,kBAFP;AAGCqC,QAAAA,eAAe,EAAE,CAAE,SAAF,EAAa,SAAb,EAAwB,SAAxB,EAAmC,SAAnC,CAHlB;AAICC,QAAAA,WAAW,EAAE,CAJd;AAKCC,QAAAA,gBAAgB,EAAE,OALnB;AAMCC,QAAAA,WAAW,EAAE;AANd,OADS;AAFJ,KAAP;AAaA,GAjBD;;AAmBA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACX,MAAD,EAAY;AACzC;AACA;AACA;AACA,WAAO;AACNI,MAAAA,MAAM,EAAE5B,iBADF;AAEN6B,MAAAA,QAAQ,EAAE,CACT;AACC;AACAC,QAAAA,IAAI,EAAEhC,oBAFP;AAGCiC,QAAAA,eAAe,EAAE,CAAE,SAAF,EAAa,SAAb,EAAwB,SAAxB,EAAmC,SAAnC,CAHlB;AAICC,QAAAA,WAAW,EAAE,CAJd;AAKCC,QAAAA,gBAAgB,EAAE,OALnB;AAMCC,QAAAA,WAAW,EAAE,OANd;AAOCd,QAAAA,KAAK,EAAE;AAPR,OADS;AAFJ,KAAP;AAcA,GAlBD,CAtEuB,CA0FvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMgB,YAAY,GAAG;AACpBC,IAAAA,MAAM,EAAE;AACPC,MAAAA,QAAQ,EAAE,OADH;AAEPV,MAAAA,MAAM,EAAE;AACPW,QAAAA,QAAQ,EAAE;AADH;AAFD;AADY,GAArB;AASA,SACC;AAAM,IAAA,SAAS,EAAE/D,MAAM,CAACgE,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAEhE,MAAM,CAACiE,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,EAIC;AAAK,IAAA,SAAS,EAAEjE,MAAM,CAACkE,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEnB,kBAAhB;AAAoC,IAAA,UAAU,EAAE,IAAhD;AAAsD,IAAA,OAAO,EAAEa,YAA/D;AAA6E,IAAA,SAAS,EAAE5D,MAAM,CAACmE,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,QAAD;AACC,IAAA,IAAI,EAAER,qBADP;AAEC,IAAA,UAAU,EAAE,IAFb;AAGC,IAAA,OAAO,EAAEC,YAHV;AAIC,IAAA,SAAS,EAAE5D,MAAM,CAACmE,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAJD,CADD;AAgBA,CA/HD;;GAAMrD,S;UACOZ,W;;;KADPY,S;AAiIN,eAAeA,SAAf","sourcesContent":["import styles from '../../styles/scss/statistics.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setProfileImage } from '../../components/actions/profileImageActions';\r\nimport { setProfileName } from '../../components/actions/profileNameActions';\r\nimport DashboardMenu from '../../components/DashboardMenu';\r\n// import Chart from 'chart.js';\r\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { useRef, useState, useEffect } from 'react';\r\n\r\nconst Dashboard = () => {\r\n\tconst jwt = useSelector((state) => state.jwtToken);\r\n\tconst [ userFilesBreakdown, setUserFilesBreakdown ] = useState();\r\n\tconst [ userFilesLabels, setUserFilesLabels ] = useState();\r\n\r\n\tconst [ userStarredWorkflows, setUserStarredWorkflows ] = useState();\r\n\tconst [ userStarredLabels, setUserStarredLabels ] = useState();\r\n\r\n\tconst [ userFinishedWorkflows, setUserFinishedWorkflows ] = useState();\r\n\r\n\tconst capitalize = (str) => {\r\n\t\treturn str.slice(0, 1).toUpperCase() + str.slice(1);\r\n\t};\r\n\r\n\tconst fetchFileBreakdown = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-file-breakdown', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserFilesLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserFilesBreakdown(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchStarredUnfinishedBreakdown = async () => {\r\n\t\tconst res = await fetch('http://localhost:8000/workflows-finished-data', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer ' + jwt\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst resJson = await res.json();\r\n\t\t\tconst info = resJson['msg'];\r\n\r\n\t\t\tsetUserStarredLabels(Object.keys(info).map((label) => capitalize(label)));\r\n\t\t\tsetUserStarredWorkflows(Object.values(info));\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchFileBreakdown();\r\n\t\tfetchStarredUnfinishedBreakdown();\r\n\t}, []);\r\n\r\n\tconst fileBreakdownChart = (canvas) => {\r\n\t\t// const ctx = canvas.getContext('2d');\r\n\t\tcanvas.style.width = '50%';\r\n\t\tcanvas.style.height = '45%';\r\n\t\treturn {\r\n\t\t\tlabels: userFilesLabels,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\t// label: 'File Breakdown',\r\n\t\t\t\t\tdata: userFilesBreakdown,\r\n\t\t\t\t\tbackgroundColor: [ '#DC1C13', '#EA4C46', '#F07470', '#F1959B' ],\r\n\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\thoverBorderColor: 'black',\r\n\t\t\t\t\tborderColor: 'white'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t};\r\n\r\n\tconst starredBreakdownChart = (canvas) => {\r\n\t\t// const ctx = canvas.getContext('2d');\r\n\t\t// canvas.style.width = '50%';\r\n\t\t// canvas.style.height = '45%';\r\n\t\treturn {\r\n\t\t\tlabels: userStarredLabels,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\t// label: 'File Breakdown',\r\n\t\t\t\t\tdata: userStarredWorkflows,\r\n\t\t\t\t\tbackgroundColor: [ '#DC1C13', '#EA4C46', '#F07470', '#F1959B' ],\r\n\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\thoverBorderColor: 'black',\r\n\t\t\t\t\tborderColor: 'white',\r\n\t\t\t\t\tlabel: 'Hi'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t};\r\n\r\n\t// const loadCharts = () => {};\r\n\r\n\t// useEffect(\r\n\t// \t() => {\r\n\t// \t\tloadCharts();\r\n\t// \t\treturn () => {\r\n\t// \t\t\tcleanup;\r\n\t// \t\t};\r\n\t// \t},\r\n\t// \t[ input ]\r\n\t// );\r\n\r\n\tconst chartOptions = {\r\n\t\tlegend: {\r\n\t\t\tposition: 'right',\r\n\t\t\tlabels: {\r\n\t\t\t\tfontSize: 25\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className={styles.statisticsContainer}>\r\n\t\t\t<div className={styles.dashboardMenuContainer}>\r\n\t\t\t\t<DashboardMenu />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.statisticsSection}>\r\n\t\t\t\t<Doughnut data={fileBreakdownChart} responsive={true} options={chartOptions} className={styles.chart} />\r\n\t\t\t\t<Doughnut\r\n\t\t\t\t\tdata={starredBreakdownChart}\r\n\t\t\t\t\tresponsive={true}\r\n\t\t\t\t\toptions={chartOptions}\r\n\t\t\t\t\tclassName={styles.chart}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}