{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowDescription.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/workflow-description.module.scss';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst WorkflowDescription = ({\n  id\n}) => {\n  const {\n    0: description,\n    1: setDescription\n  } = useState(null);\n  const jwtToken = useSelector(state => state.jwtToken);\n  const {\n    0: fetched,\n    1: setFetched\n  } = useState(false); // const updateDescription = (e) => {\n  // \tsetDescription(e.target.value);\n  // };\n\n  useEffect(() => {\n    // if (!fetched) {\n    async function fetchData() {\n      const descRes = await fetch(`http://127.0.0.1:8000/get-workflow-description/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${jwtToken}`\n        }\n      });\n      const descJson = await descRes.json();\n      console.log(descJson['description']);\n      setDescription(descJson['description']);\n    }\n\n    fetchData();\n    setFetched(true); // }\n    // .then((res) => res.json())\n    // .then((res) => {\n    // \tconsole.log(res.description);\n    // \tsetDescription(res.description);\n    // })\n    // .catch((err) => console.log(err));\n  }, [description]);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.descriptionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, \"Description\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }), __jsx(\"textarea\", {\n    name: \"description\",\n    className: styles.description,\n    defaultValue: description ? description : 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default WorkflowDescription;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowDescription.js"],"names":["styles","useState","useEffect","useSelector","WorkflowDescription","id","description","setDescription","jwtToken","state","fetched","setFetched","fetchData","descRes","fetch","headers","Authorization","descJson","json","console","log","descriptionTitle"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iDAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AACvC,QAAM;AAAA,OAAEC,WAAF;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAMO,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM;AAAA,OAAEE,OAAF;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAC,KAAD,CAAxC,CAHuC,CAIvC;AACA;AACA;;AACAC,EAAAA,SAAS,CACR,MAAM;AACL;AACA,mBAAeU,SAAf,GAA2B;AAC1B,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,kDAAiDT,EAAG,EAAtD,EAAyD;AACnFU,QAAAA,OAAO,EAAE;AACR,0BAAgB,kBADR;AAERC,UAAAA,aAAa,EAAG,UAASR,QAAS;AAF1B;AAD0E,OAAzD,CAA3B;AAMA,YAAMS,QAAQ,GAAG,MAAMJ,OAAO,CAACK,IAAR,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAAC,aAAD,CAApB;AACAV,MAAAA,cAAc,CAACU,QAAQ,CAAC,aAAD,CAAT,CAAd;AACA;;AACDL,IAAAA,SAAS;AACTD,IAAAA,UAAU,CAAC,IAAD,CAAV,CAdK,CAeL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAvBO,EAwBR,CAAEL,WAAF,CAxBQ,CAAT;AA0BA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAEN,MAAM,CAACqB,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AACC,IAAA,IAAI,EAAC,aADN;AAEC,IAAA,SAAS,EAAErB,MAAM,CAACM,WAFnB;AAGC,IAAA,YAAY,EAAEA,WAAW,GAAGA,WAAH,GAAiB,MAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADD;AAWA,CA5CD;;AA8CA,eAAeF,mBAAf","sourcesContent":["import styles from '../styles/scss/workflow-description.module.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WorkflowDescription = ({ id }) => {\r\n\tconst [ description, setDescription ] = useState(null);\r\n\tconst jwtToken = useSelector((state) => state.jwtToken);\r\n\tconst [ fetched, setFetched ] = useState(false);\r\n\t// const updateDescription = (e) => {\r\n\t// \tsetDescription(e.target.value);\r\n\t// };\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t// if (!fetched) {\r\n\t\t\tasync function fetchData() {\r\n\t\t\t\tconst descRes = await fetch(`http://127.0.0.1:8000/get-workflow-description/${id}`, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\tAuthorization: `Bearer ${jwtToken}`\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconst descJson = await descRes.json();\r\n\t\t\t\tconsole.log(descJson['description']);\r\n\t\t\t\tsetDescription(descJson['description']);\r\n\t\t\t}\r\n\t\t\tfetchData();\r\n\t\t\tsetFetched(true);\r\n\t\t\t// }\r\n\t\t\t// .then((res) => res.json())\r\n\t\t\t// .then((res) => {\r\n\t\t\t// \tconsole.log(res.description);\r\n\t\t\t// \tsetDescription(res.description);\r\n\t\t\t// })\r\n\t\t\t// .catch((err) => console.log(err));\r\n\t\t},\r\n\t\t[ description ]\r\n\t);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2 className={styles.descriptionTitle}>Description</h2>\r\n\t\t\t<br />\r\n\t\t\t<textarea\r\n\t\t\t\tname=\"description\"\r\n\t\t\t\tclassName={styles.description}\r\n\t\t\t\tdefaultValue={description ? description : 'none'}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default WorkflowDescription;\r\n"]},"metadata":{},"sourceType":"module"}