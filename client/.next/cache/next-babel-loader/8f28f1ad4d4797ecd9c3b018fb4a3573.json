{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\components\\\\WorkflowItem.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/workflow-item.module.scss';\nimport { useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useState, useRef } from 'react';\nimport classnames from 'classnames';\n\nconst WorkflowItem = ({\n  workflow\n}) => {\n  // const [ workflowContainerGripped, setWorkflowContainerGripped ] = useState(false);\n  // const workflowContainer = useRef();\n  const capitalize = txt => {\n    return txt.slice(0, 1).toUpperCase() + txt.slice(1);\n  };\n\n  const profileImage = useSelector(state => state.profileImage); // const scaleElement = (e) => {\n  // \te.target.style.transform = 'scale(1.02)';\n  // \te.target.style.opacity = '1';\n  // };\n  // const dragStart = (e) => {\n  // \tconst target = e.target;\n  // \t// e.dataTransfer\n  // \tsetTimeout(() => {\n  // \t\ttarget.style.display = 'none';\n  // \t}, 0);\n  // };\n  // const dragOver = (e) => {\n  // \te.stopPropagation();\n  // };\n  // const mountDraggable = (e) => {\n  // \tsetWorkflowContainerGripped(true);\n  // };\n  // const unmountDraggle = (e) => {\n  // \tsetWorkflowContainerGripped(false);\n  // };\n\n  return __jsx(\"div\", {\n    className: classnames({\n      [styles.workflowContainer]: true\n    }) // draggable=\"true\"\n    // onDragStart={(e) => dragStart(e)}\n    // onDragOver={(e) => dragOver(e)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.workflowTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, workflow.title), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, workflow.description.slice(0, 30)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: styles.workflowUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: profileImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  })), __jsx(\"div\", {\n    className: styles.workflowExtraInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: styles.workflowCreated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, workflow.created_at), __jsx(\"div\", {\n    className: styles.workflowStatusIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, __jsx(FontAwesomeIcon, {\n    className: classnames({\n      [styles.starred]: workflow.starred\n    }),\n    icon: \"star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), __jsx(FontAwesomeIcon, {\n    className: classnames({\n      [styles.finished]: workflow.finished\n    }),\n    icon: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  })))));\n};\n\nexport default WorkflowItem;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/components/WorkflowItem.js"],"names":["styles","useSelector","FontAwesomeIcon","useState","useRef","classnames","WorkflowItem","workflow","capitalize","txt","slice","toUpperCase","profileImage","state","workflowContainer","workflowTitle","title","description","workflowUsers","workflowExtraInfo","workflowCreated","created_at","workflowStatusIcons","starred","finished"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0CAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtC;AAEA;AAEA,QAAMC,UAAU,GAAIC,GAAD,IAAS;AAC3B,WAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgBC,WAAhB,KAAgCF,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAvC;AACA,GAFD;;AAIA,QAAME,YAAY,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC,CATsC,CAWtC;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,SACC;AACC,IAAA,SAAS,EAAEP,UAAU,CAAC;AAAE,OAACL,MAAM,CAACc,iBAAR,GAA4B;AAA9B,KAAD,CADtB,CAEC;AACA;AACA;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMC;AAAI,IAAA,SAAS,EAAEd,MAAM,CAACe,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCR,QAAQ,CAACS,KAA/C,CAND,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,QAAQ,CAACU,WAAT,CAAqBP,KAArB,CAA2B,CAA3B,EAA8B,EAA9B,CAAL,CAPD,EAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACkB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,GAAG,EAAEN,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,EAIC;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACmB,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAEnB,MAAM,CAACoB,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCb,QAAQ,CAACc,UAAjD,CADD,EAEC;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACsB,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAEjB,UAAU,CAAC;AAAE,OAACL,MAAM,CAACuB,OAAR,GAAkBhB,QAAQ,CAACgB;AAA7B,KAAD,CAAtC;AAAgF,IAAA,IAAI,EAAC,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,eAAD;AACC,IAAA,SAAS,EAAElB,UAAU,CAAC;AAAE,OAACL,MAAM,CAACwB,QAAR,GAAmBjB,QAAQ,CAACiB;AAA9B,KAAD,CADtB;AAEC,IAAA,IAAI,EAAC,OAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAFD,CAJD,CAXD,CADD;AAmCA,CAzED;;AA2EA,eAAelB,YAAf","sourcesContent":["import styles from '../styles/scss/workflow-item.module.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useState, useRef } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst WorkflowItem = ({ workflow }) => {\r\n\t// const [ workflowContainerGripped, setWorkflowContainerGripped ] = useState(false);\r\n\r\n\t// const workflowContainer = useRef();\r\n\r\n\tconst capitalize = (txt) => {\r\n\t\treturn txt.slice(0, 1).toUpperCase() + txt.slice(1);\r\n\t};\r\n\r\n\tconst profileImage = useSelector((state) => state.profileImage);\r\n\r\n\t// const scaleElement = (e) => {\r\n\t// \te.target.style.transform = 'scale(1.02)';\r\n\t// \te.target.style.opacity = '1';\r\n\t// };\r\n\r\n\t// const dragStart = (e) => {\r\n\t// \tconst target = e.target;\r\n\r\n\t// \t// e.dataTransfer\r\n\r\n\t// \tsetTimeout(() => {\r\n\t// \t\ttarget.style.display = 'none';\r\n\t// \t}, 0);\r\n\t// };\r\n\r\n\t// const dragOver = (e) => {\r\n\t// \te.stopPropagation();\r\n\t// };\r\n\r\n\t// const mountDraggable = (e) => {\r\n\t// \tsetWorkflowContainerGripped(true);\r\n\t// };\r\n\r\n\t// const unmountDraggle = (e) => {\r\n\t// \tsetWorkflowContainerGripped(false);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classnames({ [styles.workflowContainer]: true })}\r\n\t\t\t// draggable=\"true\"\r\n\t\t\t// onDragStart={(e) => dragStart(e)}\r\n\t\t\t// onDragOver={(e) => dragOver(e)}\r\n\t\t>\r\n\t\t\t<h2 className={styles.workflowTitle}>{workflow.title}</h2>\r\n\t\t\t<h4>{workflow.description.slice(0, 30)}</h4>\r\n\t\t\t{/* <ul className={styles.workflowKeywords}>\r\n\t\t\t\t{workflow.keywords.map((keyword) => <li key={keyword}>{capitalize(keyword)}</li>)}\r\n\t\t\t</ul> */}\r\n\t\t\t<div>\r\n\t\t\t\t<div className={styles.workflowUsers}>\r\n\t\t\t\t\t<img src={profileImage} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.workflowExtraInfo}>\r\n\t\t\t\t\t<h3 className={styles.workflowCreated}>{workflow.created_at}</h3>\r\n\t\t\t\t\t<div className={styles.workflowStatusIcons}>\r\n\t\t\t\t\t\t<FontAwesomeIcon className={classnames({ [styles.starred]: workflow.starred })} icon=\"star\" />\r\n\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\tclassName={classnames({ [styles.finished]: workflow.finished })}\r\n\t\t\t\t\t\t\ticon=\"check\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* <FontAwesomeIcon\r\n\t\t\t\t\t\ticon=\"grip-vertical\"\r\n\t\t\t\t\t\tclassName={styles.grip}\r\n\t\t\t\t\t\t// onMouseDown={(e) => mountDraggable(e)}\r\n\t\t\t\t\t\t// onMouseUp={(e) => unmountDraggle(e)}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WorkflowItem;\r\n"]},"metadata":{},"sourceType":"module"}