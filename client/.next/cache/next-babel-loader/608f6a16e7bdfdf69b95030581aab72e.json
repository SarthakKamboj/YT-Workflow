{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\workflow\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { useDispatch } from 'react-redux';\n// import { jwt } from '../../components/JWT';\nimport Router from 'next/router';\nimport { useState, useEffect } from 'react'; // const dispatch = useDispatch();\n\nconst Workflow = () => {\n  console.log(Router.pathname);\n  const {\n    0: fileUrls,\n    1: setFileUrls\n  } = useState([]);\n  const id = Router.query.id;\n  useEffect(() => {\n    fetch(`http://127.0.0.1:8000/get-workflow-files/${id}`).then(res => res.json()).then(filesJson => setFileUrls(filesJson['workflow-file-urls'])).catch(err => console.log(err));\n  }, []); // console.log('hi');\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"fileUrls\");\n};\n\nexport async function getStaticProps({\n  params\n}) {\n  console.log('props');\n  return {\n    props: {\n      id: params.id\n    }\n  };\n}\nexport async function getStaticPaths() {\n  // const workflowIds = localStorage.getItem('workflowIds');\n  // const jwt = localStorage.getItem('jwt');\n  const jwt = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTkyMzMyOTI1LCJqdGkiOiIyNzhiMjAyMTQyNTY0MWIxYTc5NjJmNGE4NzI2ZjcwNSIsInVzZXJfaWQiOjQ1fQ.rGAuQaDnBaueRKcE6ZE4t7Ym4Y-HbHqFYn-k-iWr1-0'; // console.log(jwtToken);\n\n  console.log(jwt);\n  const workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${jwt}`\n    }\n  });\n  const workflowIdsJson = await workflowIdsResponse.json();\n  console.log(workflowIdsJson);\n  const workflowIdsArray = await workflowIdsJson['workflow-ids'];\n  console.log(workflowIdsArray);\n  const paths = workflowIdsArray.map(workflowId => {\n    return {\n      params: {\n        id: workflowId.toString()\n      }\n    };\n  });\n  console.log(paths);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default Workflow;","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/workflow/[id].js"],"names":["Router","useState","useEffect","Workflow","console","log","pathname","fileUrls","setFileUrls","id","query","fetch","then","res","json","filesJson","catch","err","getStaticProps","params","props","getStaticPaths","jwt","workflowIdsResponse","headers","Authorization","workflowIdsJson","workflowIdsArray","paths","map","workflowId","toString","fallback"],"mappings":";;;AAAA;AACA;AACA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,QAAnB;AAEA,QAAM;AAAA,OAAEC,QAAF;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMQ,EAAE,GAAGT,MAAM,CAACU,KAAP,CAAaD,EAAxB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACfS,IAAAA,KAAK,CAAE,4CAA2CF,EAAG,EAAhD,CAAL,CACEG,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAEQG,SAAD,IAAeP,WAAW,CAACO,SAAS,CAAC,oBAAD,CAAV,CAFjC,EAGEC,KAHF,CAGSC,GAAD,IAASb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAHjB;AAIA,GALQ,EAKN,EALM,CAAT,CANsB,CAatB;;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,CAfD;;AAiBA,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAChDf,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAO;AACNe,IAAAA,KAAK,EAAE;AACNX,MAAAA,EAAE,EAAEU,MAAM,CAACV;AADL;AADD,GAAP;AAKA;AAED,OAAO,eAAeY,cAAf,GAAgC;AACtC;AACA;AACA,QAAMC,GAAG,GACR,iNADD,CAHsC,CAI8K;;AACpNlB,EAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACA,QAAMC,mBAAmB,GAAG,MAAMZ,KAAK,CAAC,wCAAD,EAA2C;AACjFa,IAAAA,OAAO,EAAE;AACR,sBAAgB,kBADR;AAERC,MAAAA,aAAa,EAAG,UAASH,GAAI;AAFrB;AADwE,GAA3C,CAAvC;AAMA,QAAMI,eAAe,GAAG,MAAMH,mBAAmB,CAACT,IAApB,EAA9B;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYqB,eAAZ;AACA,QAAMC,gBAAgB,GAAG,MAAMD,eAAe,CAAC,cAAD,CAA9C;AACAtB,EAAAA,OAAO,CAACC,GAAR,CAAYsB,gBAAZ;AACA,QAAMC,KAAK,GAAGD,gBAAgB,CAACE,GAAjB,CAAsBC,UAAD,IAAgB;AAClD,WAAO;AACNX,MAAAA,MAAM,EAAE;AACPV,QAAAA,EAAE,EAAEqB,UAAU,CAACC,QAAX;AADG;AADF,KAAP;AAKA,GANa,CAAd;AAOA3B,EAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACA,SAAO;AACNA,IAAAA,KADM;AAENI,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA;AAED,eAAe7B,QAAf","sourcesContent":["// import { useDispatch } from 'react-redux';\r\n// import { jwt } from '../../components/JWT';\r\nimport Router from 'next/router';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// const dispatch = useDispatch();\r\n\r\nconst Workflow = () => {\r\n\tconsole.log(Router.pathname);\r\n\r\n\tconst [ fileUrls, setFileUrls ] = useState([]);\r\n\tconst id = Router.query.id;\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`http://127.0.0.1:8000/get-workflow-files/${id}`)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((filesJson) => setFileUrls(filesJson['workflow-file-urls']))\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}, []);\r\n\r\n\t// console.log('hi');\r\n\treturn <div>fileUrls</div>;\r\n};\r\n\r\nexport async function getStaticProps({ params }) {\r\n\tconsole.log('props');\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tid: params.id\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\t// const workflowIds = localStorage.getItem('workflowIds');\r\n\t// const jwt = localStorage.getItem('jwt');\r\n\tconst jwt =\r\n\t\t'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNTkyMzMyOTI1LCJqdGkiOiIyNzhiMjAyMTQyNTY0MWIxYTc5NjJmNGE4NzI2ZjcwNSIsInVzZXJfaWQiOjQ1fQ.rGAuQaDnBaueRKcE6ZE4t7Ym4Y-HbHqFYn-k-iWr1-0'; // console.log(jwtToken);\r\n\tconsole.log(jwt);\r\n\tconst workflowIdsResponse = await fetch('http://localhost:8000/get-workflow-ids', {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${jwt}`\r\n\t\t}\r\n\t});\r\n\tconst workflowIdsJson = await workflowIdsResponse.json();\r\n\tconsole.log(workflowIdsJson);\r\n\tconst workflowIdsArray = await workflowIdsJson['workflow-ids'];\r\n\tconsole.log(workflowIdsArray);\r\n\tconst paths = workflowIdsArray.map((workflowId) => {\r\n\t\treturn {\r\n\t\t\tparams: {\r\n\t\t\t\tid: workflowId.toString()\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\tconsole.log(paths);\r\n\treturn {\r\n\t\tpaths,\r\n\t\tfallback: false\r\n\t};\r\n}\r\n\r\nexport default Workflow;\r\n"]},"metadata":{},"sourceType":"module"}