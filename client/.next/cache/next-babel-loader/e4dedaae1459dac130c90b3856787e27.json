{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\YT_Workflow_Cloud\\\\client\\\\pages\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/scss/sign-in.module.scss';\nimport classnames from 'classnames';\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { setJwt } from '../components/actions/jwtAction';\nimport { useDispatch } from 'react-redux';\n\nvar Joi = require('@hapi/joi');\n\nvar Login = function Login() {\n  _s();\n\n  var _classnames, _classnames3;\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      viewPassword = _useState3[0],\n      setViewPassword = _useState3[1];\n\n  var _useState4 = useState(true),\n      emailInputEmpty = _useState4[0],\n      setEmailInputEmpty = _useState4[1];\n\n  var _useState5 = useState(true),\n      passwordInputEmpty = _useState5[0],\n      setPasswordInputEmpty = _useState5[1];\n\n  var _useState6 = useState(''),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var minPasswordLength = 2;\n  var signUpSchema = Joi.object({\n    email: Joi.string().required().email({\n      minDomainSegments: 2,\n      tlds: {\n        allow: ['com', 'net']\n      }\n    }),\n    password: Joi.string().required().min(minPasswordLength)\n  });\n\n  var updateEmail = function updateEmail(input) {\n    setEmail(input);\n    if (input === '') setEmailInputEmpty(true);else setEmailInputEmpty(false);\n  };\n\n  var updatePassword = function updatePassword(input) {\n    setPassword(input);\n    if (input === '') setPasswordInputEmpty(true);else setPasswordInputEmpty(false);\n  };\n\n  var checkIfEncodeUriValid = function checkIfEncodeUriValid(input) {\n    return encodeURI(input) === input;\n  };\n\n  var toCapitalize = function toCapitalize(input) {\n    return input.slice(0, 1).toUpperCase() + input.slice(1);\n  };\n\n  var loginInformation = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var emailUriEncoded, passwordUriEncoded, signUpValidation, empty, valid, tooShort, errorField, data, dataString, logInRequest, loginJson, accessJwtToken, refreshJwtToken;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('all logged in');\n              emailUriEncoded = checkIfEncodeUriValid(email);\n              passwordUriEncoded = checkIfEncodeUriValid(password);\n              signUpValidation = signUpSchema.validate({\n                email: email,\n                password: password\n              });\n\n              if (!signUpValidation.error) {\n                _context.next = 19;\n                break;\n              }\n\n              empty = signUpValidation.error.toString().includes('empty');\n              valid = signUpValidation.error.toString().includes('valid');\n              tooShort = signUpValidation.error.toString().includes('at least');\n              errorField = signUpValidation.error.toString().split('\"')[1];\n\n              if (!empty) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setError(toCapitalize(errorField) + ' cannot be empty'));\n\n            case 13:\n              if (!valid) {\n                _context.next = 17;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setError(toCapitalize(errorField) + ' must be valid'));\n\n            case 17:\n              if (!(errorField === 'password' && tooShort)) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setError(toCapitalize(errorField) + \" must be at least \".concat(minPasswordLength, \" characters long.\")));\n\n            case 19:\n              if (!(!emailUriEncoded || !passwordUriEncoded)) {\n                _context.next = 21;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setError('Login information can only have letters and numbers!'));\n\n            case 21:\n              // console.log(username, email, password);\n              data = {\n                email: email,\n                password: password\n              };\n              dataString = JSON.stringify(data);\n              _context.prev = 23;\n              _context.next = 26;\n              return fetch(process.env.LOGIN_URL, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: dataString\n              });\n\n            case 26:\n              logInRequest = _context.sent;\n              _context.next = 29;\n              return logInRequest.json();\n\n            case 29:\n              loginJson = _context.sent;\n\n              if (!(loginJson.msg === 'Account login was unsuccessful. Please try again.')) {\n                _context.next = 33;\n                break;\n              }\n\n              setError(loginJson.msg);\n              return _context.abrupt(\"return\");\n\n            case 33:\n              console.log(loginJson);\n              setError('');\n              accessJwtToken = loginJson.access;\n              refreshJwtToken = loginJson.refresh;\n              localStorage.setItem('refresh-token', refreshJwtToken);\n              console.log(setJwt(accessJwtToken));\n              dispatch(setJwt(accessJwtToken));\n              return _context.abrupt(\"return\", Router.push('/dashboard/home'));\n\n            case 43:\n              _context.prev = 43;\n              _context.t0 = _context[\"catch\"](23);\n              console.log(_context.t0);\n\n            case 46:\n              return _context.abrupt(\"return\");\n\n            case 47:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[23, 43]]);\n    }));\n\n    return function loginInformation() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var toggleViewPassword = function toggleViewPassword() {\n    setViewPassword(!viewPassword);\n  };\n\n  return __jsx(\"main\", {\n    className: styles.loginContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.images,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/cartoon-youtube.png\",\n    alt: \"Youtube Workflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: styles.loginTxt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    className: styles.logoImg,\n    src: \"/images/logo.jpg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, \"Welcome Back!\"), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, \"To keep putting out more of your amazing videos, please login in with your email address and password below.\"), __jsx(\"div\", {\n    className: styles.signInSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.googleSignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 6\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/google_logo.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, \"Sign In with Google\")), __jsx(\"div\", {\n    className: styles.emailSignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, \"Or sign-in with email\"), __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames((_classnames = {}, _defineProperty(_classnames, styles.label, true), _defineProperty(_classnames, styles.labelHover, !emailInputEmpty), _classnames)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"Email\"), console.log(error), __jsx(\"input\", {\n    className: classnames(_defineProperty({}, styles.errorInput, error.includes('Email'))),\n    value: email,\n    onChange: function onChange(e) {\n      return updateEmail(e.target.value);\n    },\n    type: \"email\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 8\n    }\n  }, __jsx(\"h4\", {\n    className: classnames((_classnames3 = {}, _defineProperty(_classnames3, styles.label, true), _defineProperty(_classnames3, styles.labelHover, !passwordInputEmpty), _classnames3)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: classnames(_defineProperty({}, styles.errorInput, error.includes('Password'))),\n    value: password,\n    onChange: function onChange(e) {\n      return updatePassword(e.target.value);\n    },\n    type: viewPassword ? 'text' : 'password',\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    src: \"/images/eye.png\",\n    onClick: function onClick() {\n      return toggleViewPassword();\n    },\n    alt: \"Toggle Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  })), __jsx(\"span\", {\n    className: styles.loginError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 8\n    }\n  }, error), __jsx(\"div\", {\n    className: styles.submitEmailForm,\n    onClick: function onClick() {\n      return loginInformation();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 8\n    }\n  }, \"Sign In\"))), __jsx(\"h3\", {\n    className: styles.switchToSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 6\n    }\n  }, \"Don't have an account?\", '  ', __jsx(Link, {\n    href: \"/signUp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: styles.signUpBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 8\n    }\n  }, \"Sign Up\"))))));\n};\n\n_s(Login, \"YyKb2seT9B0ZiNZLBrp/aTTRpE4=\", false, function () {\n  return [useRouter, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Sarthak/YT_Workflow_Cloud/client/pages/login.js"],"names":["styles","classnames","useState","Link","useRouter","setJwt","useDispatch","Joi","require","Login","router","dispatch","email","setEmail","password","setPassword","viewPassword","setViewPassword","emailInputEmpty","setEmailInputEmpty","passwordInputEmpty","setPasswordInputEmpty","error","setError","minPasswordLength","signUpSchema","object","string","required","minDomainSegments","tlds","allow","min","updateEmail","input","updatePassword","checkIfEncodeUriValid","encodeURI","toCapitalize","slice","toUpperCase","loginInformation","console","log","emailUriEncoded","passwordUriEncoded","signUpValidation","validate","empty","toString","includes","valid","tooShort","errorField","split","data","dataString","JSON","stringify","fetch","process","env","LOGIN_URL","method","headers","body","logInRequest","json","loginJson","msg","accessJwtToken","access","refreshJwtToken","refresh","localStorage","setItem","Router","push","toggleViewPassword","loginContainer","images","loginTxt","logoImg","signInSection","googleSignIn","emailSignIn","label","labelHover","errorInput","e","target","value","loginError","submitEmailForm","switchToSignUp","signUpBtn"],"mappings":"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","sourcesContent":["import styles from '../styles/scss/sign-in.module.scss';\r\nimport classnames from 'classnames';\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport { setJwt } from '../components/actions/jwtAction';\r\nimport { useDispatch } from 'react-redux';\r\nconst Joi = require('@hapi/joi');\r\n\r\nconst Login = () => {\r\n\tconst router = useRouter();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [ email, setEmail ] = useState('');\r\n\tconst [ password, setPassword ] = useState('');\r\n\tconst [ viewPassword, setViewPassword ] = useState(false);\r\n\tconst [ emailInputEmpty, setEmailInputEmpty ] = useState(true);\r\n\tconst [ passwordInputEmpty, setPasswordInputEmpty ] = useState(true);\r\n\tconst [ error, setError ] = useState('');\r\n\r\n\tconst minPasswordLength = 2;\r\n\r\n\tconst signUpSchema = Joi.object({\r\n\t\temail: Joi.string().required().email({ minDomainSegments: 2, tlds: { allow: [ 'com', 'net' ] } }),\r\n\t\tpassword: Joi.string().required().min(minPasswordLength)\r\n\t});\r\n\r\n\tconst updateEmail = (input) => {\r\n\t\tsetEmail(input);\r\n\t\tif (input === '') setEmailInputEmpty(true);\r\n\t\telse setEmailInputEmpty(false);\r\n\t};\r\n\r\n\tconst updatePassword = (input) => {\r\n\t\tsetPassword(input);\r\n\t\tif (input === '') setPasswordInputEmpty(true);\r\n\t\telse setPasswordInputEmpty(false);\r\n\t};\r\n\r\n\tconst checkIfEncodeUriValid = (input) => {\r\n\t\treturn encodeURI(input) === input;\r\n\t};\r\n\r\n\tconst toCapitalize = (input) => {\r\n\t\treturn input.slice(0, 1).toUpperCase() + input.slice(1);\r\n\t};\r\n\r\n\tconst loginInformation = async () => {\r\n\t\tconsole.log('all logged in');\r\n\t\tconst emailUriEncoded = checkIfEncodeUriValid(email);\r\n\t\tconst passwordUriEncoded = checkIfEncodeUriValid(password);\r\n\r\n\t\tconst signUpValidation = signUpSchema.validate({ email, password });\r\n\r\n\t\tif (signUpValidation.error) {\r\n\t\t\tconst empty = signUpValidation.error.toString().includes('empty');\r\n\t\t\tconst valid = signUpValidation.error.toString().includes('valid');\r\n\t\t\tconst tooShort = signUpValidation.error.toString().includes('at least');\r\n\t\t\tconst errorField = signUpValidation.error.toString().split('\"')[1];\r\n\t\t\tif (empty) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ' cannot be empty');\r\n\t\t\t} else if (valid) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ' must be valid');\r\n\t\t\t} else if (errorField === 'password' && tooShort) {\r\n\t\t\t\treturn setError(toCapitalize(errorField) + ` must be at least ${minPasswordLength} characters long.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!emailUriEncoded || !passwordUriEncoded) {\r\n\t\t\treturn setError('Login information can only have letters and numbers!');\r\n\t\t}\r\n\r\n\t\t// console.log(username, email, password);\r\n\t\tconst data = { email, password };\r\n\t\tconst dataString = JSON.stringify(data);\r\n\t\ttry {\r\n\t\t\tconst logInRequest = await fetch(process.env.LOGIN_URL, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: dataString\r\n\t\t\t});\r\n\t\t\tconst loginJson = await logInRequest.json();\r\n\r\n\t\t\tif (loginJson.msg === 'Account login was unsuccessful. Please try again.') {\r\n\t\t\t\tsetError(loginJson.msg);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconsole.log(loginJson);\r\n\t\t\tsetError('');\r\n\t\t\tconst accessJwtToken = loginJson.access;\r\n\t\t\tconst refreshJwtToken = loginJson.refresh;\r\n\t\t\tlocalStorage.setItem('refresh-token', refreshJwtToken);\r\n\t\t\tconsole.log(setJwt(accessJwtToken));\r\n\t\t\tdispatch(setJwt(accessJwtToken));\r\n\r\n\t\t\treturn Router.push('/dashboard/home');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t\treturn;\r\n\t\t// \tconst data = { email: email, password: password };\r\n\t\t// \tconst dataString = JSON.stringify(data);\r\n\t\t// \tconst signInRequest = await fetch(process.env.LOGIN_URL, {\r\n\t\t// \t\tmethod: 'POST',\r\n\t\t// \t\theaders: {\r\n\t\t// \t\t\t'Content-Type': 'application/json',\r\n\t\t// \t\t\tAccept: 'application/json'\r\n\t\t// \t\t},\r\n\t\t// \t\tbody: dataString\r\n\t\t// \t});\r\n\t\t// \tconst signInJson = await signInRequest.json();\r\n\r\n\t\t// \tif (signInJson.error) {\r\n\t\t// \t\treturn setError(signInJson.error);\r\n\t\t// \t}\r\n\t\t// \tsetError('');\r\n\t\t// \tlocalStorage.setItem('jwt', signInJson.token);\r\n\t\t// \treturn router.push('/');\r\n\t};\r\n\r\n\tconst toggleViewPassword = () => {\r\n\t\tsetViewPassword(!viewPassword);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className={styles.loginContainer}>\r\n\t\t\t<div className={styles.images}>\r\n\t\t\t\t<img src=\"/images/cartoon-youtube.png\" alt=\"Youtube Workflow\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.loginTxt}>\r\n\t\t\t\t<img className={styles.logoImg} src=\"/images/logo.jpg\" />\r\n\t\t\t\t<h1>Welcome Back!</h1>\r\n\t\t\t\t<h5>\r\n\t\t\t\t\tTo keep putting out more of your amazing videos, please login in with your email address and\r\n\t\t\t\t\tpassword below.\r\n\t\t\t\t</h5>\r\n\t\t\t\t<div className={styles.signInSection}>\r\n\t\t\t\t\t<div className={styles.googleSignIn}>\r\n\t\t\t\t\t\t<img src=\"/images/google_logo.png\" />\r\n\t\t\t\t\t\t<h4>Sign In with Google</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.emailSignIn}>\r\n\t\t\t\t\t\t<p>Or sign-in with email</p>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !emailInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t{console.log(error)}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Email') })}\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updateEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({\r\n\t\t\t\t\t\t\t\t\t\t[styles.label]: true,\r\n\t\t\t\t\t\t\t\t\t\t[styles.labelHover]: !passwordInputEmpty\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName={classnames({ [styles.errorInput]: error.includes('Password') })}\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => updatePassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\ttype={viewPassword ? 'text' : 'password'}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<img src=\"/images/eye.png\" onClick={() => toggleViewPassword()} alt=\"Toggle Password\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span className={styles.loginError}>{error}</span>\r\n\t\t\t\t\t\t\t<div className={styles.submitEmailForm} onClick={() => loginInformation()}>\r\n\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3 className={styles.switchToSignUp}>\r\n\t\t\t\t\t\tDon't have an account?{'  '}\r\n\t\t\t\t\t\t<Link href=\"/signUp\">\r\n\t\t\t\t\t\t\t<span className={styles.signUpBtn}>Sign Up</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}